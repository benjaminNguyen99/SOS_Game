<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="20131001" xmlns:xmi="http://www.omg.org/spec/XMI/20131001" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:UMLLabProfile="http:///schemas/UMLLabProfile/NS/0" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:uml="http://www.eclipse.org/uml2/5.0.0/UML" xsi:schemaLocation="http:///schemas/UMLLabProfile/NS/0 pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile">
  <uml:Model xmi:id="_nqmCAFAfEeyq-N37BhvBHQ" name="SOS_CS449">
    <eAnnotations xmi:id="_nwWEsFAfEeyq-N37BhvBHQ" source="http://ns.yatta.de/umllab">
      <contents xmi:type="ecore:EAnnotation" xmi:id="_nwWEsVAfEeyq-N37BhvBHQ" source="codegen">
        <details xmi:id="_nwWEslAfEeyq-N37BhvBHQ" key="codegenDirectory" value="/SOS_CS449/src"/>
        <details xmi:id="_oEyqsFAfEeyq-N37BhvBHQ" key="AssociatedSourceCode" value="/SOS_CS449/src/NewClass1.java;2944449853/1;/SOS_CS449/src/AI/GUI_AI.java;4021060279/1;/SOS_CS449/src/AI/production_AI.java;3422444452/1;/SOS_CS449/src/AI/production_AI_general.java;3943505448/1;/SOS_CS449/src/SOSpackage/GUI.java;3886130391/1;/SOS_CS449/src/SOSpackage/Game.java;85176961/1;/SOS_CS449/src/SOSpackage/GeneralGame.java;4079014964/1;/SOS_CS449/src/SOSpackage/GeneralGamewithAI.java;768409065/1;/SOS_CS449/src/SOSpackage/SimpleGame.java;2625358401/1;/SOS_CS449/src/SOSpackage/SimpleGamewithAI.java;3602454823/1;/SOS_CS449/src/GameModeTest/ProductionGUI.java;2932148386/1;/SOS_CS449/src/GameModeTest/productionGame.java;3664175759/1;/SOS_CS449/src/GameModeTest/testGame.java;4272467696/1;/SOS_CS449/src/GetBoard/Getboad_test.java;564049436/1;/SOS_CS449/src/GetBoard/getboard.java;2362441745/1;/SOS_CS449/src/MakeSize/GUI_makesize.java;1468074628/1;/SOS_CS449/src/MakeSize/test_size.java;3824358883/1;/SOS_CS449/src/MakeMove/GUImove.java;2273568825/1;/SOS_CS449/src/MakeMove/productionMove.java;2748427787/1;/SOS_CS449/src/MakeMove/test_move.java;3438817025/1;/SOS_CS449/src/SetUpGame/productionGUI_newgame.java;1170494788/1;/SOS_CS449/src/SetUpGame/productionGUI_replay.java;4168853314/1;/SOS_CS449/src/SetUpGame/productionGame_newgame.java;1075806507/1;/SOS_CS449/src/SetUpGame/productionGame_replay.java;2999260640/1;/SOS_CS449/src/determinewinner/GUI_winner.java;4024181008/1;/SOS_CS449/src/determinewinner/production_winner.java;1899937382/1;/SOS_CS449/src/determinewinner/test_winner.java;3761704462/1;"/>
      </contents>
    </eAnnotations>
    <elementImport xmi:id="_n2ZCUFAfEeyq-N37BhvBHQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
    </elementImport>
    <elementImport xmi:id="_n2ZpYFAfEeyq-N37BhvBHQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#byte"/>
    </elementImport>
    <elementImport xmi:id="_n2ZpYVAfEeyq-N37BhvBHQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
    </elementImport>
    <elementImport xmi:id="_n2ZpYlAfEeyq-N37BhvBHQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
    </elementImport>
    <elementImport xmi:id="_n2ZpY1AfEeyq-N37BhvBHQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
    </elementImport>
    <elementImport xmi:id="_n2ZpZFAfEeyq-N37BhvBHQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
    </elementImport>
    <elementImport xmi:id="_n2ZpZVAfEeyq-N37BhvBHQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
    </elementImport>
    <elementImport xmi:id="_n2ZpZlAfEeyq-N37BhvBHQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#short"/>
    </elementImport>
    <elementImport xmi:id="_n2ZpZ1AfEeyq-N37BhvBHQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
    </elementImport>
    <packagedElement xmi:type="uml:Package" xmi:id="_n2aQcFAfEeyq-N37BhvBHQ" name="java">
      <packagedElement xmi:type="uml:Package" xmi:id="_n2aQcVAfEeyq-N37BhvBHQ" name="awt">
        <packagedElement xmi:type="uml:Package" xmi:id="_n2nr0FAfEeyq-N37BhvBHQ" name="event">
          <packagedElement xmi:type="uml:Interface" xmi:id="_n9V-4VAfEeyq-N37BhvBHQ" name="ActionListener"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_n9V-41AfEeyq-N37BhvBHQ" name="ActionEvent"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_n9FgMFAfEeyq-N37BhvBHQ" name="Font"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_n9H8cVAfEeyq-N37BhvBHQ" name="Color"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_n9VX0VAfEeyq-N37BhvBHQ" name="GridLayout"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_n9d6sFAfEeyq-N37BhvBHQ" name="BorderLayout"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_n9d6slAfEeyq-N37BhvBHQ" name="EventQueue"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_n2lPkFAfEeyq-N37BhvBHQ" name="util">
        <packagedElement xmi:type="uml:Class" xmi:id="_n9S7kFAfEeyq-N37BhvBHQ" name="Random"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_n9ehwVAfEeyq-N37BhvBHQ" name="ArrayList"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_n2aQclAfEeyq-N37BhvBHQ" name="javax">
      <packagedElement xmi:type="uml:Package" xmi:id="_n2aQc1AfEeyq-N37BhvBHQ" name="swing">
        <packagedElement xmi:type="uml:Package" xmi:id="_n2skUFAfEeyq-N37BhvBHQ" name="border">
          <packagedElement xmi:type="uml:Class" xmi:id="_n9fv4VAfEeyq-N37BhvBHQ" name="EmptyBorder"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_n9GHQVAfEeyq-N37BhvBHQ" name="JButton"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_n9GuUVAfEeyq-N37BhvBHQ" name="JPanel"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_n9IjgVAfEeyq-N37BhvBHQ" name="JOptionPane"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_n9M08FAfEeyq-N37BhvBHQ" name="ButtonGroup"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_n9M08lAfEeyq-N37BhvBHQ" name="JRadioButton"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_n9UwwFAfEeyq-N37BhvBHQ" name="JLabel"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_n9Wl8VAfEeyq-N37BhvBHQ" name="JTextField"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_n9fI0FAfEeyq-N37BhvBHQ" name="JFrame"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_n9fI0lAfEeyq-N37BhvBHQ" name="SwingUtilities"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_n2a3gFAfEeyq-N37BhvBHQ" name="AI">
      <packagedElement xmi:type="uml:Package" xmi:id="_n2d60FAfEeyq-N37BhvBHQ" name="production_AI">
        <packagedElement xmi:type="uml:Class" xmi:id="_n9KYsFAfEeyq-N37BhvBHQ" name="multi"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_n3Yg0FAfEeyq-N37BhvBHQ" name="GUI_AI">
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_n-hDkFAfEeyq-N37BhvBHQ" name="create" specification="_n3ZH4FAfEeyq-N37BhvBHQ">
          <ownedParameter xmi:id="_n-hDkVAfEeyq-N37BhvBHQ" type="_n9GHQVAfEeyq-N37BhvBHQ" direction="return">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_n-hDklAfEeyq-N37BhvBHQ" value="*"/>
          </ownedParameter>
          <language>java</language>
          <body>JButton[] Node = new JButton[9];&#xD;
		JPanel Grid = new JPanel();&#xD;
&#xD;
		for (int i = 0; i &lt;9; i++)&#xD;
		{&#xD;
			Node[i]= new JButton();&#xD;
			Grid.add(Node[i]);&#xD;
			Node[i].setFocusable(false);&#xD;
			Node[i].setFont(new Font(&quot;Tahoma&quot;, Font.PLAIN, 31));&#xD;
		}&#xD;
		Node[0].setText(&quot;S&quot;);&#xD;
		Node[1].setText(&quot;O&quot;);&#xD;
&#xD;
		return Node;&#xD;
		&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_n-hqoFAfEeyq-N37BhvBHQ" name="create_general" specification="_n3Zu8FAfEeyq-N37BhvBHQ">
          <ownedParameter xmi:id="_n-hqoVAfEeyq-N37BhvBHQ" type="_n9GHQVAfEeyq-N37BhvBHQ" direction="return">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_n-hqolAfEeyq-N37BhvBHQ" value="*"/>
          </ownedParameter>
          <language>java</language>
          <body>JButton[] Node = new JButton[9];&#xD;
		JPanel Grid = new JPanel();&#xD;
&#xD;
		for (int i = 0; i &lt;9; i++)&#xD;
		{&#xD;
			Node[i]= new JButton();&#xD;
			Grid.add(Node[i]);&#xD;
			Node[i].setFocusable(false);&#xD;
			Node[i].setFont(new Font(&quot;Tahoma&quot;, Font.PLAIN, 31));&#xD;
		}&#xD;
		&#xD;
&#xD;
		return Node;&#xD;
		&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_n3ZH4FAfEeyq-N37BhvBHQ" name="create" visibility="package" method="_n-hDkFAfEeyq-N37BhvBHQ">
          <ownedParameter xmi:id="_n3ZH4VAfEeyq-N37BhvBHQ" type="_n9GHQVAfEeyq-N37BhvBHQ" direction="return">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_n3ZH4lAfEeyq-N37BhvBHQ" value="*"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_n3Zu8FAfEeyq-N37BhvBHQ" name="create_general" visibility="package" method="_n-hqoFAfEeyq-N37BhvBHQ">
          <ownedParameter xmi:id="_n3Zu8VAfEeyq-N37BhvBHQ" type="_n9GHQVAfEeyq-N37BhvBHQ" direction="return">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_n3Zu8lAfEeyq-N37BhvBHQ" value="*"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_n3cyQVAfEeyq-N37BhvBHQ" name="production_AI">
        <ownedAttribute xmi:id="_n-EXoFAfEeyq-N37BhvBHQ" name="player1" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_n-EXoVAfEeyq-N37BhvBHQ" value="true"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_n-E-sFAfEeyq-N37BhvBHQ" name="player2" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_n-E-sVAfEeyq-N37BhvBHQ" value="false"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_n-iRsFAfEeyq-N37BhvBHQ" name="minimax" specification="_n9w1oFAfEeyq-N37BhvBHQ">
          <ownedParameter xmi:id="_n-iRsVAfEeyq-N37BhvBHQ" name="Node" type="_n9GHQVAfEeyq-N37BhvBHQ">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_n-iRslAfEeyq-N37BhvBHQ" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_n-iRs1AfEeyq-N37BhvBHQ" name="depth">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_n-iRtFAfEeyq-N37BhvBHQ" name="currentstate">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <ownedParameter xmi:id="_n-iRtVAfEeyq-N37BhvBHQ" name="c">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_n-iRtlAfEeyq-N37BhvBHQ" name="alpha">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_n-iRt1AfEeyq-N37BhvBHQ" name="beta">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_n-iRuFAfEeyq-N37BhvBHQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>boolean cond = true;&#xD;
			multi basecase = checkwinner(Node ,c, currentstate);&#xD;
			&#xD;
			if (basecase.no == &quot;player 2&quot; || basecase.no == &quot;player 1&quot;)&#xD;
			{&#xD;
				return 1;&#xD;
			}&#xD;
			else if (basecase.no == &quot;tie&quot;)&#xD;
			{&#xD;
				return 0;&#xD;
			}&#xD;
			else if (basecase.no == &quot;nothing&quot;)&#xD;
			{&#xD;
				return -1;&#xD;
			}&#xD;
		&#xD;
		if (currentstate == cond)&#xD;
		{&#xD;
			int best = -1000;&#xD;
			int d = depth+1;&#xD;
			for (int i = 0; i &lt;9; i++)&#xD;
			{&#xD;
				if (Node[i].getText() == &quot;&quot;)&#xD;
				{&#xD;
&#xD;
					Node[i].setText(&quot;S&quot;);&#xD;
					int score = minimax(Node, d, false, i, alpha, beta); &#xD;
					Node[i].setText(&quot;&quot;);&#xD;
					&#xD;
					&#xD;
					if (score == 1  )&#xD;
					{&#xD;
						best = score;&#xD;
						break;&#xD;
					}&#xD;
					else &#xD;
					{&#xD;
		&#xD;
						Node[i].setText(&quot;O&quot;);&#xD;
						int score2 = minimax(Node, d, false, i, alpha, beta);&#xD;
						Node[i].setText(&quot;&quot;);&#xD;
						&#xD;
						if (score2 > score )&#xD;
						{&#xD;
							best = score2;&#xD;
							break;&#xD;
						}&#xD;
						&#xD;
					}&#xD;
&#xD;
					&#xD;
				}&#xD;
			}&#xD;
			return best;&#xD;
		}&#xD;
		else&#xD;
		{&#xD;
			int best = 1000;&#xD;
			int d = depth+1;&#xD;
			for (int i = 0; i &lt; 9; i++)&#xD;
			{&#xD;
				if (Node[i].getText() == &quot;&quot;)&#xD;
				{&#xD;
				&#xD;
					Node[i].setText(&quot;S&quot;);&#xD;
					int score = minimax(Node, d, true,i, alpha, beta);&#xD;
					Node[i].setText(&quot;&quot;);&#xD;
					&#xD;
					if (score == -1)&#xD;
					{&#xD;
						best= score;&#xD;
						break;&#xD;
					}&#xD;
						&#xD;
					else&#xD;
					{&#xD;
					&#xD;
						Node[i].setText(&quot;O&quot;);&#xD;
						int score2 = minimax(Node, d, true,i, alpha, beta);&#xD;
					&#xD;
						Node[i].setText(&quot;&quot;);&#xD;
						&#xD;
						if (score2 &lt; score)&#xD;
						{&#xD;
							best = score2;&#xD;
							break;&#xD;
						}&#xD;
						&#xD;
					}&#xD;
					&#xD;
				}&#xD;
			}&#xD;
			return best;&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_n-iRuVAfEeyq-N37BhvBHQ" name="checkwinner" specification="_n9xcuFAfEeyq-N37BhvBHQ">
          <ownedParameter xmi:id="_n-iRulAfEeyq-N37BhvBHQ" name="Node" type="_n9GHQVAfEeyq-N37BhvBHQ">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_n-iRu1AfEeyq-N37BhvBHQ" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_n-iRvFAfEeyq-N37BhvBHQ" name="assign">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_n-iRvVAfEeyq-N37BhvBHQ" name="player">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <ownedParameter xmi:id="_n-iRvlAfEeyq-N37BhvBHQ" direction="return"/>
          <language>java</language>
          <body>int count =0;&#xD;
		int search_row = 0;&#xD;
		int search_column = 0;&#xD;
		int limit = (3 * 3)-1;&#xD;
		int total_row = 3;&#xD;
		int[] each_row = new int[3]; &#xD;
		int[] each_column = new int[3]; &#xD;
		&#xD;
		&#xD;
		for (int i =0; i &lt; 3; i++)&#xD;
		{&#xD;
			each_row[i]=i;&#xD;
		}&#xD;
		for (int i =0; i &lt; 3; i++)&#xD;
		{&#xD;
			if (i == 0)&#xD;
			{&#xD;
				each_column[i]=i;&#xD;
			}&#xD;
			else&#xD;
			{&#xD;
				each_column[i] = each_column[i-1]+ 3;&#xD;
			}&#xD;
			&#xD;
		}&#xD;
		outer : for (int i =0; i &lt; total_row; i++)&#xD;
		{&#xD;
			for (int b : each_column)&#xD;
			{&#xD;
				if (assign != b)&#xD;
				{&#xD;
					search_column += 1;&#xD;
					if (search_column == 3)&#xD;
					{&#xD;
						for (int c = 0; c &lt; each_column.length; c++)&#xD;
						{&#xD;
							each_column[c] += 1;&#xD;
						}&#xD;
						search_column = 0;&#xD;
					}&#xD;
				}&#xD;
				else&#xD;
				{&#xD;
					break outer;&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		&#xD;
		outer : for (int i =0; i &lt; total_row; i++)&#xD;
		{&#xD;
			for (int b : each_row)&#xD;
			{&#xD;
				if (assign != b)&#xD;
				{&#xD;
					search_row += 1;&#xD;
					if (search_row == 3)&#xD;
					{&#xD;
						for (int c = 0; c &lt; each_row.length; c++)&#xD;
						{&#xD;
							each_row[c] += 3;&#xD;
						}&#xD;
						search_row = 0;&#xD;
					}&#xD;
				}&#xD;
				else&#xD;
				{&#xD;
					break outer;&#xD;
				}&#xD;
			}&#xD;
				&#xD;
		}&#xD;
		if ( (!(assign-3&lt;0)) &amp;&amp;  ((assign+3&lt;limit)) )&#xD;
		{&#xD;
			if (Node[assign].getText() == &quot;O&quot; &amp;&amp; Node[assign-3].getText() == &quot;S&quot; &amp;&amp; Node[assign+3].getText() == &quot;S&quot; )&#xD;
			{&#xD;
				Node[assign-3].setForeground(Node[assign].getForeground());&#xD;
				Node[assign+3].setForeground(Node[assign].getForeground());&#xD;
				count++;&#xD;
			}&#xD;
		}&#xD;
		&#xD;
		if ( (!(assign-3-1&lt;0)) &amp;&amp;  ((assign+3+1&lt;limit)) &amp;&amp; (assign != each_row[0]) &amp;&amp; (assign != each_row[3-1]))&#xD;
		{&#xD;
			if (Node[assign].getText() == &quot;O&quot; &amp;&amp; Node[assign-3-1].getText() == &quot;S&quot; &amp;&amp; Node[assign+3+1].getText() == &quot;S&quot; )&#xD;
			{&#xD;
				Node[assign-3-1].setForeground(Node[assign].getForeground());&#xD;
				Node[assign+3+1].setForeground(Node[assign].getForeground());&#xD;
				count++;&#xD;
			}&#xD;
		}	&#xD;
		if ( (!(assign-3+1&lt;0)) &amp;&amp;  ((assign+3-1&lt;limit)) &amp;&amp; (assign != each_row[0]) &amp;&amp; (assign != each_row[3-1]))&#xD;
		{&#xD;
			if (Node[assign].getText() == &quot;O&quot; &amp;&amp; Node[assign-3+1].getText() == &quot;S&quot; &amp;&amp; Node[assign+3-1].getText() == &quot;S&quot; )&#xD;
			{&#xD;
				Node[assign-3+1].setForeground(Node[assign].getForeground());&#xD;
				Node[assign+3-1].setForeground(Node[assign].getForeground());&#xD;
				count++;&#xD;
			}&#xD;
		}&#xD;
		if ( (!(assign-1&lt;0)) &amp;&amp;  ((assign+1&lt;limit)) &amp;&amp; (!(assign-1&lt;each_row[0])) &amp;&amp; (!(assign +1>each_row[3-1])))&#xD;
		{&#xD;
			if (Node[assign].getText() == &quot;O&quot; &amp;&amp; Node[assign-1].getText() == &quot;S&quot; &amp;&amp; Node[assign+1].getText() == &quot;S&quot; )&#xD;
			{&#xD;
				Node[assign-1].setForeground(Node[assign].getForeground());&#xD;
				Node[assign+1].setForeground(Node[assign].getForeground());&#xD;
				count++;&#xD;
			}&#xD;
		}&#xD;
		if ( ((!(assign-3&lt;0)) &amp;&amp; (!(assign-(3*2)&lt;0))))&#xD;
		{&#xD;
			if (Node[assign].getText() == &quot;S&quot; &amp;&amp; Node[assign-3].getText() == &quot;O&quot; &amp;&amp; Node[assign-(3*2)].getText() == &quot;S&quot; )&#xD;
			{&#xD;
				Node[assign-3].setForeground(Node[assign].getForeground());&#xD;
				Node[assign-(3*2)].setForeground(Node[assign].getForeground());&#xD;
				count++;&#xD;
			}&#xD;
			&#xD;
		}&#xD;
		if ( (((assign+3&lt;limit))  &amp;&amp;  ((assign+(3*2)&lt;limit))))&#xD;
		{&#xD;
			&#xD;
			if (Node[assign].getText() == &quot;S&quot; &amp;&amp; Node[assign+3].getText() == &quot;O&quot; &amp;&amp; Node[assign+(3*2)].getText() == &quot;S&quot; )&#xD;
			{&#xD;
				Node[assign+3].setForeground(Node[assign].getForeground());&#xD;
				Node[assign+(3*2)].setForeground(Node[assign].getForeground());&#xD;
				count++;&#xD;
			}&#xD;
		}&#xD;
		if ( ((!(assign-1&lt;0)) &amp;&amp; (!(assign-2&lt;0))) &amp;&amp; (!(assign-1&lt;each_row[0])) &amp;&amp; (!(assign -2 &lt; each_row[0])))&#xD;
		{&#xD;
			if (Node[assign].getText() == &quot;S&quot; &amp;&amp; Node[assign-1].getText() == &quot;O&quot; &amp;&amp; Node[assign-2].getText() == &quot;S&quot; )&#xD;
			{&#xD;
				Node[assign-1].setForeground(Node[assign].getForeground());&#xD;
				Node[assign-2].setForeground(Node[assign].getForeground());&#xD;
				count++;&#xD;
			}&#xD;
		}&#xD;
		if (   (assign+1&lt;limit) &amp;&amp;  (assign+2&lt;limit) &amp;&amp; (!(assign+1>each_row[3-1])) &amp;&amp; (!(assign+2 > each_row[3-1])))&#xD;
		{&#xD;
			&#xD;
			if (Node[assign].getText() == &quot;S&quot; &amp;&amp; Node[assign+1].getText() == &quot;O&quot; &amp;&amp; Node[assign+2].getText() == &quot;S&quot; )&#xD;
			{&#xD;
				Node[assign+1].setForeground(Node[assign].getForeground());&#xD;
				Node[assign+2].setForeground(Node[assign].getForeground());&#xD;
				count++;&#xD;
			}&#xD;
		}&#xD;
 		if (   ((assign+3+1&lt;limit))&amp;&amp; ((assign+((3+1)*2)&lt;limit)) &amp;&amp; (assign!=each_row[3-1])  )&#xD;
		{&#xD;
			if (Node[assign].getText() == &quot;S&quot; &amp;&amp; Node[assign+3+1].getText() == &quot;O&quot; &amp;&amp; Node[assign+((3+1)*2)].getText() == &quot;S&quot; )&#xD;
			{&#xD;
				Node[assign+3+1].setForeground(Node[assign].getForeground());&#xD;
				Node[assign+((3+1)*2)].setForeground(Node[assign].getForeground());&#xD;
				count++;&#xD;
			}&#xD;
		}&#xD;
		if (  (!(assign-3-1&lt;0)) &amp;&amp; (!(assign+((-3-1)*2)&lt;0)) &amp;&amp; (assign!=each_row[0]))&#xD;
		{&#xD;
			if (Node[assign].getText() == &quot;S&quot; &amp;&amp; Node[assign-3-1].getText() == &quot;O&quot; &amp;&amp; Node[assign+((-3-1)*2)].getText() == &quot;S&quot; )&#xD;
			{&#xD;
				Node[assign-3-1].setForeground(Node[assign].getForeground());&#xD;
				Node[assign+((-3-1)*2)].setForeground(Node[assign].getForeground());&#xD;
				count++;&#xD;
			}&#xD;
		}&#xD;
		if (  (!(assign+3-1>limit)) &amp;&amp; (!(assign+((3-1)*2)>limit)) &amp;&amp; (assign!=each_row[0])&amp;&amp; (assign!=each_row[1]))&#xD;
		{&#xD;
			if (Node[assign].getText() == &quot;S&quot; &amp;&amp; Node[assign+3-1].getText() == &quot;O&quot; &amp;&amp; Node[assign+((3-1)*2)].getText() == &quot;S&quot; )&#xD;
			{&#xD;
				Node[assign+3-1].setForeground(Node[assign].getForeground());&#xD;
				Node[assign+((3-1)*2)].setForeground(Node[assign].getForeground());&#xD;
				count++;&#xD;
			}&#xD;
		}&#xD;
		if (  (!(assign-3+1&lt;0)) &amp;&amp; (!(assign+((-3+1)*2)&lt;0))&amp;&amp; (assign!=each_row[3-1] &amp;&amp; (assign!=each_row[3-2] )))&#xD;
		{&#xD;
			if (Node[assign].getText() == &quot;S&quot; &amp;&amp; Node[assign-3+1].getText() == &quot;O&quot; &amp;&amp; Node[assign+((-3+1)*2)].getText() == &quot;S&quot; )&#xD;
			{&#xD;
				Node[assign-3+1].setForeground(Node[assign].getForeground());&#xD;
				Node[assign+((-3+1)*2)].setForeground(Node[assign].getForeground());&#xD;
				count++;&#xD;
			}&#xD;
			&#xD;
		}&#xD;
		if (   ((assign+3+1&lt;limit))&amp;&amp; ((assign+((3+1)*2)&lt;limit)) &amp;&amp; (assign!=each_row[3-1]) )&#xD;
		{&#xD;
			&#xD;
			if (Node[assign].getText() == &quot;S&quot; &amp;&amp; Node[assign+3+1].getText() == &quot;O&quot; &amp;&amp; Node[assign+((3+1)*2)].getText() == &quot;S&quot; )&#xD;
			{&#xD;
				Node[assign+3+1].setForeground(Node[assign].getForeground());&#xD;
				Node[assign+((3+1)*2)].setForeground(Node[assign].getForeground());&#xD;
				count++;&#xD;
			}&#xD;
		}&#xD;
		int c = 0;&#xD;
		for (int i =0; i &lt; limit; i++)&#xD;
		{&#xD;
			if (Node[i].getText() != &quot;&quot;)&#xD;
			{&#xD;
				c+=1;&#xD;
			}&#xD;
		}&#xD;
		&#xD;
		if (count != 0 &amp;&amp; player == true)&#xD;
		{&#xD;
			&#xD;
			return new multi(count, &quot;player 1&quot;);&#xD;
		}&#xD;
		else if (count != 0 &amp;&amp; player == false)&#xD;
		{&#xD;
			&#xD;
			return new multi(count, &quot;player 2&quot;);&#xD;
		}&#xD;
		else if (c==3*3 &amp;&amp; count == 0) &#xD;
		{&#xD;
			return new multi(count, &quot;tie&quot;);&#xD;
		}&#xD;
		else&#xD;
		{&#xD;
			return new multi(count, &quot;nothing&quot;);&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_n-iRv1AfEeyq-N37BhvBHQ" name="forAI" specification="_n3fOgFAfEeyq-N37BhvBHQ">
          <ownedParameter xmi:id="_n-iRwFAfEeyq-N37BhvBHQ" type="_n9GHQVAfEeyq-N37BhvBHQ" direction="return">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_n-iRwVAfEeyq-N37BhvBHQ" value="*"/>
          </ownedParameter>
          <language>java</language>
          <body>int signal = -10000;&#xD;
		int pick_index = 0;&#xD;
		int c =0;&#xD;
		int score =0, score2=0;&#xD;
		String pickit=&quot;&quot;;&#xD;
		GUI_AI win = new GUI_AI(); &#xD;
		JButton[] Node = new JButton[9]; //case if player 1 is the winner&#xD;
		Node = win.create();&#xD;
&#xD;
&#xD;
		for (int a = 0; a &lt; 9; a++)&#xD;
		{&#xD;
			if(Node[a].getText()== &quot;&quot;)&#xD;
			{&#xD;
				&#xD;
				&#xD;
			&#xD;
				Node[a].setForeground(new Color(255, 0, 0));&#xD;
				Node[a].setText(&quot;S&quot;);&#xD;
		&#xD;
				score = minimax(Node, 0, false,a, -1000000, 1000000);&#xD;
				Node[a].setForeground(null);&#xD;
				Node[a].setText(&quot;&quot;);&#xD;
				Node[a].setForeground(new Color(255, 0, 0));&#xD;
				Node[a].setText(&quot;O&quot;);&#xD;
				score2 = minimax(Node, 0, false,a, -1000000, 1000000);&#xD;
				Node[a].setForeground(null);&#xD;
				Node[a].setText(&quot;&quot;);&#xD;
				&#xD;
			&#xD;
				if (score > signal) &#xD;
				{&#xD;
					&#xD;
					pickit = &quot;S&quot;;&#xD;
					signal = score;&#xD;
					pick_index = a;&#xD;
					&#xD;
				}&#xD;
				if ( score2>signal )&#xD;
				{&#xD;
					pickit = &quot;O&quot;;&#xD;
					signal = score2;&#xD;
					pick_index = a;&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		&#xD;
			if (player1)&#xD;
			{&#xD;
				player1= false;&#xD;
				player2=true;&#xD;
				Node[pick_index].setFont(new Font(&quot;Tahoma&quot;, Font.PLAIN, 20));&#xD;
		&#xD;
			}&#xD;
			else&#xD;
			{&#xD;
				player1= true;&#xD;
				player2=false;&#xD;
				Node[pick_index].setFont(new Font(&quot;Tahoma&quot;, Font.PLAIN, 20));&#xD;
			&#xD;
			}&#xD;
			Node[pick_index].setText(pickit);&#xD;
&#xD;
		&#xD;
	&#xD;
			multi checker = checkwinner(Node, pick_index, true);&#xD;
			&#xD;
			if (checker.no != &quot;tie&quot;)&#xD;
			{&#xD;
				return Node;					&#xD;
			}&#xD;
			else if (checker.no == &quot;tie&quot;)&#xD;
			{&#xD;
				return Node;&#xD;
			}&#xD;
			else&#xD;
			{&#xD;
				return Node;&#xD;
			}&#xD;
&#xD;
		</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_n3fOgFAfEeyq-N37BhvBHQ" name="forAI" method="_n-iRv1AfEeyq-N37BhvBHQ">
          <ownedParameter xmi:id="_n3fOgVAfEeyq-N37BhvBHQ" type="_n9GHQVAfEeyq-N37BhvBHQ" direction="return">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_n3f1kFAfEeyq-N37BhvBHQ" value="*"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_n9w1oFAfEeyq-N37BhvBHQ" name="minimax" method="_n-iRsFAfEeyq-N37BhvBHQ">
          <ownedParameter xmi:id="_n9xcsFAfEeyq-N37BhvBHQ" name="Node" type="_n9GHQVAfEeyq-N37BhvBHQ">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_n9xct1AfEeyq-N37BhvBHQ" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_n9xcsVAfEeyq-N37BhvBHQ" name="depth">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_n9xcslAfEeyq-N37BhvBHQ" name="currentstate">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <ownedParameter xmi:id="_n9xcs1AfEeyq-N37BhvBHQ" name="c">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_n9xctFAfEeyq-N37BhvBHQ" name="alpha">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_n9xctVAfEeyq-N37BhvBHQ" name="beta">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_n9xctlAfEeyq-N37BhvBHQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_n9xcuFAfEeyq-N37BhvBHQ" name="checkwinner" method="_n-iRuVAfEeyq-N37BhvBHQ">
          <ownedParameter xmi:id="_n9yDwFAfEeyq-N37BhvBHQ" name="Node" type="_n9GHQVAfEeyq-N37BhvBHQ">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_n9yDxFAfEeyq-N37BhvBHQ" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_n9yDwVAfEeyq-N37BhvBHQ" name="assign">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_n9yDwlAfEeyq-N37BhvBHQ" name="player">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <ownedParameter xmi:id="_n9yDw1AfEeyq-N37BhvBHQ" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_n3hDsFAfEeyq-N37BhvBHQ" name="production_AI_general">
        <ownedAttribute xmi:id="_n-FlwVAfEeyq-N37BhvBHQ" name="player1" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_n-FlwlAfEeyq-N37BhvBHQ" value="true"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_n-GM0FAfEeyq-N37BhvBHQ" name="player2" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_n-GM0VAfEeyq-N37BhvBHQ" value="true"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_n-i4wFAfEeyq-N37BhvBHQ" name="minimax" specification="_n9yq0FAfEeyq-N37BhvBHQ">
          <ownedParameter xmi:id="_n-i4wVAfEeyq-N37BhvBHQ" name="Node" type="_n9GHQVAfEeyq-N37BhvBHQ">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_n-i4wlAfEeyq-N37BhvBHQ" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_n-i4w1AfEeyq-N37BhvBHQ" name="depth">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_n-i4xFAfEeyq-N37BhvBHQ" name="currentstate">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <ownedParameter xmi:id="_n-i4xVAfEeyq-N37BhvBHQ" name="c">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_n-i4xlAfEeyq-N37BhvBHQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>boolean cond = true;&#xD;
				multi basecase = checkwinner(Node ,c, currentstate);&#xD;
				&#xD;
				if (basecase.no == &quot;player&quot; )&#xD;
				{&#xD;
					return 1;&#xD;
				}&#xD;
				&#xD;
				else if (basecase.no == &quot;tie&quot;)&#xD;
				{&#xD;
					return 0;&#xD;
				}&#xD;
				&#xD;
			&#xD;
			if (currentstate == cond)&#xD;
			{&#xD;
				int best = -1000;&#xD;
				int d = depth+1;&#xD;
				for (int i = 0; i &lt;9; i++)&#xD;
				{&#xD;
					if (Node[i].getText() == &quot;&quot;)&#xD;
					{&#xD;
&#xD;
						Node[i].setText(&quot;S&quot;);&#xD;
						int score = minimax(Node, d, false, i); &#xD;
						Node[i].setText(&quot;&quot;);&#xD;
						&#xD;
						best = score;&#xD;
						if (score == 1 || score == 0 )&#xD;
						{&#xD;
							&#xD;
							break;&#xD;
						}&#xD;
						else &#xD;
						{&#xD;
			&#xD;
							Node[i].setText(&quot;O&quot;);&#xD;
							int score2 = minimax(Node, d, false, i);&#xD;
							Node[i].setText(&quot;&quot;);&#xD;
							&#xD;
							if (score2 >= best )&#xD;
							{&#xD;
								best = score2;&#xD;
								break;&#xD;
							}&#xD;
							&#xD;
						}&#xD;
&#xD;
						&#xD;
					}&#xD;
				}&#xD;
				return best;&#xD;
			}&#xD;
			else&#xD;
			{&#xD;
				int best = 1000;&#xD;
				int d = depth+1;&#xD;
				for (int i = 0; i &lt; 9; i++)&#xD;
				{&#xD;
					if (Node[i].getText() == &quot;&quot;)&#xD;
					{&#xD;
					&#xD;
						Node[i].setText(&quot;S&quot;);&#xD;
						int score = minimax(Node, d, true,i);&#xD;
						Node[i].setText(&quot;&quot;);&#xD;
						best= score;&#xD;
						if (score == 0)&#xD;
						{&#xD;
							&#xD;
							break;&#xD;
						}&#xD;
							&#xD;
						else&#xD;
						{&#xD;
						&#xD;
							Node[i].setText(&quot;O&quot;);&#xD;
							int score2 = minimax(Node, d, true,i);&#xD;
						&#xD;
							Node[i].setText(&quot;&quot;);&#xD;
							&#xD;
							if (score2 &lt;= best)&#xD;
							{&#xD;
								best = score2;&#xD;
								break;&#xD;
							}&#xD;
							&#xD;
						}&#xD;
						&#xD;
					}&#xD;
				}&#xD;
				return best;&#xD;
			}&#xD;
		</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_n-i4x1AfEeyq-N37BhvBHQ" name="checkwinner" specification="_n9zR4FAfEeyq-N37BhvBHQ">
          <ownedParameter xmi:id="_n-i4yFAfEeyq-N37BhvBHQ" name="Node" type="_n9GHQVAfEeyq-N37BhvBHQ">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_n-i4yVAfEeyq-N37BhvBHQ" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_n-i4ylAfEeyq-N37BhvBHQ" name="assign">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_n-i4y1AfEeyq-N37BhvBHQ" name="player">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <ownedParameter xmi:id="_n-i4zFAfEeyq-N37BhvBHQ" direction="return"/>
          <language>java</language>
          <body>int count =0;&#xD;
			int search_row = 0;&#xD;
			int search_column = 0;&#xD;
			int limit = (3 * 3)-1;&#xD;
			int total_row = 3;&#xD;
			int[] each_row = new int[3]; &#xD;
			int[] each_column = new int[3]; &#xD;
			&#xD;
			&#xD;
			for (int i =0; i &lt; 3; i++)&#xD;
			{&#xD;
				each_row[i]=i;&#xD;
			}&#xD;
			for (int i =0; i &lt; 3; i++)&#xD;
			{&#xD;
				if (i == 0)&#xD;
				{&#xD;
					each_column[i]=i;&#xD;
				}&#xD;
				else&#xD;
				{&#xD;
					each_column[i] = each_column[i-1]+ 3;&#xD;
				}&#xD;
				&#xD;
			}&#xD;
			outer : for (int i =0; i &lt; total_row; i++)&#xD;
			{&#xD;
				for (int b : each_column)&#xD;
				{&#xD;
					if (assign != b)&#xD;
					{&#xD;
						search_column += 1;&#xD;
						if (search_column == 3)&#xD;
						{&#xD;
							for (int c = 0; c &lt; each_column.length; c++)&#xD;
							{&#xD;
								each_column[c] += 1;&#xD;
							}&#xD;
							search_column = 0;&#xD;
						}&#xD;
					}&#xD;
					else&#xD;
					{&#xD;
						break outer;&#xD;
					}&#xD;
				}&#xD;
			}&#xD;
			&#xD;
			outer : for (int i =0; i &lt; total_row; i++)&#xD;
			{&#xD;
				for (int b : each_row)&#xD;
				{&#xD;
					if (assign != b)&#xD;
					{&#xD;
						search_row += 1;&#xD;
						if (search_row == 3)&#xD;
						{&#xD;
							for (int c = 0; c &lt; each_row.length; c++)&#xD;
							{&#xD;
								each_row[c] += 3;&#xD;
							}&#xD;
							search_row = 0;&#xD;
						}&#xD;
					}&#xD;
					else&#xD;
					{&#xD;
						break outer;&#xD;
					}&#xD;
				}&#xD;
					&#xD;
			}&#xD;
			if ( (!(assign-3&lt;0)) &amp;&amp;  ((assign+3&lt;limit)) )&#xD;
			{&#xD;
				if (Node[assign].getText() == &quot;O&quot; &amp;&amp; Node[assign-3].getText() == &quot;S&quot; &amp;&amp; Node[assign+3].getText() == &quot;S&quot; )&#xD;
				{&#xD;
					Node[assign-3].setForeground(Node[assign].getForeground());&#xD;
					Node[assign+3].setForeground(Node[assign].getForeground());&#xD;
					count++;&#xD;
				}&#xD;
			}&#xD;
			&#xD;
			if ( (!(assign-3-1&lt;0)) &amp;&amp;  ((assign+3+1&lt;limit)) &amp;&amp; (assign != each_row[0]) &amp;&amp; (assign != each_row[3-1]))&#xD;
			{&#xD;
				if (Node[assign].getText() == &quot;O&quot; &amp;&amp; Node[assign-3-1].getText() == &quot;S&quot; &amp;&amp; Node[assign+3+1].getText() == &quot;S&quot; )&#xD;
				{&#xD;
					Node[assign-3-1].setForeground(Node[assign].getForeground());&#xD;
					Node[assign+3+1].setForeground(Node[assign].getForeground());&#xD;
					count++;&#xD;
				}&#xD;
			}	&#xD;
			if ( (!(assign-3+1&lt;0)) &amp;&amp;  ((assign+3-1&lt;limit)) &amp;&amp; (assign != each_row[0]) &amp;&amp; (assign != each_row[3-1]))&#xD;
			{&#xD;
				if (Node[assign].getText() == &quot;O&quot; &amp;&amp; Node[assign-3+1].getText() == &quot;S&quot; &amp;&amp; Node[assign+3-1].getText() == &quot;S&quot; )&#xD;
				{&#xD;
					Node[assign-3+1].setForeground(Node[assign].getForeground());&#xD;
					Node[assign+3-1].setForeground(Node[assign].getForeground());&#xD;
					count++;&#xD;
				}&#xD;
			}&#xD;
			if ( (!(assign-1&lt;0)) &amp;&amp;  ((assign+1&lt;limit)) &amp;&amp; (!(assign-1&lt;each_row[0])) &amp;&amp; (!(assign +1>each_row[3-1])))&#xD;
			{&#xD;
				if (Node[assign].getText() == &quot;O&quot; &amp;&amp; Node[assign-1].getText() == &quot;S&quot; &amp;&amp; Node[assign+1].getText() == &quot;S&quot; )&#xD;
				{&#xD;
					Node[assign-1].setForeground(Node[assign].getForeground());&#xD;
					Node[assign+1].setForeground(Node[assign].getForeground());&#xD;
					count++;&#xD;
				}&#xD;
			}&#xD;
			if ( ((!(assign-3&lt;0)) &amp;&amp; (!(assign-(3*2)&lt;0))))&#xD;
			{&#xD;
				if (Node[assign].getText() == &quot;S&quot; &amp;&amp; Node[assign-3].getText() == &quot;O&quot; &amp;&amp; Node[assign-(3*2)].getText() == &quot;S&quot; )&#xD;
				{&#xD;
					Node[assign-3].setForeground(Node[assign].getForeground());&#xD;
					Node[assign-(3*2)].setForeground(Node[assign].getForeground());&#xD;
					count++;&#xD;
				}&#xD;
				&#xD;
			}&#xD;
			if ( (((assign+3&lt;limit))  &amp;&amp;  ((assign+(3*2)&lt;limit))))&#xD;
			{&#xD;
				&#xD;
				if (Node[assign].getText() == &quot;S&quot; &amp;&amp; Node[assign+3].getText() == &quot;O&quot; &amp;&amp; Node[assign+(3*2)].getText() == &quot;S&quot; )&#xD;
				{&#xD;
					Node[assign+3].setForeground(Node[assign].getForeground());&#xD;
					Node[assign+(3*2)].setForeground(Node[assign].getForeground());&#xD;
					count++;&#xD;
				}&#xD;
			}&#xD;
			if ( ((!(assign-1&lt;0)) &amp;&amp; (!(assign-2&lt;0))) &amp;&amp; (!(assign-1&lt;each_row[0])) &amp;&amp; (!(assign -2 &lt; each_row[0])))&#xD;
			{&#xD;
				if (Node[assign].getText() == &quot;S&quot; &amp;&amp; Node[assign-1].getText() == &quot;O&quot; &amp;&amp; Node[assign-2].getText() == &quot;S&quot; )&#xD;
				{&#xD;
					Node[assign-1].setForeground(Node[assign].getForeground());&#xD;
					Node[assign-2].setForeground(Node[assign].getForeground());&#xD;
					count++;&#xD;
				}&#xD;
			}&#xD;
			if (   (assign+1&lt;limit) &amp;&amp;  (assign+2&lt;limit) &amp;&amp; (!(assign+1>each_row[3-1])) &amp;&amp; (!(assign+2 > each_row[3-1])))&#xD;
			{&#xD;
				&#xD;
				if (Node[assign].getText() == &quot;S&quot; &amp;&amp; Node[assign+1].getText() == &quot;O&quot; &amp;&amp; Node[assign+2].getText() == &quot;S&quot; )&#xD;
				{&#xD;
					Node[assign+1].setForeground(Node[assign].getForeground());&#xD;
					Node[assign+2].setForeground(Node[assign].getForeground());&#xD;
					count++;&#xD;
				}&#xD;
			}&#xD;
	 		if (   ((assign+3+1&lt;limit))&amp;&amp; ((assign+((3+1)*2)&lt;limit)) &amp;&amp; (assign!=each_row[3-1])  )&#xD;
			{&#xD;
				if (Node[assign].getText() == &quot;S&quot; &amp;&amp; Node[assign+3+1].getText() == &quot;O&quot; &amp;&amp; Node[assign+((3+1)*2)].getText() == &quot;S&quot; )&#xD;
				{&#xD;
					Node[assign+3+1].setForeground(Node[assign].getForeground());&#xD;
					Node[assign+((3+1)*2)].setForeground(Node[assign].getForeground());&#xD;
					count++;&#xD;
				}&#xD;
			}&#xD;
			if (  (!(assign-3-1&lt;0)) &amp;&amp; (!(assign+((-3-1)*2)&lt;0)) &amp;&amp; (assign!=each_row[0]))&#xD;
			{&#xD;
				if (Node[assign].getText() == &quot;S&quot; &amp;&amp; Node[assign-3-1].getText() == &quot;O&quot; &amp;&amp; Node[assign+((-3-1)*2)].getText() == &quot;S&quot; )&#xD;
				{&#xD;
					Node[assign-3-1].setForeground(Node[assign].getForeground());&#xD;
					Node[assign+((-3-1)*2)].setForeground(Node[assign].getForeground());&#xD;
					count++;&#xD;
				}&#xD;
			}&#xD;
			if (  (!(assign+3-1>limit)) &amp;&amp; (!(assign+((3-1)*2)>limit)) &amp;&amp; (assign!=each_row[0])&amp;&amp; (assign!=each_row[1]))&#xD;
			{&#xD;
				if (Node[assign].getText() == &quot;S&quot; &amp;&amp; Node[assign+3-1].getText() == &quot;O&quot; &amp;&amp; Node[assign+((3-1)*2)].getText() == &quot;S&quot; )&#xD;
				{&#xD;
					Node[assign+3-1].setForeground(Node[assign].getForeground());&#xD;
					Node[assign+((3-1)*2)].setForeground(Node[assign].getForeground());&#xD;
					count++;&#xD;
				}&#xD;
			}&#xD;
			if (  (!(assign-3+1&lt;0)) &amp;&amp; (!(assign+((-3+1)*2)&lt;0))&amp;&amp; (assign!=each_row[3-1] &amp;&amp; (assign!=each_row[3-2] )))&#xD;
			{&#xD;
				if (Node[assign].getText() == &quot;S&quot; &amp;&amp; Node[assign-3+1].getText() == &quot;O&quot; &amp;&amp; Node[assign+((-3+1)*2)].getText() == &quot;S&quot; )&#xD;
				{&#xD;
					Node[assign-3+1].setForeground(Node[assign].getForeground());&#xD;
					Node[assign+((-3+1)*2)].setForeground(Node[assign].getForeground());&#xD;
					count++;&#xD;
				}&#xD;
				&#xD;
			}&#xD;
			if (   ((assign+3+1&lt;limit))&amp;&amp; ((assign+((3+1)*2)&lt;limit)) &amp;&amp; (assign!=each_row[3-1]) )&#xD;
			{&#xD;
				&#xD;
				if (Node[assign].getText() == &quot;S&quot; &amp;&amp; Node[assign+3+1].getText() == &quot;O&quot; &amp;&amp; Node[assign+((3+1)*2)].getText() == &quot;S&quot; )&#xD;
				{&#xD;
					Node[assign+3+1].setForeground(Node[assign].getForeground());&#xD;
					Node[assign+((3+1)*2)].setForeground(Node[assign].getForeground());&#xD;
					count++;&#xD;
				}&#xD;
			}&#xD;
			int c = 0;&#xD;
			for (int i =0; i &lt; limit; i++)&#xD;
			{&#xD;
				if (Node[i].getText() != &quot;&quot;)&#xD;
				{&#xD;
					c+=1;&#xD;
				}&#xD;
			}&#xD;
			&#xD;
			if (count != 0 )&#xD;
			{&#xD;
				&#xD;
				return new multi(count, &quot;player&quot;);&#xD;
			}&#xD;
			&#xD;
			else if (c==3*3 &amp;&amp; count == 0) &#xD;
			{&#xD;
				return new multi(count, &quot;tie&quot;);&#xD;
			}&#xD;
			else&#xD;
			{&#xD;
				return new multi(count, &quot;nothing&quot;);&#xD;
			}&#xD;
		</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_n-i4zVAfEeyq-N37BhvBHQ" name="forAI" specification="_n9zR5lAfEeyq-N37BhvBHQ">
          <ownedParameter xmi:id="_n-i4zlAfEeyq-N37BhvBHQ" name="a">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_n-i4z1AfEeyq-N37BhvBHQ" name="Node" type="_n9GHQVAfEeyq-N37BhvBHQ">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_n-i40FAfEeyq-N37BhvBHQ" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_n-i40VAfEeyq-N37BhvBHQ" name="player">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <ownedParameter xmi:id="_n-i40lAfEeyq-N37BhvBHQ" type="_n9GHQVAfEeyq-N37BhvBHQ" direction="return">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_n-i401AfEeyq-N37BhvBHQ" value="*"/>
          </ownedParameter>
          <language>java</language>
          <body>int signal = -10000;&#xD;
			int pick_index = 0;&#xD;
&#xD;
			int score =0, score2=0;&#xD;
			String pickit=&quot;&quot;;&#xD;
&#xD;
			&#xD;
			&#xD;
			&#xD;
&#xD;
&#xD;
			&#xD;
				if(Node[a].getText()== &quot;&quot;)&#xD;
				{&#xD;
					&#xD;
					&#xD;
				&#xD;
					Node[a].setForeground(new Color(255, 0, 0));&#xD;
					Node[a].setText(&quot;S&quot;);&#xD;
			&#xD;
					score = minimax(Node, 0, false,a);&#xD;
					Node[a].setForeground(null);&#xD;
					Node[a].setText(&quot;&quot;);&#xD;
					Node[a].setForeground(new Color(255, 0, 0));&#xD;
					Node[a].setText(&quot;O&quot;);&#xD;
					score2 = minimax(Node, 0, false,a);&#xD;
					Node[a].setForeground(null);&#xD;
					Node[a].setText(&quot;&quot;);&#xD;
					&#xD;
				&#xD;
					if (score > signal) &#xD;
					{&#xD;
						&#xD;
						pickit = &quot;S&quot;;&#xD;
						signal = score;&#xD;
						pick_index = a;&#xD;
						&#xD;
					}&#xD;
					else if ( score2>signal )&#xD;
					{&#xD;
						pickit = &quot;O&quot;;&#xD;
						signal = score2;&#xD;
						pick_index = a;&#xD;
					}&#xD;
				}&#xD;
			&#xD;
			&#xD;
				&#xD;
				Node[pick_index].setText(pickit);&#xD;
&#xD;
			&#xD;
		&#xD;
				&#xD;
				return Node;&#xD;
				&#xD;
			</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_n9yq0FAfEeyq-N37BhvBHQ" name="minimax" method="_n-i4wFAfEeyq-N37BhvBHQ">
          <ownedParameter xmi:id="_n9yq0VAfEeyq-N37BhvBHQ" name="Node" type="_n9GHQVAfEeyq-N37BhvBHQ">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_n9yq1lAfEeyq-N37BhvBHQ" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_n9yq0lAfEeyq-N37BhvBHQ" name="depth">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_n9yq01AfEeyq-N37BhvBHQ" name="currentstate">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <ownedParameter xmi:id="_n9yq1FAfEeyq-N37BhvBHQ" name="c">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_n9yq1VAfEeyq-N37BhvBHQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_n9zR4FAfEeyq-N37BhvBHQ" name="checkwinner" method="_n-i4x1AfEeyq-N37BhvBHQ">
          <ownedParameter xmi:id="_n9zR4VAfEeyq-N37BhvBHQ" name="Node" type="_n9GHQVAfEeyq-N37BhvBHQ">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_n9zR5VAfEeyq-N37BhvBHQ" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_n9zR4lAfEeyq-N37BhvBHQ" name="assign">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_n9zR41AfEeyq-N37BhvBHQ" name="player">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <ownedParameter xmi:id="_n9zR5FAfEeyq-N37BhvBHQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_n9zR5lAfEeyq-N37BhvBHQ" name="forAI" method="_n-i4zVAfEeyq-N37BhvBHQ">
          <ownedParameter xmi:id="_n9z48FAfEeyq-N37BhvBHQ" name="a">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_n9z48VAfEeyq-N37BhvBHQ" name="Node" type="_n9GHQVAfEeyq-N37BhvBHQ">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_n9z49lAfEeyq-N37BhvBHQ" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_n9z48lAfEeyq-N37BhvBHQ" name="player">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <ownedParameter xmi:id="_n9z481AfEeyq-N37BhvBHQ" type="_n9GHQVAfEeyq-N37BhvBHQ" direction="return">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_n9z49FAfEeyq-N37BhvBHQ" value="*"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_n2bekFAfEeyq-N37BhvBHQ" name="org">
      <packagedElement xmi:type="uml:Package" xmi:id="_n2bekVAfEeyq-N37BhvBHQ" name="junit">
        <packagedElement xmi:type="uml:Package" xmi:id="_n2beklAfEeyq-N37BhvBHQ" name="jupiter">
          <packagedElement xmi:type="uml:Package" xmi:id="_n2bek1AfEeyq-N37BhvBHQ" name="api">
            <packagedElement xmi:type="uml:Class" xmi:id="_n9HVYFAfEeyq-N37BhvBHQ" name="Assertions"/>
            <packagedElement xmi:type="uml:Interface" xmi:id="_n9HVYlAfEeyq-N37BhvBHQ" name="Test"/>
          </packagedElement>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_n2iMQFAfEeyq-N37BhvBHQ" name="runner">
          <packagedElement xmi:type="uml:Package" xmi:id="_n2iMQVAfEeyq-N37BhvBHQ" name="notification">
            <packagedElement xmi:type="uml:Class" xmi:id="_n9RGYVAfEeyq-N37BhvBHQ" name="Failure"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_n9P4Q1AfEeyq-N37BhvBHQ" name="JUnitCore"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_n9QfUVAfEeyq-N37BhvBHQ" name="Result"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_n9MN4FAfEeyq-N37BhvBHQ" name="Assert"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_n9NcAVAfEeyq-N37BhvBHQ" name="Test"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_n2cFoFAfEeyq-N37BhvBHQ" name="SOSpackage">
      <packagedElement xmi:type="uml:Package" xmi:id="_n2cFoVAfEeyq-N37BhvBHQ" name="Game"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_n3w7UlAfEeyq-N37BhvBHQ" name="GUI">
        <generalization xmi:id="_n96molAfEeyq-N37BhvBHQ" general="_n9GuUVAfEeyq-N37BhvBHQ"/>
        <ownedAttribute xmi:id="_n-M6gFAfEeyq-N37BhvBHQ" name="game" visibility="package" type="_n37TYFAfEeyq-N37BhvBHQ" association="_n-3B0lAfEeyq-N37BhvBHQ"/>
        <ownedAttribute xmi:id="_n-M6glAfEeyq-N37BhvBHQ" name="Isize" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_n-M6g1AfEeyq-N37BhvBHQ" value="isNumeric()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_n-NhkVAfEeyq-N37BhvBHQ" name="Node" visibility="package" type="_n9GHQVAfEeyq-N37BhvBHQ" association="_n-3o4VAfEeyq-N37BhvBHQ">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_n-NhklAfEeyq-N37BhvBHQ" value="*"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_n-NhlFAfEeyq-N37BhvBHQ" value="new JButton[Isize*Isize]"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_n-OIoFAfEeyq-N37BhvBHQ" name="Grid" visibility="package" type="_n9GuUVAfEeyq-N37BhvBHQ" association="_n-3o5FAfEeyq-N37BhvBHQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_n-OIoVAfEeyq-N37BhvBHQ" value="new JPanel()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_n-OIo1AfEeyq-N37BhvBHQ" name="greenturn" visibility="package" type="_n9UwwFAfEeyq-N37BhvBHQ" association="_n-4P8VAfEeyq-N37BhvBHQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_n-OIpFAfEeyq-N37BhvBHQ" value="new JLabel(&quot;&quot;)"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_n-OvsFAfEeyq-N37BhvBHQ" name="redturn" visibility="package" type="_n9UwwFAfEeyq-N37BhvBHQ" association="_n-43AFAfEeyq-N37BhvBHQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_n-OvsVAfEeyq-N37BhvBHQ" value="new JLabel(&quot;&quot;)"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_n-Ovs1AfEeyq-N37BhvBHQ" name="S1" visibility="package" type="_n9M08lAfEeyq-N37BhvBHQ" association="_n-43A1AfEeyq-N37BhvBHQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_n-OvtFAfEeyq-N37BhvBHQ" value="new JRadioButton(&quot;S&quot;)"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_n-PWwFAfEeyq-N37BhvBHQ" name="O1" visibility="package" type="_n9M08lAfEeyq-N37BhvBHQ" association="_n-5eEVAfEeyq-N37BhvBHQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_n-PWwVAfEeyq-N37BhvBHQ" value="new JRadioButton(&quot;O&quot;)"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_n-PWw1AfEeyq-N37BhvBHQ" name="S2" visibility="package" type="_n9M08lAfEeyq-N37BhvBHQ" association="_n-6FIFAfEeyq-N37BhvBHQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_n-PWxFAfEeyq-N37BhvBHQ" value="new JRadioButton(&quot;S&quot;)"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_n-PWxlAfEeyq-N37BhvBHQ" name="O2" visibility="package" type="_n9M08lAfEeyq-N37BhvBHQ" association="_n-6FI1AfEeyq-N37BhvBHQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_n-P90FAfEeyq-N37BhvBHQ" value="new JRadioButton(&quot;O&quot;)"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_n-P90lAfEeyq-N37BhvBHQ" name="SO1" visibility="package" type="_n9M08FAfEeyq-N37BhvBHQ" association="_n-6sMVAfEeyq-N37BhvBHQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_n-P901AfEeyq-N37BhvBHQ" value="new ButtonGroup()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_n-P91VAfEeyq-N37BhvBHQ" name="SO2" visibility="package" type="_n9M08FAfEeyq-N37BhvBHQ" association="_n-6sNFAfEeyq-N37BhvBHQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_n-Qk4FAfEeyq-N37BhvBHQ" value="new ButtonGroup()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_n-Qk4lAfEeyq-N37BhvBHQ" name="mode" visibility="package" type="_n9M08FAfEeyq-N37BhvBHQ" association="_n-7TQVAfEeyq-N37BhvBHQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_n-Qk41AfEeyq-N37BhvBHQ" value="new ButtonGroup()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_n-Qk5VAfEeyq-N37BhvBHQ" name="p2" visibility="package" type="_n9M08FAfEeyq-N37BhvBHQ" association="_n-7TRFAfEeyq-N37BhvBHQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_n-Qk5lAfEeyq-N37BhvBHQ" value="new ButtonGroup()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_n-RL8VAfEeyq-N37BhvBHQ" name="p1" visibility="package" type="_n9M08FAfEeyq-N37BhvBHQ" association="_n-76UVAfEeyq-N37BhvBHQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_n-RL8lAfEeyq-N37BhvBHQ" value="new ButtonGroup()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_n-RL9FAfEeyq-N37BhvBHQ" name="replay" visibility="package" type="_n9GHQVAfEeyq-N37BhvBHQ" association="_n-8hYFAfEeyq-N37BhvBHQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_n-RL9VAfEeyq-N37BhvBHQ" value="new JButton(&quot;Replay&quot;)"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_n-RzAVAfEeyq-N37BhvBHQ" name="newgame" visibility="package" type="_n9GHQVAfEeyq-N37BhvBHQ" association="_n-8hY1AfEeyq-N37BhvBHQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_n-RzAlAfEeyq-N37BhvBHQ" value="new JButton(&quot;New Game&quot;)"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_n-RzBFAfEeyq-N37BhvBHQ" name="P1score" visibility="package" type="_n9GHQVAfEeyq-N37BhvBHQ" association="_n-9IcVAfEeyq-N37BhvBHQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_n-RzBVAfEeyq-N37BhvBHQ" value="new JButton(&quot;0&quot;)"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_n-SaEVAfEeyq-N37BhvBHQ" name="P2score" visibility="package" type="_n9GHQVAfEeyq-N37BhvBHQ" association="_n-9IdFAfEeyq-N37BhvBHQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_n-SaElAfEeyq-N37BhvBHQ" value="new JButton(&quot;0&quot;)"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_n-SaFFAfEeyq-N37BhvBHQ" name="comp1" visibility="package" type="_n9M08lAfEeyq-N37BhvBHQ" association="_n-9vgVAfEeyq-N37BhvBHQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_n-SaFVAfEeyq-N37BhvBHQ" value="new JRadioButton(&quot;Computer&quot;)"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_n-TBIVAfEeyq-N37BhvBHQ" name="human1" visibility="package" type="_n9M08lAfEeyq-N37BhvBHQ" association="_n-9vhFAfEeyq-N37BhvBHQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_n-TBIlAfEeyq-N37BhvBHQ" value="new JRadioButton(&quot;Human&quot;)"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_n-TBJFAfEeyq-N37BhvBHQ" name="human2" visibility="package" type="_n9M08lAfEeyq-N37BhvBHQ" association="_n--WkVAfEeyq-N37BhvBHQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_n-TBJVAfEeyq-N37BhvBHQ" value="new JRadioButton(&quot;Human&quot;)"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_n-ToMVAfEeyq-N37BhvBHQ" name="comp2" visibility="package" type="_n9M08lAfEeyq-N37BhvBHQ" association="_n--9oVAfEeyq-N37BhvBHQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_n-ToMlAfEeyq-N37BhvBHQ" value="new JRadioButton(&quot;Computer&quot;)"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_n-ToNFAfEeyq-N37BhvBHQ" name="simplegame" visibility="package" type="_n9M08lAfEeyq-N37BhvBHQ" association="_n--9pFAfEeyq-N37BhvBHQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_n-ToNVAfEeyq-N37BhvBHQ" value="new JRadioButton(&quot;Simple Game&quot;)"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_n-UPQVAfEeyq-N37BhvBHQ" name="genegame" visibility="package" type="_n9M08lAfEeyq-N37BhvBHQ" association="_n-_ksVAfEeyq-N37BhvBHQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_n-UPQlAfEeyq-N37BhvBHQ" value="new JRadioButton(&quot;General Game&quot;)"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_n-UPRFAfEeyq-N37BhvBHQ" name="btnStartGame" visibility="package" type="_n9GHQVAfEeyq-N37BhvBHQ" association="_n-_ktFAfEeyq-N37BhvBHQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_n-UPRVAfEeyq-N37BhvBHQ" value="new JButton(&quot;Start Game&quot;)"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_n-U2UVAfEeyq-N37BhvBHQ" name="greenside" visibility="package" type="_n9UwwFAfEeyq-N37BhvBHQ" association="_n_ALwVAfEeyq-N37BhvBHQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_n-U2UlAfEeyq-N37BhvBHQ" value="new JLabel(&quot;&quot;)"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_n-U2VFAfEeyq-N37BhvBHQ" name="redside" visibility="package" type="_n9UwwFAfEeyq-N37BhvBHQ" association="_n_Ay0FAfEeyq-N37BhvBHQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_n-U2VVAfEeyq-N37BhvBHQ" value="new JLabel(&quot;&quot;)"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_n-VdYVAfEeyq-N37BhvBHQ" name="intromode" visibility="package" type="_n9UwwFAfEeyq-N37BhvBHQ" association="_n_Ay01AfEeyq-N37BhvBHQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_n-VdYlAfEeyq-N37BhvBHQ" value="new JLabel(&quot;&quot;)"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_n-VdZFAfEeyq-N37BhvBHQ" name="P1score_1_1" visibility="package" type="_n9GHQVAfEeyq-N37BhvBHQ" association="_n_BZ4VAfEeyq-N37BhvBHQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_n-VdZVAfEeyq-N37BhvBHQ" value="new JButton(&quot;0&quot;)"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_n-WEcFAfEeyq-N37BhvBHQ" name="P1score_1" visibility="package" type="_n9GHQVAfEeyq-N37BhvBHQ" association="_n_BZ5FAfEeyq-N37BhvBHQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_n-WEcVAfEeyq-N37BhvBHQ" value="new JButton(&quot;0&quot;)"/>
        </ownedAttribute>
        <interfaceRealization xmi:id="_n93jUFAfEeyq-N37BhvBHQ" client="_n3w7UlAfEeyq-N37BhvBHQ" supplier="_n9V-4VAfEeyq-N37BhvBHQ" contract="_n9V-4VAfEeyq-N37BhvBHQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_n-kt8VAfEeyq-N37BhvBHQ" name="isNumeric" specification="_n3zXkFAfEeyq-N37BhvBHQ">
          <ownedParameter xmi:id="_n-kt8lAfEeyq-N37BhvBHQ" direction="return">
            <name xsi:nil="true"/>
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>String S = JOptionPane.showInputDialog(&quot;Enter a number \&quot;n\&quot; to create your board (nxn)\n n:&quot; );&#xD;
   		&#xD;
   		int d =0;&#xD;
   		&#xD;
   	    while (true)&#xD;
   	    {&#xD;
   	    	if (S == null) {&#xD;
   	    		System.exit(0);&#xD;
   	    		JOptionPane.showMessageDialog(null, &quot;Please enter a valid number to create board!&quot;);&#xD;
   	    		&#xD;
   		    }&#xD;
   	    	&#xD;
   	    	else&#xD;
   	    	{&#xD;
   	    		try {&#xD;
   			        d = Integer.parseInt(S);&#xD;
   			        if (d &lt;3)&#xD;
   			        {&#xD;
   			        	JOptionPane.showMessageDialog(null, &quot;The size must be from 3!&quot;);&#xD;
   			        	S = JOptionPane.showInputDialog(&quot;Enter a number n to create your board (nxn) :&quot;);&#xD;
   			        }&#xD;
   			        else &#xD;
   			        {&#xD;
   			        	return d;&#xD;
   			        }&#xD;
   			        &#xD;
   			    } catch (NumberFormatException nfe) {&#xD;
   			    	&#xD;
   			    	JOptionPane.showMessageDialog(null, &quot;Valid input must be a number&quot;);&#xD;
   			    	S = JOptionPane.showInputDialog(&quot;Enter a number n to create your board (nxn) :&quot;);&#xD;
   			    }&#xD;
   			    &#xD;
   	    	}&#xD;
   		    &#xD;
   		    &#xD;
   	    }&#xD;
   	    &#xD;
   	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_n-kt81AfEeyq-N37BhvBHQ" name="GUI" specification="_n9YbIFAfEeyq-N37BhvBHQ">
          <ownedParameter xmi:id="_n-kt9FAfEeyq-N37BhvBHQ" name="parentGame" type="_n37TYFAfEeyq-N37BhvBHQ"/>
          <ownedParameter xmi:id="_n-kt9VAfEeyq-N37BhvBHQ" type="_n3w7UlAfEeyq-N37BhvBHQ" direction="return">
            <name xsi:nil="true"/>
          </ownedParameter>
          <language>java</language>
          <body>game = parentGame;&#xD;
   		setLayout(null);&#xD;
   		&#xD;
   		JLabel Title = new JLabel(&quot;Benjamin Nguyen SOS Game&quot;);&#xD;
   		Title.setFont(new Font(&quot;Tahoma&quot;, Font.PLAIN, 40));&#xD;
   		Title.setBounds(282, 105, 529, 52);&#xD;
   		add(Title);&#xD;
   		&#xD;
   		&#xD;
   		human1.setFont(new Font(&quot;Tahoma&quot;, Font.PLAIN, 26));&#xD;
   		human1.setBounds(23, 267, 172, 59);&#xD;
   		add(human1);&#xD;
   		&#xD;
   &#xD;
   		S1.setFont(new Font(&quot;Tahoma&quot;, Font.PLAIN, 26));&#xD;
   		S1.setBounds(55, 329, 172, 59);&#xD;
   		add(S1);&#xD;
   		&#xD;
   		&#xD;
   		&#xD;
   		O1.setFont(new Font(&quot;Tahoma&quot;, Font.PLAIN, 26));&#xD;
   		O1.setBounds(55, 401, 172, 59);&#xD;
   		add(O1);&#xD;
   		&#xD;
   		&#xD;
   		comp1.setFont(new Font(&quot;Tahoma&quot;, Font.PLAIN, 26));&#xD;
   		comp1.setBounds(23, 475, 172, 59);&#xD;
   		add(comp1);&#xD;
   		&#xD;
   		&#xD;
   		human2.setFont(new Font(&quot;Tahoma&quot;, Font.PLAIN, 26));&#xD;
   		human2.setBounds(893, 267, 172, 59);&#xD;
   		add(human2);&#xD;
   		&#xD;
   		&#xD;
   		S2.setFont(new Font(&quot;Tahoma&quot;, Font.PLAIN, 26));&#xD;
   		S2.setBounds(934, 329, 172, 59);&#xD;
   		add(S2);&#xD;
   		&#xD;
   		&#xD;
   		O2.setFont(new Font(&quot;Tahoma&quot;, Font.PLAIN, 26));&#xD;
   		O2.setBounds(934, 401, 172, 59);&#xD;
   		add(O2);&#xD;
   		&#xD;
   		&#xD;
   		comp2.setFont(new Font(&quot;Tahoma&quot;, Font.PLAIN, 26));&#xD;
   		comp2.setBounds(893, 475, 172, 59);&#xD;
   		add(comp2);&#xD;
   		&#xD;
   		&#xD;
   		simplegame.setFont(new Font(&quot;Tahoma&quot;, Font.PLAIN, 26));&#xD;
   		simplegame.setBounds(306, 164, 234, 59);&#xD;
   		add(simplegame);&#xD;
   		&#xD;
   		genegame.setFont(new Font(&quot;Tahoma&quot;, Font.PLAIN, 26));&#xD;
   		genegame.setBounds(581, 164, 195, 59);&#xD;
   		add(genegame);&#xD;
   		&#xD;
   		Grid.setForeground(Color.WHITE);&#xD;
   		Grid.setSize(470, 476);&#xD;
   		Grid.setLocation(306, 231);&#xD;
   		Grid.setLayout(new GridLayout(Isize, Isize));&#xD;
   		Grid.setBackground(new Color(150, 150, 150));&#xD;
   		&#xD;
   		getboard();&#xD;
   		&#xD;
   		&#xD;
   		add(Grid);&#xD;
   		&#xD;
   		replay.addActionListener(new ActionListener() {&#xD;
   			public void actionPerformed(ActionEvent e) {&#xD;
   				btnStartGame.setEnabled(true);&#xD;
   				game.enableradio();&#xD;
   				initial();&#xD;
   				game.resetgame();&#xD;
   				greenside.setText(&quot;&quot;);&#xD;
   				redside.setText(&quot;&quot;);&#xD;
   				intromode.setText(&quot;&quot;);&#xD;
   			}&#xD;
   		});&#xD;
   		&#xD;
   		replay.setFont(new Font(&quot;Tahoma&quot;, Font.PLAIN, 30));&#xD;
   		replay.setBounds(878, 768, 172, 67);&#xD;
   		add(replay);&#xD;
   		&#xD;
   		btnStartGame.addActionListener(new ActionListener() {&#xD;
   			public void actionPerformed(ActionEvent e) {&#xD;
   				btnStartGame.setEnabled(false);&#xD;
   				game.disableradio();&#xD;
   				initial();&#xD;
   				game.resetgame();&#xD;
   				game.whogofirst();&#xD;
   				game.printnoti();&#xD;
   				Node[0].setText(&quot;S&quot;);&#xD;
   				Node[3].setText(&quot;O&quot;);&#xD;
   				&#xD;
   				&#xD;
   				if (simplegame.isSelected() &amp;&amp; (comp2.isSelected() || comp1.isSelected()))&#xD;
   				{&#xD;
   					game.frame =   new SimpleGamewithAI(game.gui); &#xD;
   					if (comp1.isSelected() &amp;&amp; comp2.isSelected())&#xD;
   					{&#xD;
   						for (int i =0; i &lt; Isize*Isize; i++)&#xD;
   						{&#xD;
   							if (game.player1 || game.player2)&#xD;
   							{&#xD;
   								game.forAI();	&#xD;
   							}&#xD;
   						}&#xD;
   						&#xD;
   					}&#xD;
   				}&#xD;
   				else if (genegame.isSelected() &amp;&amp; (comp2.isSelected() || comp1.isSelected()))&#xD;
   				{&#xD;
   					game.frame =   new GeneralGamewithAI(game.gui); &#xD;
   					if (comp1.isSelected() &amp;&amp; comp2.isSelected())&#xD;
   					{&#xD;
   						for (int i =0; i &lt; Isize*Isize; i++)&#xD;
   						{&#xD;
   							if (game.player1 || game.player2)&#xD;
   							{&#xD;
   								game.forAI();	&#xD;
   							}&#xD;
   						}&#xD;
   						&#xD;
   					}&#xD;
   				}&#xD;
   				else if (simplegame.isSelected())&#xD;
   				{&#xD;
   					game.frame =   new SimpleGame(game.gui); &#xD;
   				}&#xD;
   				else if (genegame.isSelected())&#xD;
   				{&#xD;
   					game.frame =   new GeneralGame(game.gui); &#xD;
   				}&#xD;
   				&#xD;
   				&#xD;
   			}&#xD;
   		});&#xD;
   		&#xD;
   		replay.setFont(new Font(&quot;Tahoma&quot;, Font.PLAIN, 30));&#xD;
   		replay.setBounds(878, 768, 172, 67);&#xD;
   		add(replay);&#xD;
   		add(btnStartGame);&#xD;
   		&#xD;
   		&#xD;
   		newgame.addActionListener(new ActionListener() {&#xD;
   			public void actionPerformed(ActionEvent e) {&#xD;
   			&#xD;
   				&#xD;
   				initial();&#xD;
   				game.enableradio();&#xD;
   				game.resetgame();&#xD;
   				btnStartGame.setEnabled(true);&#xD;
   				P1score.setText(&quot;0&quot;);&#xD;
   				P2score.setText(&quot;0&quot;);&#xD;
   				greenside.setText(&quot;&quot;);&#xD;
   				redside.setText(&quot;&quot;);&#xD;
   				intromode.setText(&quot;&quot;);&#xD;
   				game.score1 = 0;&#xD;
   				game.score2 = 0;&#xD;
   				&#xD;
   			}&#xD;
   		});&#xD;
   		newgame.setFont(new Font(&quot;Tahoma&quot;, Font.PLAIN, 28));&#xD;
   		newgame.setBounds(878, 861, 172, 67);&#xD;
   		add(newgame);&#xD;
   		&#xD;
   		&#xD;
   		greenturn.setFont(new Font(&quot;Tahoma&quot;, Font.PLAIN, 30)); greenturn.setBounds(39, 630, 188, 44); add(greenturn);&#xD;
   		redturn.setFont(new Font(&quot;Tahoma&quot;, Font.PLAIN, 30)); redturn.setBounds(862, 630, 188, 44); add(redturn);&#xD;
   		&#xD;
   		p1.add(human1); p1.add(comp1);&#xD;
   		&#xD;
   		p2.add(human2); p2.add(comp2);&#xD;
   		&#xD;
   		SO1.add(S1); SO1.add(O1);&#xD;
   		&#xD;
   		SO2.add(S2); SO2.add(O2);&#xD;
   		&#xD;
   		mode.add(simplegame); mode.add(genegame);&#xD;
    &#xD;
    JLabel P1 = new JLabel(&quot;Player 1&quot;);&#xD;
    P1.setFont(new Font(&quot;Tahoma&quot;, Font.PLAIN, 33));&#xD;
    P1.setBounds(39, 108, 140, 52);&#xD;
    add(P1);&#xD;
    &#xD;
    &#xD;
    P1score.setFont(new Font(&quot;Tahoma&quot;, Font.PLAIN, 30));&#xD;
    P1score.setBounds(55, 164, 89, 61);&#xD;
    add(P1score);&#xD;
    &#xD;
    JLabel P2 = new JLabel(&quot;Player 2&quot;);&#xD;
    P2.setFont(new Font(&quot;Tahoma&quot;, Font.PLAIN, 33));&#xD;
    P2.setBounds(896, 108, 140, 52);&#xD;
    add(P2);&#xD;
    &#xD;
    P2score.setFont(new Font(&quot;Tahoma&quot;, Font.PLAIN, 30));&#xD;
    P2score.setBounds(912, 162, 89, 61);&#xD;
    add(P2score);&#xD;
    &#xD;
    JLabel lblNewLabel = new JLabel(&quot;Board Size&quot;);&#xD;
    lblNewLabel.setFont(new Font(&quot;Tahoma&quot;, Font.PLAIN, 30));&#xD;
    lblNewLabel.setBounds(842, 38, 164, 59);&#xD;
    add(lblNewLabel);&#xD;
    btnStartGame.setFont(new Font(&quot;Tahoma&quot;, Font.PLAIN, 30));&#xD;
    btnStartGame.setBounds(39, 821, 214, 67);&#xD;
    greenside.setFont(new Font(&quot;Tahoma&quot;, Font.PLAIN, 20));&#xD;
    greenside.setBounds(306, 732, 204, 44);&#xD;
    &#xD;
    add(greenside);&#xD;
    redside.setFont(new Font(&quot;Tahoma&quot;, Font.PLAIN, 20));&#xD;
    redside.setBounds(572, 732, 204, 44);&#xD;
    &#xD;
    add(redside);&#xD;
    intromode.setFont(new Font(&quot;Tahoma&quot;, Font.PLAIN, 20));&#xD;
    intromode.setBounds(306, 787, 470, 44);&#xD;
    &#xD;
    add(intromode);&#xD;
    &#xD;
    JButton displaysize = new JButton(&quot;&quot;);&#xD;
    displaysize.setFont(new Font(&quot;Tahoma&quot;, Font.PLAIN, 20));&#xD;
    displaysize.setBounds(1003, 38, 89, 49);&#xD;
    add(displaysize);&#xD;
    displaysize.setText(String.valueOf(Isize));&#xD;
    &#xD;
    &#xD;
    P1score_1.setFont(new Font(&quot;Tahoma&quot;, Font.PLAIN, 20));&#xD;
    P1score_1.setBounds(154, 173, 49, 52);&#xD;
    add(P1score_1);&#xD;
    &#xD;
   &#xD;
    P1score_1_1.setFont(new Font(&quot;Tahoma&quot;, Font.PLAIN, 20));&#xD;
    P1score_1_1.setBounds(853, 171, 49, 52);&#xD;
    add(P1score_1_1);&#xD;
    &#xD;
   &#xD;
   	&#xD;
   	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_n-kt9lAfEeyq-N37BhvBHQ" name="initial" specification="_n3z-oFAfEeyq-N37BhvBHQ">
          <language>java</language>
          <body>redturn.setText(&quot;&quot;);&#xD;
   		greenturn.setText(&quot;&quot;);&#xD;
   		SO1.clearSelection();&#xD;
   		SO2.clearSelection();&#xD;
   		&#xD;
   &#xD;
   	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_n-kt91AfEeyq-N37BhvBHQ" name="p1first" specification="_n3z-oVAfEeyq-N37BhvBHQ">
          <language>java</language>
          <body>greenturn.setText(&quot;Green Turn&quot;);&#xD;
   		greenturn.setForeground(new Color(0,255,0));&#xD;
   	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_n-kt-FAfEeyq-N37BhvBHQ" name="p2first" specification="_n3z-olAfEeyq-N37BhvBHQ">
          <language>java</language>
          <body>redturn.setText(&quot;Red Turn&quot;);&#xD;
   		redturn.setForeground(new Color(255,0,0));&#xD;
   	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_n-lVAFAfEeyq-N37BhvBHQ" name="change1" specification="_n3z-o1AfEeyq-N37BhvBHQ">
          <ownedParameter xmi:id="_n-lVAVAfEeyq-N37BhvBHQ" name="c">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>redturn.setText(&quot;Red Turn&quot;);&#xD;
   		greenturn.setText(&quot;&quot;);&#xD;
   		redturn.setForeground(new Color(255,0,0));&#xD;
   		Node[c].setForeground(new Color(0, 255, 0));&#xD;
   	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_n-lVAlAfEeyq-N37BhvBHQ" name="getboard" specification="_n3z-pVAfEeyq-N37BhvBHQ">
          <language>java</language>
          <body>for (int i = 0; i &lt;Isize*Isize; i++)&#xD;
   		{&#xD;
   			Node[i]= new JButton();&#xD;
   			Grid.add(Node[i]);&#xD;
   			Node[i].setFocusable(false);&#xD;
   			Node[i].setFont(new Font(&quot;Tahoma&quot;, Font.PLAIN, 31));&#xD;
   			Node[i].addActionListener(this);&#xD;
   		}&#xD;
   		&#xD;
   	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_n-lVA1AfEeyq-N37BhvBHQ" name="actionPerformed" specification="_n95_kFAfEeyq-N37BhvBHQ">
          <ownedParameter xmi:id="_n-lVBFAfEeyq-N37BhvBHQ" name="e" type="_n9V-41AfEeyq-N37BhvBHQ"/>
          <language>java</language>
          <body>game.actionPerformed(e);&#xD;
   		&#xD;
   		&#xD;
   	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_n-lVBVAfEeyq-N37BhvBHQ" name="change2" specification="_n30lsFAfEeyq-N37BhvBHQ">
          <ownedParameter xmi:id="_n-lVBlAfEeyq-N37BhvBHQ" name="d">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>greenturn.setText(&quot;Green Turn&quot;);&#xD;
   		redturn.setText(&quot;&quot;);&#xD;
   		greenturn.setForeground(new Color(0,255,0));&#xD;
   		Node[d].setForeground(new Color(255, 0, 0));&#xD;
   	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_n3zXkFAfEeyq-N37BhvBHQ" name="isNumeric" isStatic="true" method="_n-kt8VAfEeyq-N37BhvBHQ">
          <ownedParameter xmi:id="_n3zXkVAfEeyq-N37BhvBHQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_n3z-oFAfEeyq-N37BhvBHQ" name="initial" method="_n-kt9lAfEeyq-N37BhvBHQ"/>
        <ownedOperation xmi:id="_n3z-oVAfEeyq-N37BhvBHQ" name="p1first" method="_n-kt91AfEeyq-N37BhvBHQ"/>
        <ownedOperation xmi:id="_n3z-olAfEeyq-N37BhvBHQ" name="p2first" method="_n-kt-FAfEeyq-N37BhvBHQ"/>
        <ownedOperation xmi:id="_n3z-o1AfEeyq-N37BhvBHQ" name="change1" method="_n-lVAFAfEeyq-N37BhvBHQ">
          <ownedParameter xmi:id="_n3z-pFAfEeyq-N37BhvBHQ" name="c">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_n3z-pVAfEeyq-N37BhvBHQ" name="getboard" method="_n-lVAlAfEeyq-N37BhvBHQ"/>
        <ownedOperation xmi:id="_n30lsFAfEeyq-N37BhvBHQ" name="change2" method="_n-lVBVAfEeyq-N37BhvBHQ">
          <ownedParameter xmi:id="_n30lsVAfEeyq-N37BhvBHQ" name="d">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_n9YbIFAfEeyq-N37BhvBHQ" name="GUI" method="_n-kt81AfEeyq-N37BhvBHQ">
          <eAnnotations xmi:id="_n9YbIlAfEeyq-N37BhvBHQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_n9YbI1AfEeyq-N37BhvBHQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_n9YbIVAfEeyq-N37BhvBHQ" name="parentGame" type="_n37TYFAfEeyq-N37BhvBHQ"/>
          <ownedParameter xmi:id="_n9YbJFAfEeyq-N37BhvBHQ" type="_n3w7UlAfEeyq-N37BhvBHQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_n95_kFAfEeyq-N37BhvBHQ" name="actionPerformed" method="_n-lVA1AfEeyq-N37BhvBHQ">
          <ownedParameter xmi:id="_n95_kVAfEeyq-N37BhvBHQ" name="e" type="_n9V-41AfEeyq-N37BhvBHQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_n37TYFAfEeyq-N37BhvBHQ" name="Game">
        <generalization xmi:id="_n9-RBVAfEeyq-N37BhvBHQ" general="_n9fI0FAfEeyq-N37BhvBHQ"/>
        <ownedAttribute xmi:id="_n-WrgFAfEeyq-N37BhvBHQ" name="contentPane" visibility="private" type="_n9GuUVAfEeyq-N37BhvBHQ" association="_n_CA8VAfEeyq-N37BhvBHQ"/>
        <ownedAttribute xmi:id="_n-WrglAfEeyq-N37BhvBHQ" name="player1" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_n-XSkFAfEeyq-N37BhvBHQ" name="player2" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_n-XSklAfEeyq-N37BhvBHQ" name="gui" visibility="package" type="_n3w7UlAfEeyq-N37BhvBHQ" association="_n_CoAFAfEeyq-N37BhvBHQ"/>
        <ownedAttribute xmi:id="_n-XSlFAfEeyq-N37BhvBHQ" name="score1" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_n-XSlVAfEeyq-N37BhvBHQ" value="0"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_n-X5oVAfEeyq-N37BhvBHQ" name="score2" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_n-X5olAfEeyq-N37BhvBHQ" value="0"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_n-X5pFAfEeyq-N37BhvBHQ" name="temp_score1" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_n-X5pVAfEeyq-N37BhvBHQ" value="0"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_n-YgsVAfEeyq-N37BhvBHQ" name="temp_score2" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_n-YgslAfEeyq-N37BhvBHQ" value="0"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_n-YgtFAfEeyq-N37BhvBHQ" name="rnd" visibility="package" type="_n9S7kFAfEeyq-N37BhvBHQ" association="_n_CoA1AfEeyq-N37BhvBHQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_n-YgtVAfEeyq-N37BhvBHQ" value="new Random()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_n-ZHwFAfEeyq-N37BhvBHQ" name="frame" visibility="package" isStatic="true" type="_n37TYFAfEeyq-N37BhvBHQ" association="_n_DPEVAfEeyq-N37BhvBHQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_n-ZHwVAfEeyq-N37BhvBHQ" value="new Game()"/>
        </ownedAttribute>
        <interfaceRealization xmi:id="_n99C4FAfEeyq-N37BhvBHQ" client="_n37TYFAfEeyq-N37BhvBHQ" supplier="_n9V-4VAfEeyq-N37BhvBHQ" contract="_n9V-4VAfEeyq-N37BhvBHQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_n-l8FFAfEeyq-N37BhvBHQ" name="main" specification="_n39voFAfEeyq-N37BhvBHQ">
          <ownedParameter xmi:id="_n-l8FVAfEeyq-N37BhvBHQ" name="args">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_n-l8FlAfEeyq-N37BhvBHQ" value="*"/>
          </ownedParameter>
          <language>java</language>
          <body>EventQueue.invokeLater(new Runnable() {&#xD;
			public void run() {&#xD;
				try {&#xD;
					&#xD;
					frame.setVisible(true);&#xD;
				} catch (Exception e) {&#xD;
					e.printStackTrace();&#xD;
				}&#xD;
			}&#xD;
		});&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_n-l8F1AfEeyq-N37BhvBHQ" name="Game" specification="_n3-WsVAfEeyq-N37BhvBHQ">
          <ownedParameter xmi:id="_n-l8GFAfEeyq-N37BhvBHQ" type="_n37TYFAfEeyq-N37BhvBHQ" direction="return">
            <name xsi:nil="true"/>
          </ownedParameter>
          <language>java</language>
          <body>gui = new GUI(this);&#xD;
	      		&#xD;
	      		this.add(gui);&#xD;
	      		&#xD;
	      	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_n-l8GVAfEeyq-N37BhvBHQ" name="Game" specification="_n9izMFAfEeyq-N37BhvBHQ">
          <ownedParameter xmi:id="_n-l8GlAfEeyq-N37BhvBHQ" name="a" type="_n3w7UlAfEeyq-N37BhvBHQ"/>
          <ownedParameter xmi:id="_n-l8G1AfEeyq-N37BhvBHQ" type="_n37TYFAfEeyq-N37BhvBHQ" direction="return">
            <name xsi:nil="true"/>
          </ownedParameter>
          <language>java</language>
          <body>gui = a;&#xD;
	      		&#xD;
	      		&#xD;
	      	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_n-l8HFAfEeyq-N37BhvBHQ" name="forAI" specification="_n4Ay8FAfEeyq-N37BhvBHQ">
          <language>java</language>
          <body>int signal = -10000;&#xD;
	      		int pick_index = 0;&#xD;
	      		int c =0;&#xD;
	      		int score =0, score2=0;&#xD;
	      		String pickit=&quot;&quot;;&#xD;
	      		&#xD;
	      		for (int a = 0; a &lt; gui.Isize * gui.Isize; a++)&#xD;
	      		{&#xD;
	      			if(gui.Node[a].getText()== &quot;&quot;)&#xD;
	      			{&#xD;
	      				&#xD;
	      				&#xD;
	      			&#xD;
	      				gui.Node[a].setForeground(new Color(255, 0, 0));&#xD;
	      				gui.Node[a].setText(&quot;S&quot;);&#xD;
	      		&#xD;
	      				score = minimax(gui.Node, 0, false,a);&#xD;
	      				gui.Node[a].setForeground(null);&#xD;
	      				gui.Node[a].setText(&quot;&quot;);&#xD;
	      				if (score == 1 )&#xD;
	      				{&#xD;
	      					pickit = &quot;S&quot;;&#xD;
	      					signal = score;&#xD;
	      					pick_index = a;&#xD;
	      					break;&#xD;
	      				}&#xD;
	      				gui.Node[a].setForeground(new Color(255, 0, 0));&#xD;
	      				gui.Node[a].setText(&quot;O&quot;);&#xD;
	      				score2 = minimax(gui.Node, 0, false,a);&#xD;
	      				gui.Node[a].setForeground(null);&#xD;
	      				gui.Node[a].setText(&quot;&quot;);&#xD;
	      				if (score2 == 1 )&#xD;
	      				{&#xD;
	      					pickit = &quot;O&quot;;&#xD;
	      					signal = score2;&#xD;
	      					pick_index = a;&#xD;
	      					break;&#xD;
	      				}&#xD;
	      &#xD;
	      				else&#xD;
	      				{&#xD;
	      					if (score > signal ) &#xD;
	      					{&#xD;
	      						&#xD;
	      						pickit = &quot;S&quot;;&#xD;
	      						signal = score;&#xD;
	      						pick_index = a;&#xD;
	      						&#xD;
	      						&#xD;
	      					}&#xD;
	      					if ( score2>signal )&#xD;
	      					{&#xD;
	      						pickit = &quot;O&quot;;&#xD;
	      						signal = score2;&#xD;
	      						pick_index = a;&#xD;
	      						break;&#xD;
	      					}&#xD;
	      				}&#xD;
	      				&#xD;
	      			}&#xD;
	      		}&#xD;
	      		&#xD;
	      			if (player1 ==true)&#xD;
	      			{&#xD;
	      				player1= false;&#xD;
	      				player2=true;&#xD;
	      				gui.Node[pick_index].setFont(new Font(&quot;Tahoma&quot;, Font.PLAIN, 20));&#xD;
	      				gui.change1(pick_index);&#xD;
	      			}&#xD;
	      			else&#xD;
	      			{&#xD;
	      				player1= true;&#xD;
	      				player2=false;&#xD;
	      				gui.Node[pick_index].setFont(new Font(&quot;Tahoma&quot;, Font.PLAIN, 20));&#xD;
	      				gui.change2(pick_index);&#xD;
	      			}&#xD;
	      			gui.Node[pick_index].setText(pickit);&#xD;
	      &#xD;
	      		&#xD;
	      	&#xD;
	      			multi checker = checkwinner(pick_index, false);&#xD;
	      			if (gui.simplegame.isSelected())&#xD;
	      			{&#xD;
	      				if (checker.no != &quot;tie&quot;)&#xD;
	      				{&#xD;
	      					frame.winner_simple(checker.sc, checker.no);					&#xD;
	      				}&#xD;
	      				else if (checker.no == &quot;tie&quot;)&#xD;
	      				{&#xD;
	      					JOptionPane.showMessageDialog(gui, &quot;tie&quot;);&#xD;
	      					player1 = true;&#xD;
	      					gui.change1(pick_index);&#xD;
	      					resetgame();&#xD;
	      				}&#xD;
	      			}&#xD;
	      			else&#xD;
	      			{&#xD;
	      				frame.winner_general(checker.sc, pick_index, checker.no,player1);					&#xD;
	      			}&#xD;
	      			&#xD;
	      		&#xD;
	      	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_n-l8HVAfEeyq-N37BhvBHQ" name="checkwinner" specification="_n4Ay8VAfEeyq-N37BhvBHQ">
          <ownedParameter xmi:id="_oiGRIFB0EeypD_LFN0DTcQ" name="assign">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_oiGRIVB0EeypD_LFN0DTcQ" name="player">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <ownedParameter xmi:id="_oiG4MFB0EeypD_LFN0DTcQ" type="_n9JKkVAfEeyq-N37BhvBHQ" direction="return">
            <name xsi:nil="true"/>
          </ownedParameter>
          <language>java</language>
          <body>int count =0;&#xD;
	      		int search_row = 0;&#xD;
	      		int search_column = 0;&#xD;
	      		int limit = (gui.Isize * gui.Isize);&#xD;
	      		int total_row = gui.Isize;&#xD;
	      		int[] each_row = new int[gui.Isize]; &#xD;
	      		int[] each_column = new int[gui.Isize]; &#xD;
	      		&#xD;
	      		&#xD;
	      		for (int i =0; i &lt; gui.Isize; i++)&#xD;
	      		{&#xD;
	      			each_row[i]=i;&#xD;
	      		}&#xD;
	      		for (int i =0; i &lt; gui.Isize; i++)&#xD;
	      		{&#xD;
	      			if (i == 0)&#xD;
	      			{&#xD;
	      				each_column[i]=i;&#xD;
	      			}&#xD;
	      			else&#xD;
	      			{&#xD;
	      				each_column[i] = each_column[i-1]+ gui.Isize;&#xD;
	      			}&#xD;
	      			&#xD;
	      		}&#xD;
	      		outer : for (int i =0; i &lt; total_row; i++)&#xD;
	      		{&#xD;
	      			for (int b : each_column)&#xD;
	      			{&#xD;
	      				if (assign != b)&#xD;
	      				{&#xD;
	      					search_column += 1;&#xD;
	      					if (search_column == gui.Isize)&#xD;
	      					{&#xD;
	      						for (int c = 0; c &lt; each_column.length; c++)&#xD;
	      						{&#xD;
	      							each_column[c] += 1;&#xD;
	      						}&#xD;
	      						search_column = 0;&#xD;
	      					}&#xD;
	      				}&#xD;
	      				else&#xD;
	      				{&#xD;
	      					break outer;&#xD;
	      				}&#xD;
	      			}&#xD;
	      		}&#xD;
	      		&#xD;
	      		outer : for (int i =0; i &lt; total_row; i++)&#xD;
	      		{&#xD;
	      			for (int b : each_row)&#xD;
	      			{&#xD;
	      				if (assign != b)&#xD;
	      				{&#xD;
	      					search_row += 1;&#xD;
	      					if (search_row == gui.Isize)&#xD;
	      					{&#xD;
	      						for (int c = 0; c &lt; each_row.length; c++)&#xD;
	      						{&#xD;
	      							each_row[c] += gui.Isize;&#xD;
	      						}&#xD;
	      						search_row = 0;&#xD;
	      					}&#xD;
	      				}&#xD;
	      				else&#xD;
	      				{&#xD;
	      					break outer;&#xD;
	      				}&#xD;
	      			}&#xD;
	      				&#xD;
	      		}&#xD;
	      		if ( (!(assign-gui.Isize&lt;0)) &amp;&amp;  ((assign+gui.Isize&lt;limit)) )&#xD;
	      		{&#xD;
	      			if (gui.Node[assign].getText() == &quot;O&quot; &amp;&amp; gui.Node[assign-gui.Isize].getText() == &quot;S&quot; &amp;&amp; gui.Node[assign+gui.Isize].getText() == &quot;S&quot; )&#xD;
	      			{&#xD;
	      				&#xD;
	      				count++;&#xD;
	      			}&#xD;
	      		}&#xD;
	      		&#xD;
	      		if ( (!(assign-gui.Isize-1&lt;0)) &amp;&amp;  ((assign+gui.Isize+1&lt;limit)) &amp;&amp; (assign != each_row[0]) &amp;&amp; (assign != each_row[gui.Isize-1]))&#xD;
	      		{&#xD;
	      			if (gui.Node[assign].getText() == &quot;O&quot; &amp;&amp; gui.Node[assign-gui.Isize-1].getText() == &quot;S&quot; &amp;&amp; gui.Node[assign+gui.Isize+1].getText() == &quot;S&quot; )&#xD;
	      			{&#xD;
	      				&#xD;
	      				count++;&#xD;
	      			}&#xD;
	      		}	&#xD;
	      		if ( (!(assign-gui.Isize+1&lt;0)) &amp;&amp;  ((assign+gui.Isize-1&lt;limit)) &amp;&amp; (assign != each_row[0]) &amp;&amp; (assign != each_row[gui.Isize-1]))&#xD;
	      		{&#xD;
	      			if (gui.Node[assign].getText() == &quot;O&quot; &amp;&amp; gui.Node[assign-gui.Isize+1].getText() == &quot;S&quot; &amp;&amp; gui.Node[assign+gui.Isize-1].getText() == &quot;S&quot; )&#xD;
	      			{&#xD;
	      				&#xD;
	      				count++;&#xD;
	      			}&#xD;
	      		}&#xD;
	      		if ( (!(assign-1&lt;0)) &amp;&amp;  ((assign+1&lt;limit)) &amp;&amp; (!(assign-1&lt;each_row[0])) &amp;&amp; (!(assign +1>each_row[gui.Isize-1])))&#xD;
	      		{&#xD;
	      			if (gui.Node[assign].getText() == &quot;O&quot; &amp;&amp; gui.Node[assign-1].getText() == &quot;S&quot; &amp;&amp; gui.Node[assign+1].getText() == &quot;S&quot; )&#xD;
	      			{&#xD;
	      				&#xD;
	      				count++;&#xD;
	      			}&#xD;
	      		}&#xD;
	      		if ( ((!(assign-gui.Isize&lt;0)) &amp;&amp; (!(assign-(gui.Isize*2)&lt;0))))&#xD;
	      		{&#xD;
	      			if (gui.Node[assign].getText() == &quot;S&quot; &amp;&amp; gui.Node[assign-gui.Isize].getText() == &quot;O&quot; &amp;&amp; gui.Node[assign-(gui.Isize*2)].getText() == &quot;S&quot; )&#xD;
	      			{&#xD;
	      				&#xD;
	      				count++;&#xD;
	      			}&#xD;
	      			&#xD;
	      		}&#xD;
	      		if ( (((assign+gui.Isize&lt;limit))  &amp;&amp;  ((assign+(gui.Isize*2)&lt;limit))))&#xD;
	      		{&#xD;
	      			&#xD;
	      			if (gui.Node[assign].getText() == &quot;S&quot; &amp;&amp; gui.Node[assign+gui.Isize].getText() == &quot;O&quot; &amp;&amp; gui.Node[assign+(gui.Isize*2)].getText() == &quot;S&quot; )&#xD;
	      			{&#xD;
	      				&#xD;
	      				count++;&#xD;
	      			}&#xD;
	      		}&#xD;
	      		if ( ((!(assign-1&lt;0)) &amp;&amp; (!(assign-2&lt;0))) &amp;&amp; (!(assign-1&lt;each_row[0])) &amp;&amp; (!(assign -2 &lt; each_row[0])))&#xD;
	      		{&#xD;
	      			if (gui.Node[assign].getText() == &quot;S&quot; &amp;&amp; gui.Node[assign-1].getText() == &quot;O&quot; &amp;&amp; gui.Node[assign-2].getText() == &quot;S&quot; )&#xD;
	      			{&#xD;
	      				&#xD;
	      				count++;&#xD;
	      			}&#xD;
	      		}&#xD;
	      		if (   (assign+1&lt;limit) &amp;&amp;  (assign+2&lt;limit) &amp;&amp; (!(assign+1>each_row[gui.Isize-1])) &amp;&amp; (!(assign+2 > each_row[gui.Isize-1])))&#xD;
	      		{&#xD;
	      			&#xD;
	      			if (gui.Node[assign].getText() == &quot;S&quot; &amp;&amp; gui.Node[assign+1].getText() == &quot;O&quot; &amp;&amp; gui.Node[assign+2].getText() == &quot;S&quot; )&#xD;
	      			{&#xD;
	      				&#xD;
	      				count++;&#xD;
	      			}&#xD;
	      		}&#xD;
	       		if (   ((assign+gui.Isize+1&lt;limit))&amp;&amp; ((assign+((gui.Isize+1)*2)&lt;limit)) &amp;&amp; (assign!=each_row[gui.Isize-1])  )&#xD;
	      		{&#xD;
	      			if (gui.Node[assign].getText() == &quot;S&quot; &amp;&amp; gui.Node[assign+gui.Isize+1].getText() == &quot;O&quot; &amp;&amp; gui.Node[assign+((gui.Isize+1)*2)].getText() == &quot;S&quot; )&#xD;
	      			{&#xD;
	      				&#xD;
	      				count++;&#xD;
	      			}&#xD;
	      		}&#xD;
	      		if (  (!(assign-gui.Isize-1&lt;0)) &amp;&amp; (!(assign+((-gui.Isize-1)*2)&lt;0)) &amp;&amp; (assign!=each_row[0]))&#xD;
	      		{&#xD;
	      			if (gui.Node[assign].getText() == &quot;S&quot; &amp;&amp; gui.Node[assign-gui.Isize-1].getText() == &quot;O&quot; &amp;&amp; gui.Node[assign+((-gui.Isize-1)*2)].getText() == &quot;S&quot; )&#xD;
	      			{&#xD;
	      				&#xD;
	      				count++;&#xD;
	      			}&#xD;
	      		}&#xD;
	      		if (  (assign+gui.Isize-1&lt;limit) &amp;&amp; (assign+((gui.Isize-1)*2)&lt;limit) &amp;&amp; (assign!=each_row[0])&amp;&amp; (assign!=each_row[1]))&#xD;
	      		{&#xD;
	      			if (gui.Node[assign].getText() == &quot;S&quot; &amp;&amp; gui.Node[assign+gui.Isize-1].getText() == &quot;O&quot; &amp;&amp; gui.Node[assign+((gui.Isize-1)*2)].getText() == &quot;S&quot; )&#xD;
	      			{&#xD;
	      				&#xD;
	      				count++;&#xD;
	      			}&#xD;
	      		}&#xD;
	      		if (  (!(assign-gui.Isize+1&lt;0)) &amp;&amp; (!(assign+((-gui.Isize+1)*2)&lt;0))&amp;&amp; (assign!=each_row[gui.Isize-1] &amp;&amp; (assign!=each_row[gui.Isize-2] )))&#xD;
	      		{&#xD;
	      			if (gui.Node[assign].getText() == &quot;S&quot; &amp;&amp; gui.Node[assign-gui.Isize+1].getText() == &quot;O&quot; &amp;&amp; gui.Node[assign+((-gui.Isize+1)*2)].getText() == &quot;S&quot; )&#xD;
	      			{&#xD;
	      				&#xD;
	      				count++;&#xD;
	      			}&#xD;
	      			&#xD;
	      		}&#xD;
	      		if (   ((assign+gui.Isize+1&lt;limit))&amp;&amp; ((assign+((gui.Isize+1)*2)&lt;limit)) &amp;&amp; (assign!=each_row[gui.Isize-1]) )&#xD;
	      		{&#xD;
	      			&#xD;
	      			if (gui.Node[assign].getText() == &quot;S&quot; &amp;&amp; gui.Node[assign+gui.Isize+1].getText() == &quot;O&quot; &amp;&amp; gui.Node[assign+((gui.Isize+1)*2)].getText() == &quot;S&quot; )&#xD;
	      			{&#xD;
	      				&#xD;
	      				count++;&#xD;
	      			}&#xD;
	      		}&#xD;
	      		int c = 0;&#xD;
	      		for (int i =0; i &lt; limit; i++)&#xD;
	      		{&#xD;
	      			if (gui.Node[i].getText() != &quot;&quot;)&#xD;
	      			{&#xD;
	      				c+=1;&#xD;
	      			}&#xD;
	      		}&#xD;
	      		&#xD;
	      		&#xD;
	      		if (gui.simplegame.isSelected() == true)&#xD;
	      		{&#xD;
	      			if (count != 0 &amp;&amp; player == true )&#xD;
	      			{&#xD;
	      				&#xD;
	      				return new multi(count, &quot;player 1&quot;);&#xD;
	      			}&#xD;
	      			else if (count != 0 &amp;&amp; player == false)&#xD;
	      			{&#xD;
	      				&#xD;
	      				return new multi(count, &quot;player 2&quot;);&#xD;
	      			}&#xD;
	      			else if (c==gui.Isize* gui.Isize) &#xD;
	      			{&#xD;
	      				return new multi(count, &quot;tie&quot;);&#xD;
	      			}&#xD;
	      			else&#xD;
	      			{&#xD;
	      				return new multi(count, &quot;nothing&quot;);&#xD;
	      			}&#xD;
	      		}&#xD;
	      		else&#xD;
	      		{&#xD;
	      			if (count != 0 &amp;&amp; player == true &amp;&amp; c &lt;= limit)&#xD;
	      			{&#xD;
	      				&#xD;
	      				return new multi(count, &quot;player 1&quot;);&#xD;
	      			}&#xD;
	      			else if (count != 0 &amp;&amp; player == false &amp;&amp; c &lt;= limit)&#xD;
	      			{&#xD;
	      				&#xD;
	      				return new multi(count, &quot;player 2&quot;);&#xD;
	      			}&#xD;
	      			else if (c==gui.Isize* gui.Isize) &#xD;
	      			{&#xD;
	      				return new multi(count, &quot;tie&quot;);&#xD;
	      			}&#xD;
	      			else&#xD;
	      			{&#xD;
	      				return new multi(count, &quot;nothing&quot;);&#xD;
	      			}&#xD;
	      		}&#xD;
	      	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_n-mjIFAfEeyq-N37BhvBHQ" name="whogofirst" specification="_n4BaAlAfEeyq-N37BhvBHQ">
          <language>java</language>
          <body>if (gui.comp1.isSelected())&#xD;
	      		{&#xD;
	      			player2 = true;&#xD;
	      			gui.p2first();&#xD;
	      		}&#xD;
	      		else if (gui.comp2.isSelected())&#xD;
	      		{&#xD;
	      			player1 = true;&#xD;
	      			gui.p1first();&#xD;
	      		}&#xD;
	      		else&#xD;
	      		{&#xD;
	      			if (rnd.nextInt(2)==0)&#xD;
	      			{ &#xD;
	      				&#xD;
	      				player1= true;&#xD;
	      				gui.p1first();&#xD;
	      				&#xD;
	      			}&#xD;
	      			else&#xD;
	      			{&#xD;
	      				player2=true;&#xD;
	      				gui.p2first();&#xD;
	      			}&#xD;
	      		}&#xD;
	      		&#xD;
	      	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_n-mjIVAfEeyq-N37BhvBHQ" name="printnoti" specification="_n4BaA1AfEeyq-N37BhvBHQ">
          <language>java</language>
          <body>if (gui.human1.isSelected() &amp;&amp; gui.human2.isSelected() &amp;&amp; gui.simplegame.isSelected())&#xD;
	      		{&#xD;
	      			gui.greenside.setForeground(new Color(0, 255, 0));&#xD;
	      			gui.greenside.setText(&quot;Green Player: Human&quot;);&#xD;
	      			gui.redside.setForeground(new Color(255, 0, 0));&#xD;
	      			gui.redside.setText(&quot;Red Player: Human&quot;);&#xD;
	      			gui.intromode.setText(&quot;Simple Game Mode: Winner creates SOS first!!!&quot;);&#xD;
	      		}&#xD;
	      		else if (gui.human1.isSelected() &amp;&amp; gui.human2.isSelected() &amp;&amp; gui.genegame.isSelected())&#xD;
	      		{&#xD;
	      			gui.greenside.setForeground(new Color(0, 255, 0));&#xD;
	      			gui.greenside.setText(&quot;Green Player: Human&quot;);&#xD;
	      			gui.redside.setForeground(new Color(255, 0, 0));&#xD;
	      			gui.redside.setText(&quot;Red Player: Human&quot;);&#xD;
	      			gui.intromode.setText(&quot;General Game Mode: Winner creates more SOS!!!&quot;);&#xD;
	      		}&#xD;
	      		if (gui.human1.isSelected() &amp;&amp; gui.comp2.isSelected() &amp;&amp; gui.simplegame.isSelected())&#xD;
	      		{&#xD;
	      			gui.greenside.setForeground(new Color(0, 255, 0));&#xD;
	      			gui.greenside.setText(&quot;Green Player: You&quot;);&#xD;
	      			gui.redside.setForeground(new Color(255, 0, 0));&#xD;
	      			gui.redside.setText(&quot;Red Player: Computer&quot;);&#xD;
	      			gui.intromode.setText(&quot;Simple Game Mode: Winner creates SOS first!!!&quot;);&#xD;
	      		}&#xD;
	      		else if (gui.human2.isSelected() &amp;&amp; gui.comp1.isSelected() &amp;&amp; gui.genegame.isSelected())&#xD;
	      		{&#xD;
	      			gui.greenside.setForeground(new Color(0, 255, 0));&#xD;
	      			gui.greenside.setText(&quot;Green Player: Computer&quot;);&#xD;
	      			gui.redside.setForeground(new Color(255, 0, 0));&#xD;
	      			gui.redside.setText(&quot;Red Player: You&quot;);&#xD;
	      			gui.intromode.setText(&quot;General Game Mode: Winner creates more SOS!!!&quot;);&#xD;
	      		}&#xD;
	      		&#xD;
	      	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_n-mjIlAfEeyq-N37BhvBHQ" name="enableradio" specification="_n4CBEFAfEeyq-N37BhvBHQ">
          <language>java</language>
          <body>JRadioButton[] buttons = new JRadioButton[]{gui.human1, gui.human2, gui.simplegame, gui.genegame, gui.comp1, gui.comp2};&#xD;
	      		for (JRadioButton btn : buttons) {&#xD;
	      	         btn.setEnabled(true);&#xD;
	      	    }&#xD;
	      	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_n-mjI1AfEeyq-N37BhvBHQ" name="disableradio" specification="_n4CBEVAfEeyq-N37BhvBHQ">
          <language>java</language>
          <body>JRadioButton[] buttons = new JRadioButton[]{gui.human1, gui.human2, gui.simplegame, gui.genegame, gui.comp1, gui.comp2};&#xD;
	      		for (JRadioButton btn : buttons) {&#xD;
	      	         btn.setEnabled(false);&#xD;
	      	    }&#xD;
	      	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_n-mjJFAfEeyq-N37BhvBHQ" name="minimax" specification="_n99p8FAfEeyq-N37BhvBHQ">
          <ownedParameter xmi:id="_n-mjJVAfEeyq-N37BhvBHQ" name="Board" type="_n9GHQVAfEeyq-N37BhvBHQ">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_n-mjJlAfEeyq-N37BhvBHQ" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_n-mjJ1AfEeyq-N37BhvBHQ" name="depth">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_n-mjKFAfEeyq-N37BhvBHQ" name="currentstate">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <ownedParameter xmi:id="_n-mjKVAfEeyq-N37BhvBHQ" name="c">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_n-mjKlAfEeyq-N37BhvBHQ" direction="return">
            <name xsi:nil="true"/>
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>boolean cond = true;&#xD;
	      			multi basecase = checkwinner(c, currentstate);&#xD;
	      			if (basecase.no == &quot;player 1&quot;)&#xD;
	      			{&#xD;
	      				return -1;&#xD;
	      			}&#xD;
	      			else if (basecase.no == &quot;player 2&quot;)&#xD;
	      			{&#xD;
	      				return 1;&#xD;
	      			}&#xD;
	      			else if (basecase.no == &quot;tie&quot;)&#xD;
	      			{&#xD;
	      				return 0;&#xD;
	      			}&#xD;
	      		&#xD;
	      		if (currentstate == cond)&#xD;
	      		{&#xD;
	      			int best = -1000;&#xD;
	      			int d = depth+1;&#xD;
	      			for (int i = 0; i &lt; gui.Isize* gui.Isize; i++)&#xD;
	      			{&#xD;
	      				if (gui.Node[i].getText() == &quot;&quot;)&#xD;
	      				{&#xD;
	      &#xD;
	      					gui.Node[i].setText(&quot;S&quot;);&#xD;
	      					int score = minimax(gui.Node, d, false, i); &#xD;
	      					gui.Node[i].setText(&quot;&quot;);&#xD;
	      					&#xD;
	      					&#xD;
	      					if (score == 1  || score == 0)&#xD;
	      					{&#xD;
	      						best = score;&#xD;
	      						break;&#xD;
	      					}&#xD;
	      					else &#xD;
	      					{&#xD;
	      		&#xD;
	      						gui.Node[i].setText(&quot;O&quot;);&#xD;
	      						int score2 = minimax(gui.Node, d, false, i);&#xD;
	      						gui.Node[i].setText(&quot;&quot;);&#xD;
	      						&#xD;
	      						if (score2 > score )&#xD;
	      						{&#xD;
	      							best = score2;&#xD;
	      							break;&#xD;
	      						}&#xD;
	      						&#xD;
	      					}&#xD;
	      &#xD;
	      					&#xD;
	      				}&#xD;
	      			}&#xD;
	      			return best;&#xD;
	      		}&#xD;
	      		else&#xD;
	      		{&#xD;
	      			int best = 1000;&#xD;
	      			int d = depth+1;&#xD;
	      			for (int i = 0; i &lt; gui.Isize * gui.Isize; i++)&#xD;
	      			{&#xD;
	      				if (gui.Node[i].getText() == &quot;&quot;)&#xD;
	      				{&#xD;
	      				&#xD;
	      					gui.Node[i].setText(&quot;S&quot;);&#xD;
	      					int score = minimax(gui.Node, d, true,i);&#xD;
	      					gui.Node[i].setText(&quot;&quot;);&#xD;
	      					&#xD;
	      					if (score == -1  || score == 0)&#xD;
	      					{&#xD;
	      						best= score;&#xD;
	      						break;&#xD;
	      					}&#xD;
	      						&#xD;
	      					else&#xD;
	      					{&#xD;
	      					&#xD;
	      						gui.Node[i].setText(&quot;O&quot;);&#xD;
	      						int score2 = minimax(gui.Node, d, true,i);&#xD;
	      					&#xD;
	      						gui.Node[i].setText(&quot;&quot;);&#xD;
	      						&#xD;
	      						if (score2 &lt; score  )&#xD;
	      						{&#xD;
	      							best = score2;&#xD;
	      							break;&#xD;
	      						}&#xD;
	      						&#xD;
	      					}&#xD;
	      					&#xD;
	      				}&#xD;
	      			}&#xD;
	      			return best;&#xD;
	      		}&#xD;
	      	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_n-mjK1AfEeyq-N37BhvBHQ" name="P1move" specification="_n4CoIFAfEeyq-N37BhvBHQ">
          <ownedParameter xmi:id="_n-mjLFAfEeyq-N37BhvBHQ" name="index">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_n-mjLVAfEeyq-N37BhvBHQ" name="SorO">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <language>java</language>
          <body>gui.change1(index);&#xD;
	      		gui.Node[index].setFont(new Font(&quot;Tahoma&quot;, Font.PLAIN, 20));&#xD;
	      		if (SorO == true)&#xD;
	      		{&#xD;
	      			&#xD;
	      			gui.Node[index].setText(&quot;S&quot;);&#xD;
	      		}&#xD;
	      		else&#xD;
	      		{&#xD;
	      			gui.Node[index].setText(&quot;O&quot;);&#xD;
	      		}&#xD;
	      		int c =0;&#xD;
	      		for (int i =0; i &lt; gui.Isize*gui.Isize; i ++)&#xD;
	      		{&#xD;
	      			if (gui.Node[i].getText() != &quot;&quot;)&#xD;
	      			{&#xD;
	      				c+=1;&#xD;
	      			}&#xD;
	      		}&#xD;
	      		if (index == gui.Isize * gui.Isize &amp;&amp; c == gui.Isize * gui.Isize)&#xD;
	      		{&#xD;
	      			player1= true;&#xD;
	      		}&#xD;
	      		else&#xD;
	      		{&#xD;
	      			player1= false;&#xD;
	      			player2=true;&#xD;
	      		}&#xD;
	      		&#xD;
	      		multi checker = checkwinner(index, true);&#xD;
	      &#xD;
	      		if (gui.simplegame.isSelected() == true)&#xD;
	      		{&#xD;
	      			if (checker.no == &quot;player 1&quot;)&#xD;
	      			{&#xD;
	      				frame.winner_simple(checker.sc, checker.no);&#xD;
	      			}&#xD;
	      			else if (checker.no == &quot;tie&quot;)&#xD;
	      			{&#xD;
	      				frame.tie(index);&#xD;
	      &#xD;
	      			}&#xD;
	      		}&#xD;
	      		else&#xD;
	      		{&#xD;
	      			if (checker.no == &quot;player 1&quot;)&#xD;
	      			{&#xD;
	      				frame.winner_general(checker.sc, index, checker.no, player1);&#xD;
	      			}&#xD;
	      			else if (checker.no == &quot;tie&quot;)&#xD;
	      			{&#xD;
	      				frame.winner_general(checker.sc, index, checker.no,player1);&#xD;
	      				&#xD;
	      			}&#xD;
	      		}&#xD;
	      		&#xD;
	      	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_n-nKMFAfEeyq-N37BhvBHQ" name="P2move" specification="_n4CoI1AfEeyq-N37BhvBHQ">
          <ownedParameter xmi:id="_n-nKMVAfEeyq-N37BhvBHQ" name="index2">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_n-nKMlAfEeyq-N37BhvBHQ" name="SorO2">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <language>java</language>
          <body>gui.change2(index2);&#xD;
	      		gui.Node[index2].setFont(new Font(&quot;Tahoma&quot;, Font.PLAIN, 20));&#xD;
	      		if (SorO2 == true)&#xD;
	      		{&#xD;
	      			gui.Node[index2].setText(&quot;S&quot;);&#xD;
	      		}&#xD;
	      		else&#xD;
	      		{&#xD;
	      			gui.Node[index2].setText(&quot;O&quot;);&#xD;
	      		}&#xD;
	      		int c =0;&#xD;
	      		for (int i =0; i &lt; gui.Isize*gui.Isize; i ++)&#xD;
	      		{&#xD;
	      			if (gui.Node[i].getText() != &quot;&quot;)&#xD;
	      			{&#xD;
	      				c+=1;&#xD;
	      			}&#xD;
	      		}&#xD;
	      		if (index2 == gui.Isize * gui.Isize &amp;&amp; c == gui.Isize * gui.Isize)&#xD;
	      		{&#xD;
	      			player2= true;&#xD;
	      		}&#xD;
	      		else&#xD;
	      		{&#xD;
	      			player1 = true;&#xD;
	      			player2 = false;&#xD;
	      		}&#xD;
	      	&#xD;
	      	&#xD;
	      		multi checker = checkwinner(index2, false);&#xD;
	      		if (gui.simplegame.isSelected() == true)&#xD;
	      		{&#xD;
	      			if (checker.no == &quot;player 2&quot;)&#xD;
	      			{&#xD;
	      				frame.winner_simple(checker.sc, checker.no);&#xD;
	      			}&#xD;
	      			else if (checker.no == &quot;tie&quot;)&#xD;
	      			{&#xD;
	      				frame.tie(index2);&#xD;
	      				&#xD;
	      			}&#xD;
	      			&#xD;
	      		}&#xD;
	      		else&#xD;
	      		{&#xD;
	      				frame.winner_general(checker.sc, index2, checker.no, player1);&#xD;
	      		}&#xD;
	      	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_n-nKM1AfEeyq-N37BhvBHQ" name="resetgame" specification="_n4DPMFAfEeyq-N37BhvBHQ">
          <language>java</language>
          <body>for (int i = 0; i &lt;gui.Isize * gui.Isize ; i++)&#xD;
	      		{&#xD;
	      			gui.Node[i].setText(&quot;&quot;);&#xD;
	      			&#xD;
	      		}&#xD;
	      		temp_score1 = 0;&#xD;
	      		temp_score2 = 0;&#xD;
	      		gui.P1score_1.setText(&quot;0&quot;);&#xD;
	      		gui.P1score_1_1.setText(&quot;0&quot;);&#xD;
	      		&#xD;
	      		&#xD;
	      &#xD;
	      	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_n-nKNFAfEeyq-N37BhvBHQ" name="tie" specification="_n4DPMVAfEeyq-N37BhvBHQ">
          <ownedParameter xmi:id="_n-nKNVAfEeyq-N37BhvBHQ" name="b">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>JOptionPane.showMessageDialog(gui, &quot;Tie&quot;);&#xD;
	      		if (player1)&#xD;
	      		{&#xD;
	      			gui.change2(b);&#xD;
	      		}&#xD;
	      		else&#xD;
	      		{&#xD;
	      			gui.change1(b);&#xD;
	      		}&#xD;
	      		&#xD;
	      		resetgame();&#xD;
	      	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_n-nKNlAfEeyq-N37BhvBHQ" name="humanmove" specification="_n4D2QFAfEeyq-N37BhvBHQ">
          <ownedParameter xmi:id="_n-nKN1AfEeyq-N37BhvBHQ" name="loc">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>if (player1 &amp;&amp; gui.S1.isSelected())&#xD;
	      		{&#xD;
	      			&#xD;
	      			if(gui.Node[loc].getText()== &quot;&quot;)&#xD;
	      			{&#xD;
	      				P1move(loc, true);	&#xD;
	      			}&#xD;
	      			&#xD;
	      		}&#xD;
	      		else if (player1 &amp;&amp; gui.O1.isSelected())&#xD;
	      		{&#xD;
	      			&#xD;
	      			if(gui.Node[loc].getText()== &quot;&quot;)&#xD;
	      			{&#xD;
	      				P1move(loc, false);&#xD;
	      				&#xD;
	      			}&#xD;
	      		}&#xD;
	      &#xD;
	      		else if (player2 &amp;&amp; gui.S2.isSelected())&#xD;
	      		{	&#xD;
	      			if(gui.Node[loc].getText()== &quot;&quot;)&#xD;
	      			{&#xD;
	      				P2move(loc, true);&#xD;
	      			}&#xD;
	      		}&#xD;
	      		else if (player2 &amp;&amp; gui.O2.isSelected())&#xD;
	      		{	&#xD;
	      			if(gui.Node[loc].getText()== &quot;&quot;)&#xD;
	      			{&#xD;
	      				P2move(loc, false);&#xD;
	      			}&#xD;
	      		}&#xD;
	      	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_n-nKOFAfEeyq-N37BhvBHQ" name="actionPerformed" specification="_n9-RAFAfEeyq-N37BhvBHQ">
          <ownedParameter xmi:id="_n-nKOVAfEeyq-N37BhvBHQ" name="e" type="_n9V-41AfEeyq-N37BhvBHQ"/>
          <language>java</language>
          <body>if (gui.human1.isSelected() &amp;&amp; gui.human2.isSelected() &amp;&amp; gui.simplegame.isSelected())    // 2 humans play simple game&#xD;
	      		{&#xD;
	      				disableradio();&#xD;
	      				&#xD;
	      				&#xD;
	      				for (int i =0; i &lt; gui.Isize* gui.Isize; i++)&#xD;
	      				{&#xD;
	      					if (e.getSource() == gui.Node[i])&#xD;
	      					{&#xD;
	      						humanmove(i);&#xD;
	      						}}}&#xD;
	      		if (gui.human1.isSelected() &amp;&amp; gui.human2.isSelected() &amp;&amp; gui.genegame.isSelected())   // 2 humans play general game&#xD;
	      		{&#xD;
	      				disableradio();&#xD;
	      &#xD;
	      				for (int i =0; i &lt; gui.Isize* gui.Isize; i++)&#xD;
	      				{&#xD;
	      					if (e.getSource() == gui.Node[i])&#xD;
	      					{&#xD;
	      						&#xD;
	      						humanmove(i);&#xD;
	      					}}}&#xD;
	      		&#xD;
	      		if (gui.human1.isSelected() &amp;&amp; gui.comp2.isSelected() &amp;&amp; gui.simplegame.isSelected())&#xD;
	      		{&#xD;
	      			&#xD;
	      			for (int i =0; i &lt; gui.Isize* gui.Isize; i++)&#xD;
	      			{&#xD;
	      				&#xD;
	      					if (e.getSource() == gui.Node[i])&#xD;
	      					{&#xD;
	      						humanmove(i);&#xD;
	      					}&#xD;
	      &#xD;
	      					&#xD;
	      					if (player2) {forAI();}}&#xD;
	      &#xD;
	      		}&#xD;
	      		if (gui.human2.isSelected() &amp;&amp; gui.comp1.isSelected() &amp;&amp; gui.simplegame.isSelected())&#xD;
	      		{&#xD;
	      			&#xD;
	      			for (int i =0; i &lt; gui.Isize* gui.Isize; i++)&#xD;
	      			{&#xD;
	      				&#xD;
	      					if (player2)&#xD;
	      					{&#xD;
	      						if (e.getSource() == gui.Node[i])&#xD;
	      						{&#xD;
	      							humanmove(i);&#xD;
	      						}&#xD;
	      					}&#xD;
	      &#xD;
	      					&#xD;
	      					else {forAI();}}&#xD;
	      &#xD;
	      		}&#xD;
	      		if (gui.human1.isSelected() &amp;&amp; gui.comp2.isSelected() &amp;&amp; gui.genegame.isSelected())&#xD;
	      		{&#xD;
	      			&#xD;
	      			&#xD;
	      			for (int i =0; i &lt; gui.Isize* gui.Isize; i++)&#xD;
	      			{&#xD;
	      				&#xD;
	      					if (e.getSource() == gui.Node[i])&#xD;
	      					{&#xD;
	      						humanmove(i);&#xD;
	      					}&#xD;
	      &#xD;
	      					&#xD;
	      					if (player2) {forAI();}}&#xD;
	      		}	&#xD;
	      		if (gui.human2.isSelected() &amp;&amp; gui.comp1.isSelected() &amp;&amp; gui.genegame.isSelected())&#xD;
	      		{&#xD;
	      			&#xD;
	      			for (int i =0; i &lt; gui.Isize* gui.Isize; i++)&#xD;
	      			{&#xD;
	      				&#xD;
	      					&#xD;
	      						if (e.getSource() == gui.Node[i])&#xD;
	      						{&#xD;
	      							humanmove(i);&#xD;
	      						}&#xD;
	      					&#xD;
	      &#xD;
	      					&#xD;
	      					if (player1== true) {forAI(); }}&#xD;
	      &#xD;
	      		}&#xD;
	      &#xD;
	      </body>
        </ownedBehavior>
        <ownedOperation xmi:id="_n39voFAfEeyq-N37BhvBHQ" name="main" isStatic="true" method="_n-l8FFAfEeyq-N37BhvBHQ">
          <ownedComment xmi:id="_BUP8IFB1EeypD_LFN0DTcQ">
            <body>Launch the application.</body>
          </ownedComment>
          <ownedParameter xmi:id="_n39voVAfEeyq-N37BhvBHQ" name="args">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_n39volAfEeyq-N37BhvBHQ" value="*"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_n3-WsVAfEeyq-N37BhvBHQ" name="Game" method="_n-l8F1AfEeyq-N37BhvBHQ">
          <eAnnotations xmi:id="_n3-WslAfEeyq-N37BhvBHQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_n3-Ws1AfEeyq-N37BhvBHQ" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_BUP8IVB1EeypD_LFN0DTcQ">
            <body>Create the frame.</body>
          </ownedComment>
          <ownedParameter xmi:id="_n3-WtFAfEeyq-N37BhvBHQ" type="_n37TYFAfEeyq-N37BhvBHQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_n3-9wFAfEeyq-N37BhvBHQ" name="winner_simple" visibility="package">
          <ownedParameter xmi:id="_n3-9wVAfEeyq-N37BhvBHQ" name="b">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_n3-9wlAfEeyq-N37BhvBHQ" name="c">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_n3_k0VAfEeyq-N37BhvBHQ" name="winner_general" visibility="package">
          <ownedParameter xmi:id="_n4AL4FAfEeyq-N37BhvBHQ" name="b">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_n4AL4VAfEeyq-N37BhvBHQ" name="c">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_n4AL4lAfEeyq-N37BhvBHQ" name="o">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_n4AL41AfEeyq-N37BhvBHQ" name="p">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_n4Ay8FAfEeyq-N37BhvBHQ" name="forAI" method="_n-l8HFAfEeyq-N37BhvBHQ"/>
        <ownedOperation xmi:id="_n4Ay8VAfEeyq-N37BhvBHQ" name="checkwinner" method="_n-l8HVAfEeyq-N37BhvBHQ">
          <ownedParameter xmi:id="_n4BaAFAfEeyq-N37BhvBHQ" name="assign">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_n4BaAVAfEeyq-N37BhvBHQ" name="player">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <ownedParameter xmi:id="_n9jaRFAfEeyq-N37BhvBHQ" type="_n9JKkVAfEeyq-N37BhvBHQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_n4BaAlAfEeyq-N37BhvBHQ" name="whogofirst" method="_n-mjIFAfEeyq-N37BhvBHQ"/>
        <ownedOperation xmi:id="_n4BaA1AfEeyq-N37BhvBHQ" name="printnoti" method="_n-mjIVAfEeyq-N37BhvBHQ"/>
        <ownedOperation xmi:id="_n4CBEFAfEeyq-N37BhvBHQ" name="enableradio" method="_n-mjIlAfEeyq-N37BhvBHQ"/>
        <ownedOperation xmi:id="_n4CBEVAfEeyq-N37BhvBHQ" name="disableradio" method="_n-mjI1AfEeyq-N37BhvBHQ"/>
        <ownedOperation xmi:id="_n4CoIFAfEeyq-N37BhvBHQ" name="P1move" method="_n-mjK1AfEeyq-N37BhvBHQ">
          <ownedParameter xmi:id="_n4CoIVAfEeyq-N37BhvBHQ" name="index">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_n4CoIlAfEeyq-N37BhvBHQ" name="SorO">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_n4CoI1AfEeyq-N37BhvBHQ" name="P2move" method="_n-nKMFAfEeyq-N37BhvBHQ">
          <ownedParameter xmi:id="_n4CoJFAfEeyq-N37BhvBHQ" name="index2">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_n4CoJVAfEeyq-N37BhvBHQ" name="SorO2">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_n4DPMFAfEeyq-N37BhvBHQ" name="resetgame" method="_n-nKM1AfEeyq-N37BhvBHQ"/>
        <ownedOperation xmi:id="_n4DPMVAfEeyq-N37BhvBHQ" name="tie" method="_n-nKNFAfEeyq-N37BhvBHQ">
          <ownedParameter xmi:id="_n4DPMlAfEeyq-N37BhvBHQ" name="b">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_n4D2QFAfEeyq-N37BhvBHQ" name="humanmove" method="_n-nKNlAfEeyq-N37BhvBHQ">
          <ownedParameter xmi:id="_n4D2QVAfEeyq-N37BhvBHQ" name="loc">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_n9izMFAfEeyq-N37BhvBHQ" name="Game" method="_n-l8GVAfEeyq-N37BhvBHQ">
          <eAnnotations xmi:id="_n9jaQVAfEeyq-N37BhvBHQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_n9jaQlAfEeyq-N37BhvBHQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_n9jaQFAfEeyq-N37BhvBHQ" name="a" type="_n3w7UlAfEeyq-N37BhvBHQ"/>
          <ownedParameter xmi:id="_n9jaQ1AfEeyq-N37BhvBHQ" type="_n37TYFAfEeyq-N37BhvBHQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_n99p8FAfEeyq-N37BhvBHQ" name="minimax" method="_n-mjJFAfEeyq-N37BhvBHQ">
          <ownedParameter xmi:id="_n99p8VAfEeyq-N37BhvBHQ" name="Board" type="_n9GHQVAfEeyq-N37BhvBHQ">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_n99p9lAfEeyq-N37BhvBHQ" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_n99p8lAfEeyq-N37BhvBHQ" name="depth">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_n99p81AfEeyq-N37BhvBHQ" name="currentstate">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <ownedParameter xmi:id="_n99p9FAfEeyq-N37BhvBHQ" name="c">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_n99p9VAfEeyq-N37BhvBHQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_n9-RAFAfEeyq-N37BhvBHQ" name="actionPerformed" method="_n-nKOFAfEeyq-N37BhvBHQ">
          <ownedParameter xmi:id="_n9-RAVAfEeyq-N37BhvBHQ" name="e" type="_n9V-41AfEeyq-N37BhvBHQ"/>
        </ownedOperation>
        <nestedClassifier xmi:type="uml:Class" xmi:id="_n9JKkVAfEeyq-N37BhvBHQ" name="multi">
          <ownedAttribute xmi:id="_oiD04FB0EeypD_LFN0DTcQ" name="sc" visibility="package">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_oiEb8VB0EeypD_LFN0DTcQ" name="no" visibility="package">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedAttribute>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oiFqEFB0EeypD_LFN0DTcQ" name="multi" specification="_oiAxkFB0EeypD_LFN0DTcQ">
            <ownedParameter xmi:id="_oiFqEVB0EeypD_LFN0DTcQ" name="a">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_oiFqElB0EeypD_LFN0DTcQ" name="b">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_oiFqE1B0EeypD_LFN0DTcQ" type="_n9JKkVAfEeyq-N37BhvBHQ" direction="return">
              <name xsi:nil="true"/>
            </ownedParameter>
            <language>java</language>
            <body>sc = a;&#xD;
				no = b; &#xD;
			</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_oiAxkFB0EeypD_LFN0DTcQ" name="multi" visibility="package" method="_oiFqEFB0EeypD_LFN0DTcQ">
            <eAnnotations xmi:id="_oiBYo1B0EeypD_LFN0DTcQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_oiBYpFB0EeypD_LFN0DTcQ" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_oiBYoFB0EeypD_LFN0DTcQ" name="a">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_oiBYoVB0EeypD_LFN0DTcQ" name="b">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_oiBYolB0EeypD_LFN0DTcQ" type="_n9JKkVAfEeyq-N37BhvBHQ" direction="return"/>
          </ownedOperation>
        </nestedClassifier>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_n4IuwFAfEeyq-N37BhvBHQ" name="GeneralGame">
        <generalization xmi:id="_n9l2g1AfEeyq-N37BhvBHQ" general="_n37TYFAfEeyq-N37BhvBHQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_n-nxQFAfEeyq-N37BhvBHQ" name="GeneralGame" specification="_n9lPcFAfEeyq-N37BhvBHQ">
          <ownedParameter xmi:id="_n-nxQVAfEeyq-N37BhvBHQ" name="a" type="_n3w7UlAfEeyq-N37BhvBHQ"/>
          <ownedParameter xmi:id="_n-nxQlAfEeyq-N37BhvBHQ" type="_n4IuwFAfEeyq-N37BhvBHQ" direction="return"/>
          <language>java</language>
          <body>super(a);&#xD;
		&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_n-nxQ1AfEeyq-N37BhvBHQ" name="winner_general" specification="_n4JV0FAfEeyq-N37BhvBHQ">
          <ownedParameter xmi:id="_n-nxRFAfEeyq-N37BhvBHQ" name="b">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_n-nxRVAfEeyq-N37BhvBHQ" name="c">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_n-nxRlAfEeyq-N37BhvBHQ" name="o">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_n-nxR1AfEeyq-N37BhvBHQ" name="p">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <language>java</language>
          <body>if (gui.human1.isSelected() &amp;&amp; gui.human2.isSelected())&#xD;
		{&#xD;
			if (o == &quot;player 1&quot;)&#xD;
			{&#xD;
				temp_score1 += b;&#xD;
				gui.P1score_1.setText(String.valueOf(temp_score1));&#xD;
			}&#xD;
			else if (o == &quot;player 2&quot;)&#xD;
			{&#xD;
				temp_score2 += b;&#xD;
				gui.P1score_1_1.setText(String.valueOf(temp_score2));&#xD;
			}&#xD;
			&#xD;
		}&#xD;
		if (gui.human1.isSelected() &amp;&amp; gui.comp2.isSelected())&#xD;
		{&#xD;
			if (o == &quot;player 1&quot;)&#xD;
			{&#xD;
				temp_score1 += b;&#xD;
				gui.P1score_1.setText(String.valueOf(temp_score1));&#xD;
			}&#xD;
			else if (o == &quot;player 2&quot;)&#xD;
			{&#xD;
				temp_score2 += b;&#xD;
				gui.P1score_1_1.setText(String.valueOf(temp_score2));&#xD;
			}&#xD;
			&#xD;
		}&#xD;
		if (gui.human2.isSelected() &amp;&amp; gui.comp1.isSelected())&#xD;
		{&#xD;
			&#xD;
			 if (o == &quot;player 2&quot;)&#xD;
			{&#xD;
				 if (p == false)&#xD;
				 {&#xD;
					 temp_score1 += b;&#xD;
					gui.P1score_1.setText(String.valueOf(temp_score1));&#xD;
				 }&#xD;
				 else&#xD;
				 {&#xD;
					 temp_score2 += b;&#xD;
					gui.P1score_1_1.setText(String.valueOf(temp_score2));&#xD;
				 }&#xD;
				&#xD;
			}&#xD;
			&#xD;
		}&#xD;
		&#xD;
		int e =0;&#xD;
		for (int i =0; i &lt; gui.Isize * gui.Isize; i++)&#xD;
		{&#xD;
			if (gui.Node[i].getText() != &quot;&quot;)&#xD;
			{&#xD;
				e+=1;&#xD;
			}&#xD;
		}&#xD;
		if (e == gui.Isize * gui.Isize)&#xD;
		{&#xD;
			if (player1)&#xD;
			{&#xD;
				multi checker = checkwinner(gui.Isize*gui.Isize-1, true);&#xD;
				temp_score1+= checker.sc;&#xD;
			}&#xD;
			else if (player2)&#xD;
			{&#xD;
				multi checker = checkwinner(gui.Isize*gui.Isize-1, false);&#xD;
				temp_score2+= checker.sc;&#xD;
			}&#xD;
			if (temp_score1&lt; temp_score2)&#xD;
			{&#xD;
				score2 += temp_score2;&#xD;
				score1 += temp_score1;&#xD;
				gui.P2score.setText(String.valueOf(score2));&#xD;
				gui.P1score.setText(String.valueOf(score1));&#xD;
				JOptionPane.showMessageDialog(gui, &quot;player 2 wins&quot;);&#xD;
				resetgame();&#xD;
			}&#xD;
			else if (temp_score1 > temp_score2)&#xD;
			{&#xD;
				score2 += temp_score2;&#xD;
				score1 += temp_score1;&#xD;
				gui.P2score.setText(String.valueOf(score2));&#xD;
				gui.P1score.setText(String.valueOf(score1));&#xD;
				JOptionPane.showMessageDialog(gui, &quot;player 1 wins&quot;);&#xD;
				resetgame();&#xD;
			}&#xD;
			else if (temp_score1 == temp_score2)&#xD;
			{&#xD;
				score2 += temp_score2;&#xD;
				score1 += temp_score1;&#xD;
				gui.P2score.setText(String.valueOf(score2));&#xD;
				gui.P1score.setText(String.valueOf(score1));&#xD;
				JOptionPane.showMessageDialog(gui, &quot;Tie&quot;);&#xD;
				gui.change2(c);&#xD;
				resetgame();&#xD;
			}&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_n4JV0FAfEeyq-N37BhvBHQ" name="winner_general" method="_n-nxQ1AfEeyq-N37BhvBHQ">
          <ownedParameter xmi:id="_n4J84FAfEeyq-N37BhvBHQ" name="b">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_n4J84VAfEeyq-N37BhvBHQ" name="c">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_n4J84lAfEeyq-N37BhvBHQ" name="o">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_n4J841AfEeyq-N37BhvBHQ" name="p">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_n9lPcFAfEeyq-N37BhvBHQ" name="GeneralGame" method="_n-nxQFAfEeyq-N37BhvBHQ">
          <eAnnotations xmi:id="_n9l2gFAfEeyq-N37BhvBHQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_n9l2gVAfEeyq-N37BhvBHQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_n9lPcVAfEeyq-N37BhvBHQ" name="a" type="_n3w7UlAfEeyq-N37BhvBHQ"/>
          <ownedParameter xmi:id="_n9l2glAfEeyq-N37BhvBHQ" type="_n4IuwFAfEeyq-N37BhvBHQ" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_n4LLAFAfEeyq-N37BhvBHQ" name="GeneralGamewithAI">
        <generalization xmi:id="_n9mdlVAfEeyq-N37BhvBHQ" general="_n4IuwFAfEeyq-N37BhvBHQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_n-nxSFAfEeyq-N37BhvBHQ" name="GeneralGamewithAI" specification="_n9mdkFAfEeyq-N37BhvBHQ">
          <ownedParameter xmi:id="_n-nxSVAfEeyq-N37BhvBHQ" name="a" type="_n3w7UlAfEeyq-N37BhvBHQ"/>
          <ownedParameter xmi:id="_n-nxSlAfEeyq-N37BhvBHQ" type="_n4LLAFAfEeyq-N37BhvBHQ" direction="return"/>
          <language>java</language>
          <body>super(a);&#xD;
		&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_n-nxS1AfEeyq-N37BhvBHQ" name="forAI" specification="_n4MZIFAfEeyq-N37BhvBHQ">
          <language>java</language>
          <body>int signal = -10000;&#xD;
		int pick_index = 0;&#xD;
		int c =0;&#xD;
		int score =0, score2=0;&#xD;
		String pickit=&quot;&quot;;&#xD;
		&#xD;
		for (int a = 0; a &lt; gui.Isize * gui.Isize; a++)&#xD;
		{&#xD;
			if(gui.Node[a].getText()== &quot;&quot;)&#xD;
			{&#xD;
				&#xD;
				&#xD;
			&#xD;
				gui.Node[a].setForeground(new Color(255, 0, 0));&#xD;
				gui.Node[a].setText(&quot;S&quot;);&#xD;
		&#xD;
				score = minimax(gui.Node, 0, false,a);&#xD;
				gui.Node[a].setForeground(null);&#xD;
				gui.Node[a].setText(&quot;&quot;);&#xD;
				gui.Node[a].setForeground(new Color(255, 0, 0));&#xD;
				gui.Node[a].setText(&quot;O&quot;);&#xD;
				score2 = minimax(gui.Node, 0, false,a);&#xD;
				gui.Node[a].setForeground(null);&#xD;
				gui.Node[a].setText(&quot;&quot;);&#xD;
				&#xD;
			&#xD;
				if (score > signal) &#xD;
				{&#xD;
					&#xD;
					pickit = &quot;S&quot;;&#xD;
					signal = score;&#xD;
					pick_index = a;&#xD;
					&#xD;
				}&#xD;
				if ( score2>signal )&#xD;
				{&#xD;
					pickit = &quot;O&quot;;&#xD;
					signal = score2;&#xD;
					pick_index = a;&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		&#xD;
			player1= true;&#xD;
			player2=false;&#xD;
			gui.Node[pick_index].setFont(new Font(&quot;Tahoma&quot;, Font.PLAIN, 20));&#xD;
			gui.change2(pick_index);&#xD;
			gui.Node[pick_index].setText(pickit);&#xD;
&#xD;
		&#xD;
	&#xD;
			multi checker = checkwinner(pick_index, false);&#xD;
			if (checker.no == &quot;player 2&quot;)&#xD;
			{&#xD;
				frame.winner_general(checker.sc, pick_index, checker.no, player1);				&#xD;
			}&#xD;
			else if (checker.no == &quot;tie&quot;)&#xD;
			{&#xD;
				frame.tie(pick_index);&#xD;
			}&#xD;
		&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_n4MZIFAfEeyq-N37BhvBHQ" name="forAI" method="_n-nxS1AfEeyq-N37BhvBHQ"/>
        <ownedOperation xmi:id="_n9mdkFAfEeyq-N37BhvBHQ" name="GeneralGamewithAI" method="_n-nxSFAfEeyq-N37BhvBHQ">
          <eAnnotations xmi:id="_n9mdklAfEeyq-N37BhvBHQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_n9mdk1AfEeyq-N37BhvBHQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_n9mdkVAfEeyq-N37BhvBHQ" name="a" type="_n3w7UlAfEeyq-N37BhvBHQ"/>
          <ownedParameter xmi:id="_n9mdlFAfEeyq-N37BhvBHQ" type="_n4LLAFAfEeyq-N37BhvBHQ" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_n4NAMFAfEeyq-N37BhvBHQ" name="SimpleGame">
        <generalization xmi:id="_n9nEpFAfEeyq-N37BhvBHQ" general="_n37TYFAfEeyq-N37BhvBHQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_n-nxTFAfEeyq-N37BhvBHQ" name="SimpleGame" specification="_n9mdllAfEeyq-N37BhvBHQ">
          <ownedParameter xmi:id="_n-oYUFAfEeyq-N37BhvBHQ" name="a" type="_n3w7UlAfEeyq-N37BhvBHQ"/>
          <ownedParameter xmi:id="_n-oYUVAfEeyq-N37BhvBHQ" type="_n4NAMFAfEeyq-N37BhvBHQ" direction="return"/>
          <language>java</language>
          <body>super(a);&#xD;
		&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_n-oYUlAfEeyq-N37BhvBHQ" name="winner_simple" specification="_n4OOUFAfEeyq-N37BhvBHQ">
          <ownedParameter xmi:id="_n-oYU1AfEeyq-N37BhvBHQ" name="b">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_n-oYVFAfEeyq-N37BhvBHQ" name="c">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <language>java</language>
          <body>if (c == &quot;player 1&quot;) {&#xD;
			JOptionPane.showMessageDialog(gui, &quot;player 1 wins&quot;);&#xD;
			score1+=b;&#xD;
			gui.P1score.setText(String.valueOf(score1));&#xD;
			resetgame();&#xD;
		}&#xD;
		else if (c == &quot;player 2&quot;)&#xD;
		{&#xD;
			JOptionPane.showMessageDialog(gui, &quot;player 2 wins&quot;);&#xD;
			score2 += b;&#xD;
			gui.P2score.setText(String.valueOf(score2));&#xD;
			resetgame();&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_n4OOUFAfEeyq-N37BhvBHQ" name="winner_simple" visibility="package" method="_n-oYUlAfEeyq-N37BhvBHQ">
          <ownedParameter xmi:id="_n4OOUVAfEeyq-N37BhvBHQ" name="b">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_n4OOUlAfEeyq-N37BhvBHQ" name="c">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_n9mdllAfEeyq-N37BhvBHQ" name="SimpleGame" method="_n-nxTFAfEeyq-N37BhvBHQ">
          <eAnnotations xmi:id="_n9nEoVAfEeyq-N37BhvBHQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_n9nEolAfEeyq-N37BhvBHQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_n9nEoFAfEeyq-N37BhvBHQ" name="a" type="_n3w7UlAfEeyq-N37BhvBHQ"/>
          <ownedParameter xmi:id="_n9nEo1AfEeyq-N37BhvBHQ" type="_n4NAMFAfEeyq-N37BhvBHQ" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_n4O1YFAfEeyq-N37BhvBHQ" name="SimpleGamewithAI">
        <generalization xmi:id="_n9oSwFAfEeyq-N37BhvBHQ" general="_n4NAMFAfEeyq-N37BhvBHQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_n-oYVVAfEeyq-N37BhvBHQ" name="SimpleGamewithAI" specification="_n9nEpVAfEeyq-N37BhvBHQ">
          <ownedParameter xmi:id="_n-oYVlAfEeyq-N37BhvBHQ" name="a" type="_n3w7UlAfEeyq-N37BhvBHQ"/>
          <ownedParameter xmi:id="_n-oYV1AfEeyq-N37BhvBHQ" type="_n4O1YFAfEeyq-N37BhvBHQ" direction="return"/>
          <language>java</language>
          <body>super(a);&#xD;
		&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_n-oYWFAfEeyq-N37BhvBHQ" name="forAI" specification="_n4QDgFAfEeyq-N37BhvBHQ">
          <language>java</language>
          <body>int signal = -10000;&#xD;
		int pick_index = 0;&#xD;
		int c =0;&#xD;
		int score =0, score2=0;&#xD;
		String pickit=&quot;&quot;;&#xD;
		&#xD;
		for (int a = 0; a &lt; gui.Isize * gui.Isize; a++)&#xD;
		{&#xD;
			if(gui.Node[a].getText()== &quot;&quot;)&#xD;
			{&#xD;
				&#xD;
				&#xD;
			&#xD;
				gui.Node[a].setForeground(new Color(255, 0, 0));&#xD;
				gui.Node[a].setText(&quot;S&quot;);&#xD;
		&#xD;
				score = minimax(gui.Node, 0, false,a);&#xD;
				gui.Node[a].setForeground(null);&#xD;
				gui.Node[a].setText(&quot;&quot;);&#xD;
				gui.Node[a].setForeground(new Color(255, 0, 0));&#xD;
				gui.Node[a].setText(&quot;O&quot;);&#xD;
				score2 = minimax(gui.Node, 0, false,a);&#xD;
				gui.Node[a].setForeground(null);&#xD;
				gui.Node[a].setText(&quot;&quot;);&#xD;
				&#xD;
			&#xD;
				if (score > signal) &#xD;
				{&#xD;
					&#xD;
					pickit = &quot;S&quot;;&#xD;
					signal = score;&#xD;
					pick_index = a;&#xD;
					&#xD;
				}&#xD;
				if ( score2>signal )&#xD;
				{&#xD;
					pickit = &quot;O&quot;;&#xD;
					signal = score2;&#xD;
					pick_index = a;&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		&#xD;
			player1= true;&#xD;
			player2=false;&#xD;
			gui.Node[pick_index].setFont(new Font(&quot;Tahoma&quot;, Font.PLAIN, 20));&#xD;
			gui.change2(pick_index);&#xD;
			gui.Node[pick_index].setText(pickit);&#xD;
&#xD;
		&#xD;
	&#xD;
			multi checker = checkwinner(pick_index, false);&#xD;
			if (checker.no == &quot;player 2&quot;)&#xD;
			{&#xD;
				frame.winner_simple(checker.sc, checker.no);				&#xD;
			}&#xD;
			else if (checker.no == &quot;tie&quot;)&#xD;
			{&#xD;
				frame.tie(pick_index);&#xD;
			}&#xD;
		&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_n4QDgFAfEeyq-N37BhvBHQ" name="forAI" method="_n-oYWFAfEeyq-N37BhvBHQ"/>
        <ownedOperation xmi:id="_n9nEpVAfEeyq-N37BhvBHQ" name="SimpleGamewithAI" method="_n-oYVVAfEeyq-N37BhvBHQ">
          <eAnnotations xmi:id="_n9nEp1AfEeyq-N37BhvBHQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_n9nrsFAfEeyq-N37BhvBHQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_n9nEplAfEeyq-N37BhvBHQ" name="a" type="_n3w7UlAfEeyq-N37BhvBHQ"/>
          <ownedParameter xmi:id="_n9nrsVAfEeyq-N37BhvBHQ" type="_n4O1YFAfEeyq-N37BhvBHQ" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_n-3B0lAfEeyq-N37BhvBHQ" name="" memberEnd="_n-3B01AfEeyq-N37BhvBHQ _n-M6gFAfEeyq-N37BhvBHQ">
        <ownedEnd xmi:id="_n-3B01AfEeyq-N37BhvBHQ" name="" type="_n3w7UlAfEeyq-N37BhvBHQ" association="_n-3B0lAfEeyq-N37BhvBHQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_n-3o4VAfEeyq-N37BhvBHQ" name="" memberEnd="_n-3o4lAfEeyq-N37BhvBHQ _n-NhkVAfEeyq-N37BhvBHQ">
        <ownedEnd xmi:id="_n-3o4lAfEeyq-N37BhvBHQ" name="" type="_n3w7UlAfEeyq-N37BhvBHQ" association="_n-3o4VAfEeyq-N37BhvBHQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_n-3o5FAfEeyq-N37BhvBHQ" name="" memberEnd="_n-3o5VAfEeyq-N37BhvBHQ _n-OIoFAfEeyq-N37BhvBHQ">
        <ownedEnd xmi:id="_n-3o5VAfEeyq-N37BhvBHQ" name="" type="_n3w7UlAfEeyq-N37BhvBHQ" association="_n-3o5FAfEeyq-N37BhvBHQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_n-4P8VAfEeyq-N37BhvBHQ" name="" memberEnd="_n-4P8lAfEeyq-N37BhvBHQ _n-OIo1AfEeyq-N37BhvBHQ">
        <ownedEnd xmi:id="_n-4P8lAfEeyq-N37BhvBHQ" name="" type="_n3w7UlAfEeyq-N37BhvBHQ" association="_n-4P8VAfEeyq-N37BhvBHQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_n-43AFAfEeyq-N37BhvBHQ" name="" memberEnd="_n-43AVAfEeyq-N37BhvBHQ _n-OvsFAfEeyq-N37BhvBHQ">
        <ownedEnd xmi:id="_n-43AVAfEeyq-N37BhvBHQ" name="" type="_n3w7UlAfEeyq-N37BhvBHQ" association="_n-43AFAfEeyq-N37BhvBHQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_n-43A1AfEeyq-N37BhvBHQ" name="" memberEnd="_n-43BFAfEeyq-N37BhvBHQ _n-Ovs1AfEeyq-N37BhvBHQ">
        <ownedEnd xmi:id="_n-43BFAfEeyq-N37BhvBHQ" name="" type="_n3w7UlAfEeyq-N37BhvBHQ" association="_n-43A1AfEeyq-N37BhvBHQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_n-5eEVAfEeyq-N37BhvBHQ" name="" memberEnd="_n-5eElAfEeyq-N37BhvBHQ _n-PWwFAfEeyq-N37BhvBHQ">
        <ownedEnd xmi:id="_n-5eElAfEeyq-N37BhvBHQ" name="" type="_n3w7UlAfEeyq-N37BhvBHQ" association="_n-5eEVAfEeyq-N37BhvBHQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_n-6FIFAfEeyq-N37BhvBHQ" name="" memberEnd="_n-6FIVAfEeyq-N37BhvBHQ _n-PWw1AfEeyq-N37BhvBHQ">
        <ownedEnd xmi:id="_n-6FIVAfEeyq-N37BhvBHQ" name="" type="_n3w7UlAfEeyq-N37BhvBHQ" association="_n-6FIFAfEeyq-N37BhvBHQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_n-6FI1AfEeyq-N37BhvBHQ" name="" memberEnd="_n-6FJFAfEeyq-N37BhvBHQ _n-PWxlAfEeyq-N37BhvBHQ">
        <ownedEnd xmi:id="_n-6FJFAfEeyq-N37BhvBHQ" name="" type="_n3w7UlAfEeyq-N37BhvBHQ" association="_n-6FI1AfEeyq-N37BhvBHQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_n-6sMVAfEeyq-N37BhvBHQ" name="" memberEnd="_n-6sMlAfEeyq-N37BhvBHQ _n-P90lAfEeyq-N37BhvBHQ">
        <ownedEnd xmi:id="_n-6sMlAfEeyq-N37BhvBHQ" name="" type="_n3w7UlAfEeyq-N37BhvBHQ" association="_n-6sMVAfEeyq-N37BhvBHQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_n-6sNFAfEeyq-N37BhvBHQ" name="" memberEnd="_n-6sNVAfEeyq-N37BhvBHQ _n-P91VAfEeyq-N37BhvBHQ">
        <ownedEnd xmi:id="_n-6sNVAfEeyq-N37BhvBHQ" name="" type="_n3w7UlAfEeyq-N37BhvBHQ" association="_n-6sNFAfEeyq-N37BhvBHQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_n-7TQVAfEeyq-N37BhvBHQ" name="" memberEnd="_n-7TQlAfEeyq-N37BhvBHQ _n-Qk4lAfEeyq-N37BhvBHQ">
        <ownedEnd xmi:id="_n-7TQlAfEeyq-N37BhvBHQ" name="" type="_n3w7UlAfEeyq-N37BhvBHQ" association="_n-7TQVAfEeyq-N37BhvBHQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_n-7TRFAfEeyq-N37BhvBHQ" name="" memberEnd="_n-7TRVAfEeyq-N37BhvBHQ _n-Qk5VAfEeyq-N37BhvBHQ">
        <ownedEnd xmi:id="_n-7TRVAfEeyq-N37BhvBHQ" name="" type="_n3w7UlAfEeyq-N37BhvBHQ" association="_n-7TRFAfEeyq-N37BhvBHQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_n-76UVAfEeyq-N37BhvBHQ" name="" memberEnd="_n-76UlAfEeyq-N37BhvBHQ _n-RL8VAfEeyq-N37BhvBHQ">
        <ownedEnd xmi:id="_n-76UlAfEeyq-N37BhvBHQ" name="" type="_n3w7UlAfEeyq-N37BhvBHQ" association="_n-76UVAfEeyq-N37BhvBHQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_n-8hYFAfEeyq-N37BhvBHQ" name="" memberEnd="_n-8hYVAfEeyq-N37BhvBHQ _n-RL9FAfEeyq-N37BhvBHQ">
        <ownedEnd xmi:id="_n-8hYVAfEeyq-N37BhvBHQ" name="" type="_n3w7UlAfEeyq-N37BhvBHQ" association="_n-8hYFAfEeyq-N37BhvBHQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_n-8hY1AfEeyq-N37BhvBHQ" name="" memberEnd="_n-8hZFAfEeyq-N37BhvBHQ _n-RzAVAfEeyq-N37BhvBHQ">
        <ownedEnd xmi:id="_n-8hZFAfEeyq-N37BhvBHQ" name="" type="_n3w7UlAfEeyq-N37BhvBHQ" association="_n-8hY1AfEeyq-N37BhvBHQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_n-9IcVAfEeyq-N37BhvBHQ" name="" memberEnd="_n-9IclAfEeyq-N37BhvBHQ _n-RzBFAfEeyq-N37BhvBHQ">
        <ownedEnd xmi:id="_n-9IclAfEeyq-N37BhvBHQ" name="" type="_n3w7UlAfEeyq-N37BhvBHQ" association="_n-9IcVAfEeyq-N37BhvBHQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_n-9IdFAfEeyq-N37BhvBHQ" name="" memberEnd="_n-9IdVAfEeyq-N37BhvBHQ _n-SaEVAfEeyq-N37BhvBHQ">
        <ownedEnd xmi:id="_n-9IdVAfEeyq-N37BhvBHQ" name="" type="_n3w7UlAfEeyq-N37BhvBHQ" association="_n-9IdFAfEeyq-N37BhvBHQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_n-9vgVAfEeyq-N37BhvBHQ" name="" memberEnd="_n-9vglAfEeyq-N37BhvBHQ _n-SaFFAfEeyq-N37BhvBHQ">
        <ownedEnd xmi:id="_n-9vglAfEeyq-N37BhvBHQ" name="" type="_n3w7UlAfEeyq-N37BhvBHQ" association="_n-9vgVAfEeyq-N37BhvBHQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_n-9vhFAfEeyq-N37BhvBHQ" name="" memberEnd="_n-9vhVAfEeyq-N37BhvBHQ _n-TBIVAfEeyq-N37BhvBHQ">
        <ownedEnd xmi:id="_n-9vhVAfEeyq-N37BhvBHQ" name="" type="_n3w7UlAfEeyq-N37BhvBHQ" association="_n-9vhFAfEeyq-N37BhvBHQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_n--WkVAfEeyq-N37BhvBHQ" name="" memberEnd="_n--WklAfEeyq-N37BhvBHQ _n-TBJFAfEeyq-N37BhvBHQ">
        <ownedEnd xmi:id="_n--WklAfEeyq-N37BhvBHQ" name="" type="_n3w7UlAfEeyq-N37BhvBHQ" association="_n--WkVAfEeyq-N37BhvBHQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_n--9oVAfEeyq-N37BhvBHQ" name="" memberEnd="_n--9olAfEeyq-N37BhvBHQ _n-ToMVAfEeyq-N37BhvBHQ">
        <ownedEnd xmi:id="_n--9olAfEeyq-N37BhvBHQ" name="" type="_n3w7UlAfEeyq-N37BhvBHQ" association="_n--9oVAfEeyq-N37BhvBHQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_n--9pFAfEeyq-N37BhvBHQ" name="" memberEnd="_n--9pVAfEeyq-N37BhvBHQ _n-ToNFAfEeyq-N37BhvBHQ">
        <ownedEnd xmi:id="_n--9pVAfEeyq-N37BhvBHQ" name="" type="_n3w7UlAfEeyq-N37BhvBHQ" association="_n--9pFAfEeyq-N37BhvBHQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_n-_ksVAfEeyq-N37BhvBHQ" name="" memberEnd="_n-_kslAfEeyq-N37BhvBHQ _n-UPQVAfEeyq-N37BhvBHQ">
        <ownedEnd xmi:id="_n-_kslAfEeyq-N37BhvBHQ" name="" type="_n3w7UlAfEeyq-N37BhvBHQ" association="_n-_ksVAfEeyq-N37BhvBHQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_n-_ktFAfEeyq-N37BhvBHQ" name="" memberEnd="_n-_ktVAfEeyq-N37BhvBHQ _n-UPRFAfEeyq-N37BhvBHQ">
        <ownedEnd xmi:id="_n-_ktVAfEeyq-N37BhvBHQ" name="" type="_n3w7UlAfEeyq-N37BhvBHQ" association="_n-_ktFAfEeyq-N37BhvBHQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_n_ALwVAfEeyq-N37BhvBHQ" name="" memberEnd="_n_ALwlAfEeyq-N37BhvBHQ _n-U2UVAfEeyq-N37BhvBHQ">
        <ownedEnd xmi:id="_n_ALwlAfEeyq-N37BhvBHQ" name="" type="_n3w7UlAfEeyq-N37BhvBHQ" association="_n_ALwVAfEeyq-N37BhvBHQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_n_Ay0FAfEeyq-N37BhvBHQ" name="" memberEnd="_n_Ay0VAfEeyq-N37BhvBHQ _n-U2VFAfEeyq-N37BhvBHQ">
        <ownedEnd xmi:id="_n_Ay0VAfEeyq-N37BhvBHQ" name="" type="_n3w7UlAfEeyq-N37BhvBHQ" association="_n_Ay0FAfEeyq-N37BhvBHQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_n_Ay01AfEeyq-N37BhvBHQ" name="" memberEnd="_n_Ay1FAfEeyq-N37BhvBHQ _n-VdYVAfEeyq-N37BhvBHQ">
        <ownedEnd xmi:id="_n_Ay1FAfEeyq-N37BhvBHQ" name="" type="_n3w7UlAfEeyq-N37BhvBHQ" association="_n_Ay01AfEeyq-N37BhvBHQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_n_BZ4VAfEeyq-N37BhvBHQ" name="" memberEnd="_n_BZ4lAfEeyq-N37BhvBHQ _n-VdZFAfEeyq-N37BhvBHQ">
        <ownedEnd xmi:id="_n_BZ4lAfEeyq-N37BhvBHQ" name="" type="_n3w7UlAfEeyq-N37BhvBHQ" association="_n_BZ4VAfEeyq-N37BhvBHQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_n_BZ5FAfEeyq-N37BhvBHQ" name="" memberEnd="_n_BZ5VAfEeyq-N37BhvBHQ _n-WEcFAfEeyq-N37BhvBHQ">
        <ownedEnd xmi:id="_n_BZ5VAfEeyq-N37BhvBHQ" name="" type="_n3w7UlAfEeyq-N37BhvBHQ" association="_n_BZ5FAfEeyq-N37BhvBHQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_n_CA8VAfEeyq-N37BhvBHQ" name="" memberEnd="_n_CA8lAfEeyq-N37BhvBHQ _n-WrgFAfEeyq-N37BhvBHQ">
        <ownedEnd xmi:id="_n_CA8lAfEeyq-N37BhvBHQ" name="" type="_n37TYFAfEeyq-N37BhvBHQ" association="_n_CA8VAfEeyq-N37BhvBHQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_n_CoAFAfEeyq-N37BhvBHQ" name="" memberEnd="_n_CoAVAfEeyq-N37BhvBHQ _n-XSklAfEeyq-N37BhvBHQ">
        <ownedEnd xmi:id="_n_CoAVAfEeyq-N37BhvBHQ" name="" type="_n37TYFAfEeyq-N37BhvBHQ" association="_n_CoAFAfEeyq-N37BhvBHQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_n_CoA1AfEeyq-N37BhvBHQ" name="" memberEnd="_n_CoBFAfEeyq-N37BhvBHQ _n-YgtFAfEeyq-N37BhvBHQ">
        <ownedEnd xmi:id="_n_CoBFAfEeyq-N37BhvBHQ" name="" type="_n37TYFAfEeyq-N37BhvBHQ" association="_n_CoA1AfEeyq-N37BhvBHQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_n_DPEVAfEeyq-N37BhvBHQ" name="" memberEnd="_n_DPElAfEeyq-N37BhvBHQ _n-ZHwFAfEeyq-N37BhvBHQ">
        <ownedEnd xmi:id="_n_DPElAfEeyq-N37BhvBHQ" name="" type="_n37TYFAfEeyq-N37BhvBHQ" association="_n_DPEVAfEeyq-N37BhvBHQ"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_n2gXEFAfEeyq-N37BhvBHQ" name="GameModeTest">
      <packagedElement xmi:type="uml:Class" xmi:id="_n3jf8FAfEeyq-N37BhvBHQ" name="ProductionGUI">
        <ownedAttribute xmi:id="_n-Gz4lAfEeyq-N37BhvBHQ" name="simplegame" visibility="package" type="_n9M08lAfEeyq-N37BhvBHQ" association="_n-xiQFAfEeyq-N37BhvBHQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_n-Gz41AfEeyq-N37BhvBHQ" value="new JRadioButton(&quot;Simple Game&quot;)"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_n-Ha8VAfEeyq-N37BhvBHQ" name="genegame" visibility="package" type="_n9M08lAfEeyq-N37BhvBHQ" association="_n-yJUFAfEeyq-N37BhvBHQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_n-Ha8lAfEeyq-N37BhvBHQ" value="new JRadioButton(&quot;General Game&quot;)"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_n-Ha9FAfEeyq-N37BhvBHQ" name="Node" type="_n9GHQVAfEeyq-N37BhvBHQ" association="_n-yJU1AfEeyq-N37BhvBHQ">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_n-Ha9VAfEeyq-N37BhvBHQ" value="*"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_n-i41FAfEeyq-N37BhvBHQ" name="GUI" specification="_n3kHAFAfEeyq-N37BhvBHQ">
          <language>java</language>
          <body>ButtonGroup mode = new ButtonGroup();&#xD;
	simplegame.setFont(new Font(&quot;Tahoma&quot;, Font.PLAIN, 26));&#xD;
	simplegame.setBounds(306, 164, 234, 59);&#xD;
	simplegame.setSelected(false);&#xD;
	&#xD;
	genegame.setFont(new Font(&quot;Tahoma&quot;, Font.PLAIN, 26));&#xD;
	genegame.setBounds(581, 164, 195, 59);&#xD;
	mode.add(simplegame); mode.add(genegame);&#xD;
	&#xD;
	assertNotNull(mode);	&#xD;
</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_n3kHAFAfEeyq-N37BhvBHQ" name="GUI" method="_n-i41FAfEeyq-N37BhvBHQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_n3lVIFAfEeyq-N37BhvBHQ" name="productionGame">
        <ownedAttribute xmi:id="_n-ICAlAfEeyq-N37BhvBHQ" name="gui" visibility="package" type="_n3jf8FAfEeyq-N37BhvBHQ" association="_n-ywYVAfEeyq-N37BhvBHQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_n-ICA1AfEeyq-N37BhvBHQ" value="new ProductionGUI()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_n-IpEFAfEeyq-N37BhvBHQ" name="i" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_n-IpEVAfEeyq-N37BhvBHQ" value="0"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_ZVK_IFAgEeyq-N37BhvBHQ" name="gui_1" visibility="package" type="_n3jf8FAfEeyq-N37BhvBHQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_ZVK_IVAgEeyq-N37BhvBHQ" visibility="public" value="new ProductionGUI()"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_n-i41VAfEeyq-N37BhvBHQ" name="choosesimple" specification="_n9OqIFAfEeyq-N37BhvBHQ">
          <ownedParameter xmi:id="_n-i41lAfEeyq-N37BhvBHQ" name="gui2" type="_n3jf8FAfEeyq-N37BhvBHQ"/>
          <ownedParameter xmi:id="_n-i411AfEeyq-N37BhvBHQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>gui2.simplegame.setSelected(true);&#xD;
		gui2.genegame.setSelected(false);&#xD;
		assertEquals(gui2.simplegame.isSelected(), true);&#xD;
		return i;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_n-jf0FAfEeyq-N37BhvBHQ" name="choosegene" specification="_n9P4QFAfEeyq-N37BhvBHQ">
          <ownedParameter xmi:id="_n-jf0VAfEeyq-N37BhvBHQ" name="gui3" type="_n3jf8FAfEeyq-N37BhvBHQ"/>
          <ownedParameter xmi:id="_n-jf0lAfEeyq-N37BhvBHQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>i =1;&#xD;
		gui3.simplegame.setSelected(false);&#xD;
		gui3.genegame.setSelected(true);&#xD;
		return i;&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_n9OqIFAfEeyq-N37BhvBHQ" name="choosesimple" method="_n-i41VAfEeyq-N37BhvBHQ">
          <ownedParameter xmi:id="_n9OqIVAfEeyq-N37BhvBHQ" name="gui2" type="_n3jf8FAfEeyq-N37BhvBHQ"/>
          <ownedParameter xmi:id="_n9PRMFAfEeyq-N37BhvBHQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_n9P4QFAfEeyq-N37BhvBHQ" name="choosegene" method="_n-jf0FAfEeyq-N37BhvBHQ">
          <ownedParameter xmi:id="_n9P4QVAfEeyq-N37BhvBHQ" name="gui3" type="_n3jf8FAfEeyq-N37BhvBHQ"/>
          <ownedParameter xmi:id="_n9P4QlAfEeyq-N37BhvBHQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_n3mjQFAfEeyq-N37BhvBHQ" name="testGame">
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_n-jf01AfEeyq-N37BhvBHQ" name="test" specification="_n3nKUFAfEeyq-N37BhvBHQ">
          <language>java</language>
          <body>ProductionGUI gui;&#xD;
		productionGame test = new productionGame();&#xD;
		gui = new ProductionGUI();&#xD;
		int check = test.choosesimple(gui);&#xD;
		if (check == 0)&#xD;
		{&#xD;
			assertEquals(gui.simplegame.isSelected(), true);&#xD;
			assertEquals(gui.genegame.isSelected(), false);&#xD;
		}&#xD;
		else if (check == 1)&#xD;
		{&#xD;
			assertEquals(gui.simplegame.isSelected(), false);&#xD;
			assertEquals(gui.genegame.isSelected(), true);&#xD;
		}&#xD;
		&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_n3nKUFAfEeyq-N37BhvBHQ" name="test" method="_n-jf01AfEeyq-N37BhvBHQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_n-xiQFAfEeyq-N37BhvBHQ" name="" memberEnd="_n-xiQVAfEeyq-N37BhvBHQ _n-Gz4lAfEeyq-N37BhvBHQ">
        <ownedEnd xmi:id="_n-xiQVAfEeyq-N37BhvBHQ" name="" type="_n3jf8FAfEeyq-N37BhvBHQ" association="_n-xiQFAfEeyq-N37BhvBHQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_n-yJUFAfEeyq-N37BhvBHQ" name="" memberEnd="_n-yJUVAfEeyq-N37BhvBHQ _n-Ha8VAfEeyq-N37BhvBHQ">
        <ownedEnd xmi:id="_n-yJUVAfEeyq-N37BhvBHQ" name="" type="_n3jf8FAfEeyq-N37BhvBHQ" association="_n-yJUFAfEeyq-N37BhvBHQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_n-yJU1AfEeyq-N37BhvBHQ" name="" memberEnd="_n-yJVFAfEeyq-N37BhvBHQ _n-Ha9FAfEeyq-N37BhvBHQ">
        <ownedEnd xmi:id="_n-yJVFAfEeyq-N37BhvBHQ" name="" type="_n3jf8FAfEeyq-N37BhvBHQ" association="_n-yJU1AfEeyq-N37BhvBHQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_n-ywYVAfEeyq-N37BhvBHQ" name="" memberEnd="_n-ywYlAfEeyq-N37BhvBHQ _n-ICAlAfEeyq-N37BhvBHQ">
        <ownedEnd xmi:id="_n-ywYlAfEeyq-N37BhvBHQ" name="" type="_n3lVIFAfEeyq-N37BhvBHQ" association="_n-ywYVAfEeyq-N37BhvBHQ"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_n2iMQlAfEeyq-N37BhvBHQ" name="GetBoard">
      <packagedElement xmi:type="uml:Class" xmi:id="_n3nKVFAfEeyq-N37BhvBHQ" name="Getboad_test">
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_n-jf1FAfEeyq-N37BhvBHQ" name="main" specification="_n3nxYFAfEeyq-N37BhvBHQ">
          <ownedParameter xmi:id="_n-jf1VAfEeyq-N37BhvBHQ" name="args">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_n-jf1lAfEeyq-N37BhvBHQ" value="*"/>
          </ownedParameter>
          <language>java</language>
          <body>Result result = JUnitCore.runClasses(getboard.class);&#xD;
	for(Failure failure : result.getFailures())&#xD;
	{&#xD;
		System.out.println(failure.toString());&#xD;
	}&#xD;
	System.out.println(&quot;Test result for Acceptance Criteria 1 (get empty board): &quot; + result.wasSuccessful() );&#xD;
</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_n3nxYFAfEeyq-N37BhvBHQ" name="main" isStatic="true" method="_n-jf1FAfEeyq-N37BhvBHQ">
          <ownedParameter xmi:id="_n3nxYVAfEeyq-N37BhvBHQ" name="args">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_n3oYcFAfEeyq-N37BhvBHQ" value="*"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_n3oYcVAfEeyq-N37BhvBHQ" name="getboard">
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_n-jf11AfEeyq-N37BhvBHQ" name="main" specification="_n3oYclAfEeyq-N37BhvBHQ">
          <language>java</language>
          <body>JButton[] a = createboardwithsize(3); //test board size with input = 3&#xD;
		assertEquals(a.length, 9);&#xD;
		JButton[] b = createboardwithsize(4); //test board size with input = 4&#xD;
		assertEquals(b.length, 16);&#xD;
		JButton[] c = createboardwithsize(5); //test board size with input = 5&#xD;
		assertEquals(c.length, 25);&#xD;
		JButton[] d = createboardwithsize(6); //test board size with input = 6&#xD;
		assertEquals(d.length, 36);&#xD;
		JButton[] e = createboardwithsize(7); //test board size with input = 7&#xD;
		assertEquals(e.length, 49);&#xD;
		&#xD;
		&#xD;
		&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_n-jf2FAfEeyq-N37BhvBHQ" name="createboardwithsize" specification="_n3o_g1AfEeyq-N37BhvBHQ">
          <ownedParameter xmi:id="_n-jf2VAfEeyq-N37BhvBHQ" name="size">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_n-jf2lAfEeyq-N37BhvBHQ" type="_n9GHQVAfEeyq-N37BhvBHQ" direction="return">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_n-jf21AfEeyq-N37BhvBHQ" value="*"/>
          </ownedParameter>
          <language>java</language>
          <body>JButton[] Node = new JButton[size*size];&#xD;
		JPanel Grid = new JPanel();&#xD;
		String charS = &quot;S&quot;;&#xD;
		String charO = &quot;O&quot;;&#xD;
		for (int i = 0; i &lt;size*size; i++)&#xD;
		{&#xD;
			Node[i]= new JButton();&#xD;
			Grid.add(Node[i]);&#xD;
			Node[i].setFocusable(false);&#xD;
			Node[i].setFont(new Font(&quot;Tahoma&quot;, Font.PLAIN, 31));&#xD;
			assertNotEquals(Node[i].getText(), charS);&#xD;
			assertNotEquals(Node[i].getText(), charO);&#xD;
		}&#xD;
		assertNotNull(Grid);&#xD;
		return Node;&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_n3oYclAfEeyq-N37BhvBHQ" name="main" method="_n-jf11AfEeyq-N37BhvBHQ"/>
        <ownedOperation xmi:id="_n3o_g1AfEeyq-N37BhvBHQ" name="createboardwithsize" visibility="package" method="_n-jf2FAfEeyq-N37BhvBHQ">
          <ownedParameter xmi:id="_n3o_hFAfEeyq-N37BhvBHQ" name="size">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_n3pmkFAfEeyq-N37BhvBHQ" type="_n9GHQVAfEeyq-N37BhvBHQ" direction="return">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_n3pmkVAfEeyq-N37BhvBHQ" value="*"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_n2izUFAfEeyq-N37BhvBHQ" name="MakeSize">
      <packagedElement xmi:type="uml:Class" xmi:id="_n3vGIFAfEeyq-N37BhvBHQ" name="GUI_makesize">
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_n-kG7VAfEeyq-N37BhvBHQ" name="createboardwithsize" specification="_n3vGIVAfEeyq-N37BhvBHQ">
          <ownedParameter xmi:id="_n-kG7lAfEeyq-N37BhvBHQ" name="size">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_n-kG71AfEeyq-N37BhvBHQ" type="_n9GHQVAfEeyq-N37BhvBHQ" direction="return">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_n-kG8FAfEeyq-N37BhvBHQ" value="*"/>
          </ownedParameter>
          <language>java</language>
          <body>JButton[] Node = new JButton[size*size];&#xD;
		JPanel Grid = new JPanel();&#xD;
&#xD;
		for (int i = 0; i &lt;size*size; i++)&#xD;
		{&#xD;
			Node[i]= new JButton();&#xD;
			Grid.add(Node[i]);&#xD;
			Node[i].setFocusable(false);&#xD;
			Node[i].setFont(new Font(&quot;Tahoma&quot;, Font.PLAIN, 31));&#xD;
		}&#xD;
		&#xD;
		return Node;&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_n3vGIVAfEeyq-N37BhvBHQ" name="createboardwithsize" visibility="package" method="_n-kG7VAfEeyq-N37BhvBHQ">
          <ownedParameter xmi:id="_n3vGIlAfEeyq-N37BhvBHQ" name="size">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_n3vGI1AfEeyq-N37BhvBHQ" type="_n9GHQVAfEeyq-N37BhvBHQ" direction="return">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_n3vGJFAfEeyq-N37BhvBHQ" value="*"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_n3vtMVAfEeyq-N37BhvBHQ" name="test_size" visibility="package">
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_n-kt8FAfEeyq-N37BhvBHQ" name="test" specification="_n3wUQFAfEeyq-N37BhvBHQ">
          <language>java</language>
          <body>GUI_makesize New = new GUI_makesize(); &#xD;
		JButton[] a = New.createboardwithsize(3); //test board size with input = 3&#xD;
		assertEquals(a.length, 9);&#xD;
		JButton[] b = New.createboardwithsize(4); //test board size with input = 4&#xD;
		assertEquals(b.length, 16);&#xD;
		JButton[] c = New.createboardwithsize(5); //test board size with input = 5&#xD;
		assertEquals(c.length, 25);&#xD;
		JButton[] d = New.createboardwithsize(6); //test board size with input = 6&#xD;
		assertEquals(d.length, 36);&#xD;
		JButton[] e = New.createboardwithsize(7); //test board size with input = 7&#xD;
		assertEquals(e.length, 49);&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_n3wUQFAfEeyq-N37BhvBHQ" name="test" visibility="package" method="_n-kt8FAfEeyq-N37BhvBHQ"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_n2kogFAfEeyq-N37BhvBHQ" name="MakeMove">
      <packagedElement xmi:type="uml:Class" xmi:id="_n3qNoFAfEeyq-N37BhvBHQ" name="GUImove">
        <ownedAttribute xmi:id="_n-IpE1AfEeyq-N37BhvBHQ" name="S1" visibility="package" type="_n9M08lAfEeyq-N37BhvBHQ" association="_n-zXcFAfEeyq-N37BhvBHQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_n-IpFFAfEeyq-N37BhvBHQ" value="new JRadioButton(&quot;S&quot;)"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_n-JQIVAfEeyq-N37BhvBHQ" name="O1" visibility="package" type="_n9M08lAfEeyq-N37BhvBHQ" association="_n-zXc1AfEeyq-N37BhvBHQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_n-JQIlAfEeyq-N37BhvBHQ" value="new JRadioButton(&quot;O&quot;)"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_n-JQJFAfEeyq-N37BhvBHQ" name="S2" visibility="package" type="_n9M08lAfEeyq-N37BhvBHQ" association="_n-z-gVAfEeyq-N37BhvBHQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_n-JQJVAfEeyq-N37BhvBHQ" value="new JRadioButton(&quot;S&quot;)"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_n-J3MFAfEeyq-N37BhvBHQ" name="O2" visibility="package" type="_n9M08lAfEeyq-N37BhvBHQ" association="_n-z-hFAfEeyq-N37BhvBHQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_n-J3MVAfEeyq-N37BhvBHQ" value="new JRadioButton(&quot;O&quot;)"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_n-J3M1AfEeyq-N37BhvBHQ" name="SO1" visibility="package" type="_n9M08FAfEeyq-N37BhvBHQ" association="_n-0lkVAfEeyq-N37BhvBHQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_n-J3NFAfEeyq-N37BhvBHQ" value="new ButtonGroup()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_n-KeQFAfEeyq-N37BhvBHQ" name="SO2" visibility="package" type="_n9M08FAfEeyq-N37BhvBHQ" association="_n-1MoFAfEeyq-N37BhvBHQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_n-KeQVAfEeyq-N37BhvBHQ" value="new ButtonGroup()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_n-KeQ1AfEeyq-N37BhvBHQ" name="Node" visibility="package" type="_n9GHQVAfEeyq-N37BhvBHQ" association="_n-1Mo1AfEeyq-N37BhvBHQ">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_n-KeRFAfEeyq-N37BhvBHQ" value="*"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_n-KeRlAfEeyq-N37BhvBHQ" value="new JButton[64]"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_n-kG4FAfEeyq-N37BhvBHQ" name="GUI" specification="_n3qNoVAfEeyq-N37BhvBHQ">
          <language>java</language>
          <body>S1.setFont(new Font(&quot;Tahoma&quot;, Font.PLAIN, 26));&#xD;
		S1.setBounds(55, 329, 172, 59);&#xD;
&#xD;
		O1.setFont(new Font(&quot;Tahoma&quot;, Font.PLAIN, 26));&#xD;
		O1.setBounds(55, 401, 172, 59);&#xD;
		&#xD;
		S2.setFont(new Font(&quot;Tahoma&quot;, Font.PLAIN, 26));&#xD;
		S2.setBounds(934, 329, 172, 59);&#xD;
&#xD;
		O2.setFont(new Font(&quot;Tahoma&quot;, Font.PLAIN, 26));&#xD;
		O2.setBounds(934, 401, 172, 59);&#xD;
		&#xD;
		SO1.add(S1); SO1.add(O1);&#xD;
		SO2.add(S2); SO2.add(O2);&#xD;
		&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_n-kG4VAfEeyq-N37BhvBHQ" name="createboard" specification="_n3q0sFAfEeyq-N37BhvBHQ">
          <ownedParameter xmi:id="_n-kG4lAfEeyq-N37BhvBHQ" type="_n9GHQVAfEeyq-N37BhvBHQ" direction="return">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_n-kG41AfEeyq-N37BhvBHQ" value="*"/>
          </ownedParameter>
          <language>java</language>
          <body>JButton[] empty = new JButton[64];&#xD;
		for (int i = 0; i &lt;64; i++)&#xD;
		{&#xD;
			empty[i]= new JButton();&#xD;
			empty[i].setFocusable(false);&#xD;
			empty[i].setFont(new Font(&quot;Tahoma&quot;, Font.PLAIN, 31));&#xD;
&#xD;
		}&#xD;
		return empty;&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_n3qNoVAfEeyq-N37BhvBHQ" name="GUI" method="_n-kG4FAfEeyq-N37BhvBHQ"/>
        <ownedOperation xmi:id="_n3q0sFAfEeyq-N37BhvBHQ" name="createboard" method="_n-kG4VAfEeyq-N37BhvBHQ">
          <ownedParameter xmi:id="_n3q0sVAfEeyq-N37BhvBHQ" type="_n9GHQVAfEeyq-N37BhvBHQ" direction="return">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_n3q0slAfEeyq-N37BhvBHQ" value="*"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_n3sC0FAfEeyq-N37BhvBHQ" name="productionMove">
        <ownedAttribute xmi:id="_n-LFUVAfEeyq-N37BhvBHQ" name="rnd" visibility="package" type="_n9S7kFAfEeyq-N37BhvBHQ" association="_n-1zsVAfEeyq-N37BhvBHQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_n-LFUlAfEeyq-N37BhvBHQ" value="new Random()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_n-LFVFAfEeyq-N37BhvBHQ" name="player1" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_n-LsYVAfEeyq-N37BhvBHQ" name="player2" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_n-LsY1AfEeyq-N37BhvBHQ" name="gui" visibility="package" type="_n3qNoFAfEeyq-N37BhvBHQ" association="_n-1ztFAfEeyq-N37BhvBHQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_n-kG5FAfEeyq-N37BhvBHQ" name="makemove" specification="_n91uIFAfEeyq-N37BhvBHQ">
          <ownedParameter xmi:id="_n-kG5VAfEeyq-N37BhvBHQ" name="Check" type="_n9GHQVAfEeyq-N37BhvBHQ">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_n-kG5lAfEeyq-N37BhvBHQ" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_n-kG51AfEeyq-N37BhvBHQ" name="player">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_n-kG6FAfEeyq-N37BhvBHQ" name="number">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_n-kG6VAfEeyq-N37BhvBHQ" name="i">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_n-kG6lAfEeyq-N37BhvBHQ" type="_n9GHQVAfEeyq-N37BhvBHQ" direction="return">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_n-kG61AfEeyq-N37BhvBHQ" value="*"/>
          </ownedParameter>
          <language>java</language>
          <body>JButton[] New = Check;&#xD;
		int p = player;&#xD;
		int n = number;&#xD;
		&#xD;
			if (p == 0 &amp;&amp; n == 0)&#xD;
			{&#xD;
				&#xD;
				if(New[i].getText()== &quot;&quot;)&#xD;
				{&#xD;
					New[i].setText(&quot;S&quot;);&#xD;
					player1= false;&#xD;
					player2=true;&#xD;
				}&#xD;
				else if (New[i].getText()!= &quot;&quot;)&#xD;
				{&#xD;
					player1= true;&#xD;
					player2=false;&#xD;
				}&#xD;
			}&#xD;
			else if (p == 0 &amp;&amp; n == 1)&#xD;
			{&#xD;
				&#xD;
				if(New[i].getText()== &quot;&quot;)&#xD;
				{&#xD;
					New[i].setText(&quot;O&quot;);&#xD;
					player1= false;&#xD;
					player2=true;&#xD;
				}&#xD;
				else if (New[i].getText()!= &quot;&quot;)&#xD;
				{&#xD;
					player1= true;&#xD;
					player2=false;&#xD;
				}&#xD;
			}&#xD;
			else if (p == 1 &amp;&amp; n == 2)&#xD;
			{&#xD;
				&#xD;
				if(New[i].getText()== &quot;&quot;)&#xD;
				{&#xD;
					New[i].setText(&quot;S&quot;);&#xD;
					player1= true;&#xD;
					player2=false;&#xD;
				}&#xD;
				else if (New[i].getText()!= &quot;&quot;)&#xD;
				{&#xD;
					player1= false;&#xD;
					player2=true;&#xD;
				}&#xD;
			}&#xD;
			else if (p == 1 &amp;&amp; n == 3)&#xD;
			{&#xD;
				&#xD;
				if(New[i].getText()== &quot;&quot;)&#xD;
				{&#xD;
					New[i].setText(&quot;O&quot;);&#xD;
					player1= true;&#xD;
					player2=false;&#xD;
				}&#xD;
				else if (New[i].getText()!= &quot;&quot;)&#xD;
				{&#xD;
					player1= false;&#xD;
					player2=true;&#xD;
				}&#xD;
			}&#xD;
		&#xD;
		return New;&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_n91uIFAfEeyq-N37BhvBHQ" name="makemove" method="_n-kG5FAfEeyq-N37BhvBHQ">
          <ownedParameter xmi:id="_n92VMFAfEeyq-N37BhvBHQ" name="Check" type="_n9GHQVAfEeyq-N37BhvBHQ">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_n92VN1AfEeyq-N37BhvBHQ" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_n92VMVAfEeyq-N37BhvBHQ" name="player">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_n92VMlAfEeyq-N37BhvBHQ" name="number">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_n92VM1AfEeyq-N37BhvBHQ" name="i">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_n92VNFAfEeyq-N37BhvBHQ" type="_n9GHQVAfEeyq-N37BhvBHQ" direction="return">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_n92VNVAfEeyq-N37BhvBHQ" value="*"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_n3t4AFAfEeyq-N37BhvBHQ" name="test_move" visibility="package">
        <ownedAttribute xmi:id="_n-MTcFAfEeyq-N37BhvBHQ" name="gui" visibility="package" type="_n3qNoFAfEeyq-N37BhvBHQ" association="_n-2awVAfEeyq-N37BhvBHQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_n-MTcVAfEeyq-N37BhvBHQ" value="new GUImove()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_n-MTc1AfEeyq-N37BhvBHQ" name="rnd" visibility="package" type="_n9S7kFAfEeyq-N37BhvBHQ" association="_n-2axFAfEeyq-N37BhvBHQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_n-MTdFAfEeyq-N37BhvBHQ" value="new Random()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_9PQIkFBnEeyBJLasiEs0UA" name="gui_1" visibility="package" type="_n3qNoFAfEeyq-N37BhvBHQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_9PQIkVBnEeyBJLasiEs0UA" visibility="public" value="new GUImove()"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_n-kG7FAfEeyq-N37BhvBHQ" name="test" specification="_n3t4AVAfEeyq-N37BhvBHQ">
          <language>java</language>
          <body>JButton[] Node = new JButton[64];&#xD;
		Node = gui.createboard();&#xD;
		boolean chooseS1 = true;&#xD;
	&#xD;
		productionMove test = new productionMove();&#xD;
		Node = test.makemove(Node, 0, 0, 6);&#xD;
		&#xD;
		assertEquals(Node[6].getText(), &quot;S&quot;);&#xD;
		&#xD;
		Node = test.makemove(Node, 1, 3, 6);&#xD;
		assertNotEquals(Node[6].getText(), &quot;O&quot;);&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_n3t4AVAfEeyq-N37BhvBHQ" name="test" visibility="package" method="_n-kG7FAfEeyq-N37BhvBHQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_n-zXcFAfEeyq-N37BhvBHQ" name="" memberEnd="_n-zXcVAfEeyq-N37BhvBHQ _n-IpE1AfEeyq-N37BhvBHQ">
        <ownedEnd xmi:id="_n-zXcVAfEeyq-N37BhvBHQ" name="" type="_n3qNoFAfEeyq-N37BhvBHQ" association="_n-zXcFAfEeyq-N37BhvBHQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_n-zXc1AfEeyq-N37BhvBHQ" name="" memberEnd="_n-zXdFAfEeyq-N37BhvBHQ _n-JQIVAfEeyq-N37BhvBHQ">
        <ownedEnd xmi:id="_n-zXdFAfEeyq-N37BhvBHQ" name="" type="_n3qNoFAfEeyq-N37BhvBHQ" association="_n-zXc1AfEeyq-N37BhvBHQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_n-z-gVAfEeyq-N37BhvBHQ" name="" memberEnd="_n-z-glAfEeyq-N37BhvBHQ _n-JQJFAfEeyq-N37BhvBHQ">
        <ownedEnd xmi:id="_n-z-glAfEeyq-N37BhvBHQ" name="" type="_n3qNoFAfEeyq-N37BhvBHQ" association="_n-z-gVAfEeyq-N37BhvBHQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_n-z-hFAfEeyq-N37BhvBHQ" name="" memberEnd="_n-z-hVAfEeyq-N37BhvBHQ _n-J3MFAfEeyq-N37BhvBHQ">
        <ownedEnd xmi:id="_n-z-hVAfEeyq-N37BhvBHQ" name="" type="_n3qNoFAfEeyq-N37BhvBHQ" association="_n-z-hFAfEeyq-N37BhvBHQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_n-0lkVAfEeyq-N37BhvBHQ" name="" memberEnd="_n-0lklAfEeyq-N37BhvBHQ _n-J3M1AfEeyq-N37BhvBHQ">
        <ownedEnd xmi:id="_n-0lklAfEeyq-N37BhvBHQ" name="" type="_n3qNoFAfEeyq-N37BhvBHQ" association="_n-0lkVAfEeyq-N37BhvBHQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_n-1MoFAfEeyq-N37BhvBHQ" name="" memberEnd="_n-1MoVAfEeyq-N37BhvBHQ _n-KeQFAfEeyq-N37BhvBHQ">
        <ownedEnd xmi:id="_n-1MoVAfEeyq-N37BhvBHQ" name="" type="_n3qNoFAfEeyq-N37BhvBHQ" association="_n-1MoFAfEeyq-N37BhvBHQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_n-1Mo1AfEeyq-N37BhvBHQ" name="" memberEnd="_n-1MpFAfEeyq-N37BhvBHQ _n-KeQ1AfEeyq-N37BhvBHQ">
        <ownedEnd xmi:id="_n-1MpFAfEeyq-N37BhvBHQ" name="" type="_n3qNoFAfEeyq-N37BhvBHQ" association="_n-1Mo1AfEeyq-N37BhvBHQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_n-1zsVAfEeyq-N37BhvBHQ" name="" memberEnd="_n-1zslAfEeyq-N37BhvBHQ _n-LFUVAfEeyq-N37BhvBHQ">
        <ownedEnd xmi:id="_n-1zslAfEeyq-N37BhvBHQ" name="" type="_n3sC0FAfEeyq-N37BhvBHQ" association="_n-1zsVAfEeyq-N37BhvBHQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_n-1ztFAfEeyq-N37BhvBHQ" name="" memberEnd="_n-1ztVAfEeyq-N37BhvBHQ _n-LsY1AfEeyq-N37BhvBHQ">
        <ownedEnd xmi:id="_n-1ztVAfEeyq-N37BhvBHQ" name="" type="_n3sC0FAfEeyq-N37BhvBHQ" association="_n-1ztFAfEeyq-N37BhvBHQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_n-2awVAfEeyq-N37BhvBHQ" name="" memberEnd="_n-2awlAfEeyq-N37BhvBHQ _n-MTcFAfEeyq-N37BhvBHQ">
        <ownedEnd xmi:id="_n-2awlAfEeyq-N37BhvBHQ" name="" type="_n3t4AFAfEeyq-N37BhvBHQ" association="_n-2awVAfEeyq-N37BhvBHQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_n-2axFAfEeyq-N37BhvBHQ" name="" memberEnd="_n-3B0FAfEeyq-N37BhvBHQ _n-MTc1AfEeyq-N37BhvBHQ">
        <ownedEnd xmi:id="_n-3B0FAfEeyq-N37BhvBHQ" name="" type="_n3t4AFAfEeyq-N37BhvBHQ" association="_n-2axFAfEeyq-N37BhvBHQ"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_n2704FAfEeyq-N37BhvBHQ" name="SetUpGame">
      <packagedElement xmi:type="uml:Class" xmi:id="_n4RRoFAfEeyq-N37BhvBHQ" name="productionGUI_newgame">
        <ownedAttribute xmi:id="_n-aV4FAfEeyq-N37BhvBHQ" name="game" visibility="package" type="_n4UU8FAfEeyq-N37BhvBHQ" association="_n_DPFFAfEeyq-N37BhvBHQ"/>
        <ownedAttribute xmi:id="_n-aV4lAfEeyq-N37BhvBHQ" name="replay" visibility="package" type="_n9GHQVAfEeyq-N37BhvBHQ" association="_n_D2IVAfEeyq-N37BhvBHQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_n-a88FAfEeyq-N37BhvBHQ" value="new JButton(&quot;New Game&quot;)"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_n-a88lAfEeyq-N37BhvBHQ" name="Node" visibility="package" type="_n9GHQVAfEeyq-N37BhvBHQ" association="_n_D2JFAfEeyq-N37BhvBHQ">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_n-a881AfEeyq-N37BhvBHQ" value="*"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_n-a89VAfEeyq-N37BhvBHQ" value="new JButton[64]"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_n-oYWVAfEeyq-N37BhvBHQ" name="GUI" specification="_n4R4sFAfEeyq-N37BhvBHQ">
          <language>java</language>
          <body>for (int i = 0; i &lt;64; i++)&#xD;
		{&#xD;
			Node[i]= new JButton();&#xD;
&#xD;
			Node[i].setFocusable(false);&#xD;
			Node[i].setFont(new Font(&quot;Tahoma&quot;, Font.PLAIN, 31));&#xD;
		}&#xD;
		replay.setFont(new Font(&quot;Tahoma&quot;, Font.PLAIN, 30));&#xD;
		replay.setBounds(878, 768, 172, 67);	&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_n4R4sFAfEeyq-N37BhvBHQ" name="GUI" method="_n-oYWVAfEeyq-N37BhvBHQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_n4TG0FAfEeyq-N37BhvBHQ" name="productionGUI_replay">
        <ownedAttribute xmi:id="_n-bkAVAfEeyq-N37BhvBHQ" name="game" visibility="package" type="_n4WKIFAfEeyq-N37BhvBHQ" association="_n_EdMVAfEeyq-N37BhvBHQ"/>
        <ownedAttribute xmi:id="_n-bkA1AfEeyq-N37BhvBHQ" name="replay" visibility="package" type="_n9GHQVAfEeyq-N37BhvBHQ" association="_n_FEQFAfEeyq-N37BhvBHQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_n-bkBFAfEeyq-N37BhvBHQ" value="new JButton(&quot;Replay&quot;)"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_n-cLEVAfEeyq-N37BhvBHQ" name="Node" visibility="package" type="_n9GHQVAfEeyq-N37BhvBHQ" association="_n_FEQ1AfEeyq-N37BhvBHQ">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_n-cLElAfEeyq-N37BhvBHQ" value="*"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_n-cLFFAfEeyq-N37BhvBHQ" value="new JButton[64]"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_n-oYWlAfEeyq-N37BhvBHQ" name="GUI" specification="_n4Tt4FAfEeyq-N37BhvBHQ">
          <language>java</language>
          <body>JPanel Grid = new JPanel();&#xD;
		for (int i = 0; i &lt;64; i++)&#xD;
		{&#xD;
			Node[i]= new JButton();&#xD;
			Grid.add(Node[i]);&#xD;
			Node[i].setFocusable(false);&#xD;
			Node[i].setFont(new Font(&quot;Tahoma&quot;, Font.PLAIN, 31));&#xD;
&#xD;
		}&#xD;
		&#xD;
		&#xD;
		replay.setFont(new Font(&quot;Tahoma&quot;, Font.PLAIN, 30));&#xD;
		replay.setBounds(878, 768, 172, 67);&#xD;
		&#xD;
	&#xD;
		&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_n4Tt4FAfEeyq-N37BhvBHQ" name="GUI" method="_n-oYWlAfEeyq-N37BhvBHQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_n4UU8FAfEeyq-N37BhvBHQ" name="productionGame_newgame">
        <ownedAttribute xmi:id="_n-cyIFAfEeyq-N37BhvBHQ" name="gui" visibility="package" type="_n4TG0FAfEeyq-N37BhvBHQ" association="_n_FrUVAfEeyq-N37BhvBHQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_n-oYW1AfEeyq-N37BhvBHQ" name="newgame" specification="_n9pg4FAfEeyq-N37BhvBHQ">
          <ownedParameter xmi:id="_n-oYXFAfEeyq-N37BhvBHQ" name="gui" type="_n4RRoFAfEeyq-N37BhvBHQ"/>
          <language>java</language>
          <body>for (int i = 0; i &lt;64; i++)&#xD;
		{&#xD;
			gui.Node[i].setText(&quot;&quot;);&#xD;
			&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_n-o_YFAfEeyq-N37BhvBHQ" name="resetscore" specification="_n4U8AFAfEeyq-N37BhvBHQ">
          <ownedParameter xmi:id="_n-o_YVAfEeyq-N37BhvBHQ" name="S">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_n-o_YlAfEeyq-N37BhvBHQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>return 0;&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_n4U8AFAfEeyq-N37BhvBHQ" name="resetscore" method="_n-o_YFAfEeyq-N37BhvBHQ">
          <ownedParameter xmi:id="_n4U8AVAfEeyq-N37BhvBHQ" name="S">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_n4U8AlAfEeyq-N37BhvBHQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_n9pg4FAfEeyq-N37BhvBHQ" name="newgame" method="_n-oYW1AfEeyq-N37BhvBHQ">
          <ownedParameter xmi:id="_n9pg4VAfEeyq-N37BhvBHQ" name="gui" type="_n4RRoFAfEeyq-N37BhvBHQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_n4WKIFAfEeyq-N37BhvBHQ" name="productionGame_replay">
        <ownedAttribute xmi:id="_n-cyIlAfEeyq-N37BhvBHQ" name="gui" visibility="package" type="_n4TG0FAfEeyq-N37BhvBHQ" association="_n_FrVFAfEeyq-N37BhvBHQ"/>
        <ownedAttribute xmi:id="_n-dZMVAfEeyq-N37BhvBHQ" name="score1" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_n-dZMlAfEeyq-N37BhvBHQ" value="10"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_n-eAQFAfEeyq-N37BhvBHQ" name="score2" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_n-eAQVAfEeyq-N37BhvBHQ" value="5"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_n-o_Y1AfEeyq-N37BhvBHQ" name="resetgame" specification="_n9qH8FAfEeyq-N37BhvBHQ">
          <ownedParameter xmi:id="_n-o_ZFAfEeyq-N37BhvBHQ" name="gui" type="_n4TG0FAfEeyq-N37BhvBHQ"/>
          <language>java</language>
          <body>for (int i = 0; i &lt;64; i++)&#xD;
		{&#xD;
			gui.Node[i].setText(&quot;&quot;);&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_n9qH8FAfEeyq-N37BhvBHQ" name="resetgame" method="_n-o_Y1AfEeyq-N37BhvBHQ">
          <ownedParameter xmi:id="_n9qH8VAfEeyq-N37BhvBHQ" name="gui" type="_n4TG0FAfEeyq-N37BhvBHQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_n_DPFFAfEeyq-N37BhvBHQ" name="" memberEnd="_n_DPFVAfEeyq-N37BhvBHQ _n-aV4FAfEeyq-N37BhvBHQ">
        <ownedEnd xmi:id="_n_DPFVAfEeyq-N37BhvBHQ" name="" type="_n4RRoFAfEeyq-N37BhvBHQ" association="_n_DPFFAfEeyq-N37BhvBHQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_n_D2IVAfEeyq-N37BhvBHQ" name="" memberEnd="_n_D2IlAfEeyq-N37BhvBHQ _n-aV4lAfEeyq-N37BhvBHQ">
        <ownedEnd xmi:id="_n_D2IlAfEeyq-N37BhvBHQ" name="" type="_n4RRoFAfEeyq-N37BhvBHQ" association="_n_D2IVAfEeyq-N37BhvBHQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_n_D2JFAfEeyq-N37BhvBHQ" name="" memberEnd="_n_D2JVAfEeyq-N37BhvBHQ _n-a88lAfEeyq-N37BhvBHQ">
        <ownedEnd xmi:id="_n_D2JVAfEeyq-N37BhvBHQ" name="" type="_n4RRoFAfEeyq-N37BhvBHQ" association="_n_D2JFAfEeyq-N37BhvBHQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_n_EdMVAfEeyq-N37BhvBHQ" name="" memberEnd="_n_EdMlAfEeyq-N37BhvBHQ _n-bkAVAfEeyq-N37BhvBHQ">
        <ownedEnd xmi:id="_n_EdMlAfEeyq-N37BhvBHQ" name="" type="_n4TG0FAfEeyq-N37BhvBHQ" association="_n_EdMVAfEeyq-N37BhvBHQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_n_FEQFAfEeyq-N37BhvBHQ" name="" memberEnd="_n_FEQVAfEeyq-N37BhvBHQ _n-bkA1AfEeyq-N37BhvBHQ">
        <ownedEnd xmi:id="_n_FEQVAfEeyq-N37BhvBHQ" name="" type="_n4TG0FAfEeyq-N37BhvBHQ" association="_n_FEQFAfEeyq-N37BhvBHQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_n_FEQ1AfEeyq-N37BhvBHQ" name="" memberEnd="_n_FERFAfEeyq-N37BhvBHQ _n-cLEVAfEeyq-N37BhvBHQ">
        <ownedEnd xmi:id="_n_FERFAfEeyq-N37BhvBHQ" name="" type="_n4TG0FAfEeyq-N37BhvBHQ" association="_n_FEQ1AfEeyq-N37BhvBHQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_n_FrUVAfEeyq-N37BhvBHQ" name="" memberEnd="_n_FrUlAfEeyq-N37BhvBHQ _n-cyIFAfEeyq-N37BhvBHQ">
        <ownedEnd xmi:id="_n_FrUlAfEeyq-N37BhvBHQ" name="" type="_n4UU8FAfEeyq-N37BhvBHQ" association="_n_FrUVAfEeyq-N37BhvBHQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_n_FrVFAfEeyq-N37BhvBHQ" name="" memberEnd="_n_FrVVAfEeyq-N37BhvBHQ _n-cyIlAfEeyq-N37BhvBHQ">
        <ownedEnd xmi:id="_n_FrVVAfEeyq-N37BhvBHQ" name="" type="_n4WKIFAfEeyq-N37BhvBHQ" association="_n_FrVFAfEeyq-N37BhvBHQ"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_n3BUcFAfEeyq-N37BhvBHQ" name="determinewinner">
      <packagedElement xmi:type="uml:Package" xmi:id="_n3DwsFAfEeyq-N37BhvBHQ" name="production_winner">
        <packagedElement xmi:type="uml:Class" xmi:id="_n9r9IFAfEeyq-N37BhvBHQ" name="multi"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_n4bCoFAfEeyq-N37BhvBHQ" name="GUI_winner" visibility="package">
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_n-o_Z1AfEeyq-N37BhvBHQ" name="create" specification="_n4bpsFAfEeyq-N37BhvBHQ">
          <ownedParameter xmi:id="_n-o_aFAfEeyq-N37BhvBHQ" type="_n9GHQVAfEeyq-N37BhvBHQ" direction="return">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_n-o_aVAfEeyq-N37BhvBHQ" value="*"/>
          </ownedParameter>
          <language>java</language>
          <body>JButton[] Node = new JButton[9];&#xD;
		JPanel Grid = new JPanel();&#xD;
&#xD;
		for (int i = 0; i &lt;9; i++)&#xD;
		{&#xD;
			Node[i]= new JButton();&#xD;
			Grid.add(Node[i]);&#xD;
			Node[i].setFocusable(false);&#xD;
			Node[i].setFont(new Font(&quot;Tahoma&quot;, Font.PLAIN, 31));&#xD;
		}&#xD;
		Node[0].setText(&quot;S&quot;);&#xD;
		Node[1].setText(&quot;O&quot;);&#xD;
		Node[2].setText(&quot;S&quot;);&#xD;
		return Node;&#xD;
		&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_n-o_alAfEeyq-N37BhvBHQ" name="create_filled" specification="_n4bptFAfEeyq-N37BhvBHQ">
          <ownedParameter xmi:id="_n-o_a1AfEeyq-N37BhvBHQ" type="_n9GHQVAfEeyq-N37BhvBHQ" direction="return">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_n-o_bFAfEeyq-N37BhvBHQ" value="*"/>
          </ownedParameter>
          <language>java</language>
          <body>JButton[] Node = new JButton[9];&#xD;
		JPanel Grid = new JPanel();&#xD;
&#xD;
		for (int i = 0; i &lt;9; i++)&#xD;
		{&#xD;
			Node[i]= new JButton();&#xD;
			Grid.add(Node[i]);&#xD;
			Node[i].setFocusable(false);&#xD;
			Node[i].setFont(new Font(&quot;Tahoma&quot;, Font.PLAIN, 31));&#xD;
			Node[i].setText(&quot;S&quot;);&#xD;
		}&#xD;
		&#xD;
		return Node;&#xD;
		&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_n4bpsFAfEeyq-N37BhvBHQ" name="create" visibility="package" method="_n-o_Z1AfEeyq-N37BhvBHQ">
          <ownedParameter xmi:id="_n4bpsVAfEeyq-N37BhvBHQ" type="_n9GHQVAfEeyq-N37BhvBHQ" direction="return">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_n4bpslAfEeyq-N37BhvBHQ" value="*"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_n4bptFAfEeyq-N37BhvBHQ" name="create_filled" visibility="package" method="_n-o_alAfEeyq-N37BhvBHQ">
          <ownedParameter xmi:id="_n4cQwFAfEeyq-N37BhvBHQ" type="_n9GHQVAfEeyq-N37BhvBHQ" direction="return">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_n4cQwVAfEeyq-N37BhvBHQ" value="*"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_n4c30FAfEeyq-N37BhvBHQ" name="production_winner" visibility="package">
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_n-pmdFAfEeyq-N37BhvBHQ" name="simplegame" specification="_n4etAFAfEeyq-N37BhvBHQ">
          <ownedParameter xmi:id="_n-pmdVAfEeyq-N37BhvBHQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <language>java</language>
          <body>GUI_winner win = new GUI_winner(); &#xD;
		JButton[] Node = new JButton[9]; //case if player 1 is the winner&#xD;
		Node = win.create();&#xD;
		production_winner test = new production_winner();&#xD;
		determinewinner.production_winner.multi result = test.checkwinner(Node, 2, true); &#xD;
		if (result.sc == 1)&#xD;
		{&#xD;
			return true;&#xD;
		}&#xD;
		return false;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_n-pmdlAfEeyq-N37BhvBHQ" name="simplegame_fullboard" specification="_n4etAlAfEeyq-N37BhvBHQ">
          <ownedParameter xmi:id="_n-pmd1AfEeyq-N37BhvBHQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <language>java</language>
          <body>GUI_winner win = new GUI_winner(); &#xD;
		JButton[] Node2 = new JButton[9]; //case if board is full in simple game&#xD;
		Node2 = win.create_filled();&#xD;
		&#xD;
		production_winner test2 = new production_winner();&#xD;
		determinewinner.production_winner.multi result2 = test2.checkwinner(Node2, 2, true); &#xD;
		int c = 0;&#xD;
		for (int i =0; i &lt; 9; i ++)&#xD;
		{&#xD;
			if (Node2[i].getText() != &quot;&quot;)&#xD;
			{&#xD;
				c++;&#xD;
			}&#xD;
		}&#xD;
		if (result2.sc == 0 &amp;&amp; c == 9)&#xD;
		{&#xD;
			return true;&#xD;
		}&#xD;
		else &#xD;
		{&#xD;
			return false;&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_n-pmeFAfEeyq-N37BhvBHQ" name="generalgame" specification="_n4etBFAfEeyq-N37BhvBHQ">
          <ownedParameter xmi:id="_n-pmeVAfEeyq-N37BhvBHQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <language>java</language>
          <body>GUI_winner win = new GUI_winner(); &#xD;
		JButton[] Node = new JButton[9]; //case if board is full in simple game&#xD;
		Node = win.create();&#xD;
		&#xD;
		production_winner test = new production_winner();&#xD;
		determinewinner.production_winner.multi result = test.checkwinner(Node, 2, true); &#xD;
		int c = 0;&#xD;
		for (int i =0; i &lt; 9; i ++)&#xD;
		{&#xD;
			if (Node[i].getText() != &quot;&quot;)&#xD;
			{&#xD;
				c++;&#xD;
			}&#xD;
		}&#xD;
		if (c != 9 &amp;&amp; result.sc != 0)&#xD;
		{&#xD;
			return false;&#xD;
		}&#xD;
		else if (c!= 9 &amp;&amp; result.sc == 0)&#xD;
		{&#xD;
			return false;&#xD;
		}&#xD;
		else&#xD;
		{&#xD;
			return true;&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_n-pmelAfEeyq-N37BhvBHQ" name="checkwinner" specification="_n-AtQFAfEeyq-N37BhvBHQ">
          <ownedParameter xmi:id="_n-pme1AfEeyq-N37BhvBHQ" name="Node" type="_n9GHQVAfEeyq-N37BhvBHQ">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_n-pmfFAfEeyq-N37BhvBHQ" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_n-pmfVAfEeyq-N37BhvBHQ" name="assign">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_n-pmflAfEeyq-N37BhvBHQ" name="player">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <ownedParameter xmi:id="_n-pmf1AfEeyq-N37BhvBHQ" direction="return"/>
          <language>java</language>
          <body>int count =0;&#xD;
		int search_row = 0;&#xD;
		int search_column = 0;&#xD;
		int limit = (3 * 3);&#xD;
		int total_row = 3;&#xD;
		int[] each_row = new int[3]; &#xD;
		int[] each_column = new int[3]; &#xD;
		&#xD;
		&#xD;
		for (int i =0; i &lt; 3; i++)&#xD;
		{&#xD;
			each_row[i]=i;&#xD;
		}&#xD;
		for (int i =0; i &lt; 3; i++)&#xD;
		{&#xD;
			if (i == 0)&#xD;
			{&#xD;
				each_column[i]=i;&#xD;
			}&#xD;
			else&#xD;
			{&#xD;
				each_column[i] = each_column[i-1]+ 3;&#xD;
			}&#xD;
			&#xD;
		}&#xD;
		outer : for (int i =0; i &lt; total_row; i++)&#xD;
		{&#xD;
			for (int b : each_column)&#xD;
			{&#xD;
				if (assign != b)&#xD;
				{&#xD;
					search_column += 1;&#xD;
					if (search_column == 3)&#xD;
					{&#xD;
						for (int c = 0; c &lt; each_column.length; c++)&#xD;
						{&#xD;
							each_column[c] += 1;&#xD;
						}&#xD;
						search_column = 0;&#xD;
					}&#xD;
				}&#xD;
				else&#xD;
				{&#xD;
					break outer;&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		&#xD;
		outer : for (int i =0; i &lt; total_row; i++)&#xD;
		{&#xD;
			for (int b : each_row)&#xD;
			{&#xD;
				if (assign != b)&#xD;
				{&#xD;
					search_row += 1;&#xD;
					if (search_row == 3)&#xD;
					{&#xD;
						for (int c = 0; c &lt; each_row.length; c++)&#xD;
						{&#xD;
							each_row[c] += 3;&#xD;
						}&#xD;
						search_row = 0;&#xD;
					}&#xD;
				}&#xD;
				else&#xD;
				{&#xD;
					break outer;&#xD;
				}&#xD;
			}&#xD;
				&#xD;
		}&#xD;
		if ( (!(assign-3&lt;0)) &amp;&amp;  ((assign+3&lt;limit)) )&#xD;
		{&#xD;
			if (Node[assign].getText() == &quot;O&quot; &amp;&amp; Node[assign-3].getText() == &quot;S&quot; &amp;&amp; Node[assign+3].getText() == &quot;S&quot; )&#xD;
			{&#xD;
				Node[assign-3].setForeground(Node[assign].getForeground());&#xD;
				Node[assign+3].setForeground(Node[assign].getForeground());&#xD;
				count++;&#xD;
			}&#xD;
		}&#xD;
		&#xD;
		if ( (!(assign-3-1&lt;0)) &amp;&amp;  ((assign+3+1&lt;limit)) &amp;&amp; (assign != each_row[0]) &amp;&amp; (assign != each_row[3-1]))&#xD;
		{&#xD;
			if (Node[assign].getText() == &quot;O&quot; &amp;&amp; Node[assign-3-1].getText() == &quot;S&quot; &amp;&amp; Node[assign+3+1].getText() == &quot;S&quot; )&#xD;
			{&#xD;
				Node[assign-3-1].setForeground(Node[assign].getForeground());&#xD;
				Node[assign+3+1].setForeground(Node[assign].getForeground());&#xD;
				count++;&#xD;
			}&#xD;
		}	&#xD;
		if ( (!(assign-3+1&lt;0)) &amp;&amp;  ((assign+3-1&lt;limit)) &amp;&amp; (assign != each_row[0]) &amp;&amp; (assign != each_row[3-1]))&#xD;
		{&#xD;
			if (Node[assign].getText() == &quot;O&quot; &amp;&amp; Node[assign-3+1].getText() == &quot;S&quot; &amp;&amp; Node[assign+3-1].getText() == &quot;S&quot; )&#xD;
			{&#xD;
				Node[assign-3+1].setForeground(Node[assign].getForeground());&#xD;
				Node[assign+3-1].setForeground(Node[assign].getForeground());&#xD;
				count++;&#xD;
			}&#xD;
		}&#xD;
		if ( (!(assign-1&lt;0)) &amp;&amp;  ((assign+1&lt;limit)) &amp;&amp; (!(assign-1&lt;each_row[0])) &amp;&amp; (!(assign +1>each_row[3-1])))&#xD;
		{&#xD;
			if (Node[assign].getText() == &quot;O&quot; &amp;&amp; Node[assign-1].getText() == &quot;S&quot; &amp;&amp; Node[assign+1].getText() == &quot;S&quot; )&#xD;
			{&#xD;
				Node[assign-1].setForeground(Node[assign].getForeground());&#xD;
				Node[assign+1].setForeground(Node[assign].getForeground());&#xD;
				count++;&#xD;
			}&#xD;
		}&#xD;
		if ( ((!(assign-3&lt;0)) &amp;&amp; (!(assign-(3*2)&lt;0))))&#xD;
		{&#xD;
			if (Node[assign].getText() == &quot;S&quot; &amp;&amp; Node[assign-3].getText() == &quot;O&quot; &amp;&amp; Node[assign-(3*2)].getText() == &quot;S&quot; )&#xD;
			{&#xD;
				Node[assign-3].setForeground(Node[assign].getForeground());&#xD;
				Node[assign-(3*2)].setForeground(Node[assign].getForeground());&#xD;
				count++;&#xD;
			}&#xD;
			&#xD;
		}&#xD;
		if ( (((assign+3&lt;limit))  &amp;&amp;  ((assign+(3*2)&lt;limit))))&#xD;
		{&#xD;
			&#xD;
			if (Node[assign].getText() == &quot;S&quot; &amp;&amp; Node[assign+3].getText() == &quot;O&quot; &amp;&amp; Node[assign+(3*2)].getText() == &quot;S&quot; )&#xD;
			{&#xD;
				Node[assign+3].setForeground(Node[assign].getForeground());&#xD;
				Node[assign+(3*2)].setForeground(Node[assign].getForeground());&#xD;
				count++;&#xD;
			}&#xD;
		}&#xD;
		if ( ((!(assign-1&lt;0)) &amp;&amp; (!(assign-2&lt;0))) &amp;&amp; (!(assign-1&lt;each_row[0])) &amp;&amp; (!(assign -2 &lt; each_row[0])))&#xD;
		{&#xD;
			if (Node[assign].getText() == &quot;S&quot; &amp;&amp; Node[assign-1].getText() == &quot;O&quot; &amp;&amp; Node[assign-2].getText() == &quot;S&quot; )&#xD;
			{&#xD;
				Node[assign-1].setForeground(Node[assign].getForeground());&#xD;
				Node[assign-2].setForeground(Node[assign].getForeground());&#xD;
				count++;&#xD;
			}&#xD;
		}&#xD;
		if (   (assign+1&lt;limit) &amp;&amp;  (assign+2&lt;limit) &amp;&amp; (!(assign+1>each_row[3-1])) &amp;&amp; (!(assign+2 > each_row[3-1])))&#xD;
		{&#xD;
			&#xD;
			if (Node[assign].getText() == &quot;S&quot; &amp;&amp; Node[assign+1].getText() == &quot;O&quot; &amp;&amp; Node[assign+2].getText() == &quot;S&quot; )&#xD;
			{&#xD;
				Node[assign+1].setForeground(Node[assign].getForeground());&#xD;
				Node[assign+2].setForeground(Node[assign].getForeground());&#xD;
				count++;&#xD;
			}&#xD;
		}&#xD;
 		if (   ((assign+3+1&lt;limit))&amp;&amp; ((assign+((3+1)*2)&lt;limit)) &amp;&amp; (assign!=each_row[3-1])  )&#xD;
		{&#xD;
			if (Node[assign].getText() == &quot;S&quot; &amp;&amp; Node[assign+3+1].getText() == &quot;O&quot; &amp;&amp; Node[assign+((3+1)*2)].getText() == &quot;S&quot; )&#xD;
			{&#xD;
				Node[assign+3+1].setForeground(Node[assign].getForeground());&#xD;
				Node[assign+((3+1)*2)].setForeground(Node[assign].getForeground());&#xD;
				count++;&#xD;
			}&#xD;
		}&#xD;
		if (  (!(assign-3-1&lt;0)) &amp;&amp; (!(assign+((-3-1)*2)&lt;0)) &amp;&amp; (assign!=each_row[0]))&#xD;
		{&#xD;
			if (Node[assign].getText() == &quot;S&quot; &amp;&amp; Node[assign-3-1].getText() == &quot;O&quot; &amp;&amp; Node[assign+((-3-1)*2)].getText() == &quot;S&quot; )&#xD;
			{&#xD;
				Node[assign-3-1].setForeground(Node[assign].getForeground());&#xD;
				Node[assign+((-3-1)*2)].setForeground(Node[assign].getForeground());&#xD;
				count++;&#xD;
			}&#xD;
		}&#xD;
		if (  (!(assign+3-1>limit)) &amp;&amp; (!(assign+((3-1)*2)>limit)) &amp;&amp; (assign!=each_row[0])&amp;&amp; (assign!=each_row[1]))&#xD;
		{&#xD;
			if (Node[assign].getText() == &quot;S&quot; &amp;&amp; Node[assign+3-1].getText() == &quot;O&quot; &amp;&amp; Node[assign+((3-1)*2)].getText() == &quot;S&quot; )&#xD;
			{&#xD;
				Node[assign+3-1].setForeground(Node[assign].getForeground());&#xD;
				Node[assign+((3-1)*2)].setForeground(Node[assign].getForeground());&#xD;
				count++;&#xD;
			}&#xD;
		}&#xD;
		if (  (!(assign-3+1&lt;0)) &amp;&amp; (!(assign+((-3+1)*2)&lt;0))&amp;&amp; (assign!=each_row[3-1] &amp;&amp; (assign!=each_row[3-2] )))&#xD;
		{&#xD;
			if (Node[assign].getText() == &quot;S&quot; &amp;&amp; Node[assign-3+1].getText() == &quot;O&quot; &amp;&amp; Node[assign+((-3+1)*2)].getText() == &quot;S&quot; )&#xD;
			{&#xD;
				Node[assign-3+1].setForeground(Node[assign].getForeground());&#xD;
				Node[assign+((-3+1)*2)].setForeground(Node[assign].getForeground());&#xD;
				count++;&#xD;
			}&#xD;
			&#xD;
		}&#xD;
		if (   ((assign+3+1&lt;limit))&amp;&amp; ((assign+((3+1)*2)&lt;limit)) &amp;&amp; (assign!=each_row[3-1]) )&#xD;
		{&#xD;
			&#xD;
			if (Node[assign].getText() == &quot;S&quot; &amp;&amp; Node[assign+3+1].getText() == &quot;O&quot; &amp;&amp; Node[assign+((3+1)*2)].getText() == &quot;S&quot; )&#xD;
			{&#xD;
				Node[assign+3+1].setForeground(Node[assign].getForeground());&#xD;
				Node[assign+((3+1)*2)].setForeground(Node[assign].getForeground());&#xD;
				count++;&#xD;
			}&#xD;
		}&#xD;
		int c = 0;&#xD;
		for (int i =0; i &lt; limit; i++)&#xD;
		{&#xD;
			if (Node[i].getText() != &quot;&quot;)&#xD;
			{&#xD;
				c+=1;&#xD;
			}&#xD;
		}&#xD;
		&#xD;
		if (count != 0 &amp;&amp; player == true)&#xD;
		{&#xD;
			&#xD;
			return new multi(count, &quot;player 1&quot;);&#xD;
		}&#xD;
		else if (count != 0 &amp;&amp; player == false)&#xD;
		{&#xD;
			&#xD;
			return new multi(count, &quot;player 2&quot;);&#xD;
		}&#xD;
		else if (c==3* 3 &amp;&amp; count == 0) &#xD;
		{&#xD;
			return new multi(count, &quot;tie&quot;);&#xD;
		}&#xD;
		else&#xD;
		{&#xD;
			return new multi(count, &quot;nothing&quot;);&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_n4etAFAfEeyq-N37BhvBHQ" name="simplegame" method="_n-pmdFAfEeyq-N37BhvBHQ">
          <ownedParameter xmi:id="_n4etAVAfEeyq-N37BhvBHQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_n4etAlAfEeyq-N37BhvBHQ" name="simplegame_fullboard" method="_n-pmdlAfEeyq-N37BhvBHQ">
          <ownedParameter xmi:id="_n4etA1AfEeyq-N37BhvBHQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_n4etBFAfEeyq-N37BhvBHQ" name="generalgame" method="_n-pmeFAfEeyq-N37BhvBHQ">
          <ownedParameter xmi:id="_n4fUEFAfEeyq-N37BhvBHQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_n-AtQFAfEeyq-N37BhvBHQ" name="checkwinner" method="_n-pmelAfEeyq-N37BhvBHQ">
          <ownedParameter xmi:id="_n-BUUFAfEeyq-N37BhvBHQ" name="Node" type="_n9GHQVAfEeyq-N37BhvBHQ">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_n-BUVFAfEeyq-N37BhvBHQ" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_n-BUUVAfEeyq-N37BhvBHQ" name="assign">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_n-BUUlAfEeyq-N37BhvBHQ" name="player">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <ownedParameter xmi:id="_n-BUU1AfEeyq-N37BhvBHQ" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_n4f7IFAfEeyq-N37BhvBHQ" name="test_winner" visibility="package">
        <ownedAttribute xmi:id="_n-f1c1AfEeyq-N37BhvBHQ" name="win" visibility="package" type="_n4bCoFAfEeyq-N37BhvBHQ" association="_n_G5cVAfEeyq-N37BhvBHQ">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_n-f1dFAfEeyq-N37BhvBHQ" value="new GUI_winner()"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_n-pmgFAfEeyq-N37BhvBHQ" name="test" specification="_n4giMFAfEeyq-N37BhvBHQ">
          <language>java</language>
          <body>production_winner test = new production_winner(); // case in simple game, when 1 player created SOS first, game ends&#xD;
		assertEquals(test.simplegame(), true);			 //  (player 1 makes SOS, then game ends)&#xD;
		&#xD;
		production_winner test2 = new production_winner(); // case in simple game, when the board is filled up in all nodes, game ends&#xD;
		assertEquals(test2.simplegame_fullboard(), true); //  (Nodes are filled, no one got any point, I initially assigned &quot;S&quot; for all nodes)&#xD;
&#xD;
		production_winner test3 = new production_winner(); //case in general game, when a player got 1 point but the game still continues&#xD;
		assertEquals(test3.generalgame(), false);          //(player 1 create 1 SOS but because all nodes are not filled, so the game continues)&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_n4giMFAfEeyq-N37BhvBHQ" name="test" visibility="package" method="_n-pmgFAfEeyq-N37BhvBHQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_n_G5cVAfEeyq-N37BhvBHQ" name="" memberEnd="_n_G5clAfEeyq-N37BhvBHQ _n-f1c1AfEeyq-N37BhvBHQ">
        <ownedEnd xmi:id="_n_G5clAfEeyq-N37BhvBHQ" name="" type="_n4f7IFAfEeyq-N37BhvBHQ" association="_n_G5cVAfEeyq-N37BhvBHQ"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_TjR5AFAgEeyq-N37BhvBHQ" name="NewClass1"/>
    <profileApplication xmi:id="_nwXS0FAfEeyq-N37BhvBHQ">
      <eAnnotations xmi:id="_nwXS0VAfEeyq-N37BhvBHQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile"/>
    </profileApplication>
    <profileApplication xmi:id="_lmDsgFAhEeyq-N37BhvBHQ">
      <eAnnotations xmi:id="_lmDsgVAhEeyq-N37BhvBHQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://ARCHITECTUREREVIEW_PROFILES/ArchitectureReview.profile.uml#_ypx9siN3EeK_4-5pMoCxQg"/>
      </eAnnotations>
      <appliedProfile href="pathmap://ARCHITECTUREREVIEW_PROFILES/ArchitectureReview.profile.uml#_qTOicCN3EeK_4-5pMoCxQg"/>
    </profileApplication>
  </uml:Model>
  <UMLLabProfile:TargetLanguage xmi:id="_nwXS0lAfEeyq-N37BhvBHQ" base_Package="_nqmCAFAfEeyq-N37BhvBHQ">
    <languageName>java</languageName>
  </UMLLabProfile:TargetLanguage>
  <UMLLabProfile:Array xmi:id="_n3ZH41AfEeyq-N37BhvBHQ" base_Element="_n3ZH4FAfEeyq-N37BhvBHQ"/>
  <UMLLabProfile:Array xmi:id="_n3Zu81AfEeyq-N37BhvBHQ" base_Element="_n3Zu8FAfEeyq-N37BhvBHQ"/>
  <UMLLabProfile:Array xmi:id="_n3f1kVAfEeyq-N37BhvBHQ" base_Element="_n3fOgFAfEeyq-N37BhvBHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n3kHAVAfEeyq-N37BhvBHQ" base_Element="_n3kHAFAfEeyq-N37BhvBHQ"/>
  <UMLLabProfile:Annotations xmi:id="_n3kuEFAfEeyq-N37BhvBHQ" base_Element="_n3kHAFAfEeyq-N37BhvBHQ">
    <annotations xmi:id="_n3kuEVAfEeyq-N37BhvBHQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n3nKUVAfEeyq-N37BhvBHQ" base_Element="_n3nKUFAfEeyq-N37BhvBHQ"/>
  <UMLLabProfile:Annotations xmi:id="_n3nKUlAfEeyq-N37BhvBHQ" base_Element="_n3nKUFAfEeyq-N37BhvBHQ">
    <annotations xmi:id="_n3nKU1AfEeyq-N37BhvBHQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n3o_gFAfEeyq-N37BhvBHQ" base_Element="_n3oYclAfEeyq-N37BhvBHQ"/>
  <UMLLabProfile:Annotations xmi:id="_n3o_gVAfEeyq-N37BhvBHQ" base_Element="_n3oYclAfEeyq-N37BhvBHQ">
    <annotations xmi:id="_n3o_glAfEeyq-N37BhvBHQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Array xmi:id="_n3pmklAfEeyq-N37BhvBHQ" base_Element="_n3o_g1AfEeyq-N37BhvBHQ"/>
  <UMLLabProfile:Array xmi:id="_n3q0s1AfEeyq-N37BhvBHQ" base_Element="_n3q0sFAfEeyq-N37BhvBHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n3ufEFAfEeyq-N37BhvBHQ" base_Element="_n3t4AVAfEeyq-N37BhvBHQ"/>
  <UMLLabProfile:Annotations xmi:id="_n3ufEVAfEeyq-N37BhvBHQ" base_Element="_n3t4AVAfEeyq-N37BhvBHQ">
    <annotations xmi:id="_n3ufElAfEeyq-N37BhvBHQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Array xmi:id="_n3vtMFAfEeyq-N37BhvBHQ" base_Element="_n3vGIVAfEeyq-N37BhvBHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n3wUQVAfEeyq-N37BhvBHQ" base_Element="_n3wUQFAfEeyq-N37BhvBHQ"/>
  <UMLLabProfile:Annotations xmi:id="_n3w7UFAfEeyq-N37BhvBHQ" base_Element="_n3wUQFAfEeyq-N37BhvBHQ">
    <annotations xmi:id="_n3w7UVAfEeyq-N37BhvBHQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n3_k0FAfEeyq-N37BhvBHQ" base_Element="_n3-9wFAfEeyq-N37BhvBHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n4AL5FAfEeyq-N37BhvBHQ" base_Element="_n3_k0VAfEeyq-N37BhvBHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n4PccFAfEeyq-N37BhvBHQ" base_Element="_n4O1YFAfEeyq-N37BhvBHQ"/>
  <UMLLabProfile:StyledElement xmi:id="_n4QDgVAfEeyq-N37BhvBHQ" base_Element="_n4QDgFAfEeyq-N37BhvBHQ"/>
  <UMLLabProfile:Annotations xmi:id="_n4QqkFAfEeyq-N37BhvBHQ" base_Element="_n4O1YFAfEeyq-N37BhvBHQ">
    <annotations xmi:id="_n4QqkVAfEeyq-N37BhvBHQ" name="SuppressWarnings">
      <annotationParameters xmi:id="_n4QqklAfEeyq-N37BhvBHQ" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_n-rbolAfEeyq-N37BhvBHQ" value="&quot;serial&quot;"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Array xmi:id="_n4bps1AfEeyq-N37BhvBHQ" base_Element="_n4bpsFAfEeyq-N37BhvBHQ"/>
  <UMLLabProfile:Array xmi:id="_n4cQwlAfEeyq-N37BhvBHQ" base_Element="_n4bptFAfEeyq-N37BhvBHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n4giMVAfEeyq-N37BhvBHQ" base_Element="_n4giMFAfEeyq-N37BhvBHQ"/>
  <UMLLabProfile:Annotations xmi:id="_n4giMlAfEeyq-N37BhvBHQ" base_Element="_n4giMFAfEeyq-N37BhvBHQ">
    <annotations xmi:id="_n4giM1AfEeyq-N37BhvBHQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_n9GHQFAfEeyq-N37BhvBHQ" base_Element="_n9FgMFAfEeyq-N37BhvBHQ"/>
  <UMLLabProfile:Reference xmi:id="_n9GuUFAfEeyq-N37BhvBHQ" base_Element="_n9GHQVAfEeyq-N37BhvBHQ"/>
  <UMLLabProfile:Reference xmi:id="_n9GuUlAfEeyq-N37BhvBHQ" base_Element="_n9GuUVAfEeyq-N37BhvBHQ"/>
  <UMLLabProfile:Reference xmi:id="_n9HVYVAfEeyq-N37BhvBHQ" base_Element="_n9HVYFAfEeyq-N37BhvBHQ"/>
  <UMLLabProfile:Reference xmi:id="_n9H8cFAfEeyq-N37BhvBHQ" base_Element="_n9HVYlAfEeyq-N37BhvBHQ"/>
  <UMLLabProfile:Reference xmi:id="_n9IjgFAfEeyq-N37BhvBHQ" base_Element="_n9H8cVAfEeyq-N37BhvBHQ"/>
  <UMLLabProfile:Reference xmi:id="_n9JKkFAfEeyq-N37BhvBHQ" base_Element="_n9IjgVAfEeyq-N37BhvBHQ"/>
  <UMLLabProfile:Reference xmi:id="_n9JKklAfEeyq-N37BhvBHQ" base_Element="_n9JKkVAfEeyq-N37BhvBHQ"/>
  <UMLLabProfile:Reference xmi:id="_n9K_wFAfEeyq-N37BhvBHQ" base_Element="_n9KYsFAfEeyq-N37BhvBHQ"/>
  <UMLLabProfile:Reference xmi:id="_n9MN4VAfEeyq-N37BhvBHQ" base_Element="_n9MN4FAfEeyq-N37BhvBHQ"/>
  <UMLLabProfile:Reference xmi:id="_n9M08VAfEeyq-N37BhvBHQ" base_Element="_n9M08FAfEeyq-N37BhvBHQ"/>
  <UMLLabProfile:Reference xmi:id="_n9NcAFAfEeyq-N37BhvBHQ" base_Element="_n9M08lAfEeyq-N37BhvBHQ"/>
  <UMLLabProfile:Reference xmi:id="_n9NcAlAfEeyq-N37BhvBHQ" base_Element="_n9NcAVAfEeyq-N37BhvBHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n9PRMVAfEeyq-N37BhvBHQ" base_Element="_n9OqIFAfEeyq-N37BhvBHQ"/>
  <UMLLabProfile:Annotations xmi:id="_n9PRMlAfEeyq-N37BhvBHQ" base_Element="_n9OqIFAfEeyq-N37BhvBHQ">
    <annotations xmi:id="_n9PRM1AfEeyq-N37BhvBHQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_n9QfUFAfEeyq-N37BhvBHQ" base_Element="_n9P4Q1AfEeyq-N37BhvBHQ"/>
  <UMLLabProfile:Reference xmi:id="_n9RGYFAfEeyq-N37BhvBHQ" base_Element="_n9QfUVAfEeyq-N37BhvBHQ"/>
  <UMLLabProfile:Reference xmi:id="_n9RGYlAfEeyq-N37BhvBHQ" base_Element="_n9RGYVAfEeyq-N37BhvBHQ"/>
  <UMLLabProfile:Reference xmi:id="_n9TioFAfEeyq-N37BhvBHQ" base_Element="_n9S7kFAfEeyq-N37BhvBHQ"/>
  <UMLLabProfile:Reference xmi:id="_n9VX0FAfEeyq-N37BhvBHQ" base_Element="_n9UwwFAfEeyq-N37BhvBHQ"/>
  <UMLLabProfile:Reference xmi:id="_n9V-4FAfEeyq-N37BhvBHQ" base_Element="_n9VX0VAfEeyq-N37BhvBHQ"/>
  <UMLLabProfile:Reference xmi:id="_n9V-4lAfEeyq-N37BhvBHQ" base_Element="_n9V-4VAfEeyq-N37BhvBHQ"/>
  <UMLLabProfile:Reference xmi:id="_n9Wl8FAfEeyq-N37BhvBHQ" base_Element="_n9V-41AfEeyq-N37BhvBHQ"/>
  <UMLLabProfile:Reference xmi:id="_n9XNAFAfEeyq-N37BhvBHQ" base_Element="_n9Wl8VAfEeyq-N37BhvBHQ"/>
  <UMLLabProfile:Reference xmi:id="_n9d6sVAfEeyq-N37BhvBHQ" base_Element="_n9d6sFAfEeyq-N37BhvBHQ"/>
  <UMLLabProfile:Reference xmi:id="_n9ehwFAfEeyq-N37BhvBHQ" base_Element="_n9d6slAfEeyq-N37BhvBHQ"/>
  <UMLLabProfile:Reference xmi:id="_n9ehwlAfEeyq-N37BhvBHQ" base_Element="_n9ehwVAfEeyq-N37BhvBHQ"/>
  <UMLLabProfile:Reference xmi:id="_n9fI0VAfEeyq-N37BhvBHQ" base_Element="_n9fI0FAfEeyq-N37BhvBHQ"/>
  <UMLLabProfile:Reference xmi:id="_n9fv4FAfEeyq-N37BhvBHQ" base_Element="_n9fI0lAfEeyq-N37BhvBHQ"/>
  <UMLLabProfile:Reference xmi:id="_n9gW8FAfEeyq-N37BhvBHQ" base_Element="_n9fv4VAfEeyq-N37BhvBHQ"/>
  <UMLLabProfile:StyledElement xmi:id="_n9nrslAfEeyq-N37BhvBHQ" base_Element="_n9nEpVAfEeyq-N37BhvBHQ"/>
  <UMLLabProfile:Reference xmi:id="_n9r9IVAfEeyq-N37BhvBHQ" base_Element="_n9r9IFAfEeyq-N37BhvBHQ"/>
  <UMLLabProfile:Array xmi:id="_n9z49VAfEeyq-N37BhvBHQ" base_Element="_n9zR5lAfEeyq-N37BhvBHQ"/>
  <UMLLabProfile:Array xmi:id="_n92VNlAfEeyq-N37BhvBHQ" base_Element="_n91uIFAfEeyq-N37BhvBHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n95_klAfEeyq-N37BhvBHQ" base_Element="_n95_kFAfEeyq-N37BhvBHQ"/>
  <UMLLabProfile:Annotations xmi:id="_n96moFAfEeyq-N37BhvBHQ" base_Element="_n95_kFAfEeyq-N37BhvBHQ">
    <annotations xmi:id="_n96moVAfEeyq-N37BhvBHQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n9-RAlAfEeyq-N37BhvBHQ" base_Element="_n9-RAFAfEeyq-N37BhvBHQ"/>
  <UMLLabProfile:Annotations xmi:id="_n9-RA1AfEeyq-N37BhvBHQ" base_Element="_n9-RAFAfEeyq-N37BhvBHQ">
    <annotations xmi:id="_n9-RBFAfEeyq-N37BhvBHQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n-EXolAfEeyq-N37BhvBHQ" base_Element="_n-EXoFAfEeyq-N37BhvBHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n-E-slAfEeyq-N37BhvBHQ" base_Element="_n-E-sFAfEeyq-N37BhvBHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n-Flw1AfEeyq-N37BhvBHQ" base_Element="_n-FlwVAfEeyq-N37BhvBHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n-GM0lAfEeyq-N37BhvBHQ" base_Element="_n-GM0FAfEeyq-N37BhvBHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n-Ha8FAfEeyq-N37BhvBHQ" base_Element="_n-Gz4lAfEeyq-N37BhvBHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n-Ha81AfEeyq-N37BhvBHQ" base_Element="_n-Ha8VAfEeyq-N37BhvBHQ"/>
  <UMLLabProfile:Array xmi:id="_n-ICAFAfEeyq-N37BhvBHQ" base_Element="_n-Ha9FAfEeyq-N37BhvBHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n-ICAVAfEeyq-N37BhvBHQ" base_Element="_n-Ha9FAfEeyq-N37BhvBHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n-ICBFAfEeyq-N37BhvBHQ" base_Element="_n-ICAlAfEeyq-N37BhvBHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n-IpElAfEeyq-N37BhvBHQ" base_Element="_n-IpEFAfEeyq-N37BhvBHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n-JQIFAfEeyq-N37BhvBHQ" base_Element="_n-IpE1AfEeyq-N37BhvBHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n-JQI1AfEeyq-N37BhvBHQ" base_Element="_n-JQIVAfEeyq-N37BhvBHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n-JQJlAfEeyq-N37BhvBHQ" base_Element="_n-JQJFAfEeyq-N37BhvBHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n-J3MlAfEeyq-N37BhvBHQ" base_Element="_n-J3MFAfEeyq-N37BhvBHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n-J3NVAfEeyq-N37BhvBHQ" base_Element="_n-J3M1AfEeyq-N37BhvBHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n-KeQlAfEeyq-N37BhvBHQ" base_Element="_n-KeQFAfEeyq-N37BhvBHQ"/>
  <UMLLabProfile:Array xmi:id="_n-KeRVAfEeyq-N37BhvBHQ" base_Element="_n-KeQ1AfEeyq-N37BhvBHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n-LFUFAfEeyq-N37BhvBHQ" base_Element="_n-KeQ1AfEeyq-N37BhvBHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n-LFU1AfEeyq-N37BhvBHQ" base_Element="_n-LFUVAfEeyq-N37BhvBHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n-LsYFAfEeyq-N37BhvBHQ" base_Element="_n-LFVFAfEeyq-N37BhvBHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n-LsYlAfEeyq-N37BhvBHQ" base_Element="_n-LsYVAfEeyq-N37BhvBHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n-LsZFAfEeyq-N37BhvBHQ" base_Element="_n-LsY1AfEeyq-N37BhvBHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n-MTclAfEeyq-N37BhvBHQ" base_Element="_n-MTcFAfEeyq-N37BhvBHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n-MTdVAfEeyq-N37BhvBHQ" base_Element="_n-MTc1AfEeyq-N37BhvBHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n-M6gVAfEeyq-N37BhvBHQ" base_Element="_n-M6gFAfEeyq-N37BhvBHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n-NhkFAfEeyq-N37BhvBHQ" base_Element="_n-M6glAfEeyq-N37BhvBHQ"/>
  <UMLLabProfile:Array xmi:id="_n-Nhk1AfEeyq-N37BhvBHQ" dimensions="0" base_Element="_n-NhkVAfEeyq-N37BhvBHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n-NhlVAfEeyq-N37BhvBHQ" base_Element="_n-NhkVAfEeyq-N37BhvBHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n-OIolAfEeyq-N37BhvBHQ" base_Element="_n-OIoFAfEeyq-N37BhvBHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n-OIpVAfEeyq-N37BhvBHQ" base_Element="_n-OIo1AfEeyq-N37BhvBHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n-OvslAfEeyq-N37BhvBHQ" base_Element="_n-OvsFAfEeyq-N37BhvBHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n-OvtVAfEeyq-N37BhvBHQ" base_Element="_n-Ovs1AfEeyq-N37BhvBHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n-PWwlAfEeyq-N37BhvBHQ" base_Element="_n-PWwFAfEeyq-N37BhvBHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n-PWxVAfEeyq-N37BhvBHQ" base_Element="_n-PWw1AfEeyq-N37BhvBHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n-P90VAfEeyq-N37BhvBHQ" base_Element="_n-PWxlAfEeyq-N37BhvBHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n-P91FAfEeyq-N37BhvBHQ" base_Element="_n-P90lAfEeyq-N37BhvBHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n-Qk4VAfEeyq-N37BhvBHQ" base_Element="_n-P91VAfEeyq-N37BhvBHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n-Qk5FAfEeyq-N37BhvBHQ" base_Element="_n-Qk4lAfEeyq-N37BhvBHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n-RL8FAfEeyq-N37BhvBHQ" base_Element="_n-Qk5VAfEeyq-N37BhvBHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n-RL81AfEeyq-N37BhvBHQ" base_Element="_n-RL8VAfEeyq-N37BhvBHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n-RzAFAfEeyq-N37BhvBHQ" base_Element="_n-RL9FAfEeyq-N37BhvBHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n-RzA1AfEeyq-N37BhvBHQ" base_Element="_n-RzAVAfEeyq-N37BhvBHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n-SaEFAfEeyq-N37BhvBHQ" base_Element="_n-RzBFAfEeyq-N37BhvBHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n-SaE1AfEeyq-N37BhvBHQ" base_Element="_n-SaEVAfEeyq-N37BhvBHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n-TBIFAfEeyq-N37BhvBHQ" base_Element="_n-SaFFAfEeyq-N37BhvBHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n-TBI1AfEeyq-N37BhvBHQ" base_Element="_n-TBIVAfEeyq-N37BhvBHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n-ToMFAfEeyq-N37BhvBHQ" base_Element="_n-TBJFAfEeyq-N37BhvBHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n-ToM1AfEeyq-N37BhvBHQ" base_Element="_n-ToMVAfEeyq-N37BhvBHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n-UPQFAfEeyq-N37BhvBHQ" base_Element="_n-ToNFAfEeyq-N37BhvBHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n-UPQ1AfEeyq-N37BhvBHQ" base_Element="_n-UPQVAfEeyq-N37BhvBHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n-U2UFAfEeyq-N37BhvBHQ" base_Element="_n-UPRFAfEeyq-N37BhvBHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n-U2U1AfEeyq-N37BhvBHQ" base_Element="_n-U2UVAfEeyq-N37BhvBHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n-VdYFAfEeyq-N37BhvBHQ" base_Element="_n-U2VFAfEeyq-N37BhvBHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n-VdY1AfEeyq-N37BhvBHQ" base_Element="_n-VdYVAfEeyq-N37BhvBHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n-VdZlAfEeyq-N37BhvBHQ" base_Element="_n-VdZFAfEeyq-N37BhvBHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n-WEclAfEeyq-N37BhvBHQ" base_Element="_n-WEcFAfEeyq-N37BhvBHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n-WrgVAfEeyq-N37BhvBHQ" base_Element="_n-WrgFAfEeyq-N37BhvBHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n-Wrg1AfEeyq-N37BhvBHQ" base_Element="_n-WrglAfEeyq-N37BhvBHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n-XSkVAfEeyq-N37BhvBHQ" base_Element="_n-XSkFAfEeyq-N37BhvBHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n-XSk1AfEeyq-N37BhvBHQ" base_Element="_n-XSklAfEeyq-N37BhvBHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n-X5oFAfEeyq-N37BhvBHQ" base_Element="_n-XSlFAfEeyq-N37BhvBHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n-X5o1AfEeyq-N37BhvBHQ" base_Element="_n-X5oVAfEeyq-N37BhvBHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n-YgsFAfEeyq-N37BhvBHQ" base_Element="_n-X5pFAfEeyq-N37BhvBHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n-Ygs1AfEeyq-N37BhvBHQ" base_Element="_n-YgsVAfEeyq-N37BhvBHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n-YgtlAfEeyq-N37BhvBHQ" base_Element="_n-YgtFAfEeyq-N37BhvBHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n-ZHwlAfEeyq-N37BhvBHQ" base_Element="_n-ZHwFAfEeyq-N37BhvBHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n-aV4VAfEeyq-N37BhvBHQ" base_Element="_n-aV4FAfEeyq-N37BhvBHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n-a88VAfEeyq-N37BhvBHQ" base_Element="_n-aV4lAfEeyq-N37BhvBHQ"/>
  <UMLLabProfile:Array xmi:id="_n-a89FAfEeyq-N37BhvBHQ" base_Element="_n-a88lAfEeyq-N37BhvBHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n-bkAFAfEeyq-N37BhvBHQ" base_Element="_n-a88lAfEeyq-N37BhvBHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n-bkAlAfEeyq-N37BhvBHQ" base_Element="_n-bkAVAfEeyq-N37BhvBHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n-cLEFAfEeyq-N37BhvBHQ" base_Element="_n-bkA1AfEeyq-N37BhvBHQ"/>
  <UMLLabProfile:Array xmi:id="_n-cLE1AfEeyq-N37BhvBHQ" base_Element="_n-cLEVAfEeyq-N37BhvBHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n-cLFVAfEeyq-N37BhvBHQ" base_Element="_n-cLEVAfEeyq-N37BhvBHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n-cyIVAfEeyq-N37BhvBHQ" base_Element="_n-cyIFAfEeyq-N37BhvBHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n-dZMFAfEeyq-N37BhvBHQ" base_Element="_n-cyIlAfEeyq-N37BhvBHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n-dZM1AfEeyq-N37BhvBHQ" base_Element="_n-dZMVAfEeyq-N37BhvBHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n-eAQlAfEeyq-N37BhvBHQ" base_Element="_n-eAQFAfEeyq-N37BhvBHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n-gcgFAfEeyq-N37BhvBHQ" base_Element="_n-f1c1AfEeyq-N37BhvBHQ"/>
  <UMLLabProfile:Reference xmi:id="_n-xiQlAfEeyq-N37BhvBHQ" base_Element="_n-xiQFAfEeyq-N37BhvBHQ"/>
  <UMLLabProfile:Reference xmi:id="_n-yJUlAfEeyq-N37BhvBHQ" base_Element="_n-yJUFAfEeyq-N37BhvBHQ"/>
  <UMLLabProfile:Reference xmi:id="_n-ywYFAfEeyq-N37BhvBHQ" base_Element="_n-yJU1AfEeyq-N37BhvBHQ"/>
  <UMLLabProfile:Reference xmi:id="_n-ywY1AfEeyq-N37BhvBHQ" base_Element="_n-ywYVAfEeyq-N37BhvBHQ"/>
  <UMLLabProfile:Reference xmi:id="_n-zXclAfEeyq-N37BhvBHQ" base_Element="_n-zXcFAfEeyq-N37BhvBHQ"/>
  <UMLLabProfile:Reference xmi:id="_n-z-gFAfEeyq-N37BhvBHQ" base_Element="_n-zXc1AfEeyq-N37BhvBHQ"/>
  <UMLLabProfile:Reference xmi:id="_n-z-g1AfEeyq-N37BhvBHQ" base_Element="_n-z-gVAfEeyq-N37BhvBHQ"/>
  <UMLLabProfile:Reference xmi:id="_n-0lkFAfEeyq-N37BhvBHQ" base_Element="_n-z-hFAfEeyq-N37BhvBHQ"/>
  <UMLLabProfile:Reference xmi:id="_n-0lk1AfEeyq-N37BhvBHQ" base_Element="_n-0lkVAfEeyq-N37BhvBHQ"/>
  <UMLLabProfile:Reference xmi:id="_n-1MolAfEeyq-N37BhvBHQ" base_Element="_n-1MoFAfEeyq-N37BhvBHQ"/>
  <UMLLabProfile:Reference xmi:id="_n-1zsFAfEeyq-N37BhvBHQ" base_Element="_n-1Mo1AfEeyq-N37BhvBHQ"/>
  <UMLLabProfile:Reference xmi:id="_n-1zs1AfEeyq-N37BhvBHQ" base_Element="_n-1zsVAfEeyq-N37BhvBHQ"/>
  <UMLLabProfile:Reference xmi:id="_n-2awFAfEeyq-N37BhvBHQ" base_Element="_n-1ztFAfEeyq-N37BhvBHQ"/>
  <UMLLabProfile:Reference xmi:id="_n-2aw1AfEeyq-N37BhvBHQ" base_Element="_n-2awVAfEeyq-N37BhvBHQ"/>
  <UMLLabProfile:Reference xmi:id="_n-3B0VAfEeyq-N37BhvBHQ" base_Element="_n-2axFAfEeyq-N37BhvBHQ"/>
  <UMLLabProfile:Reference xmi:id="_n-3o4FAfEeyq-N37BhvBHQ" base_Element="_n-3B0lAfEeyq-N37BhvBHQ"/>
  <UMLLabProfile:Reference xmi:id="_n-3o41AfEeyq-N37BhvBHQ" base_Element="_n-3o4VAfEeyq-N37BhvBHQ"/>
  <UMLLabProfile:Reference xmi:id="_n-4P8FAfEeyq-N37BhvBHQ" base_Element="_n-3o5FAfEeyq-N37BhvBHQ"/>
  <UMLLabProfile:Reference xmi:id="_n-4P81AfEeyq-N37BhvBHQ" base_Element="_n-4P8VAfEeyq-N37BhvBHQ"/>
  <UMLLabProfile:Reference xmi:id="_n-43AlAfEeyq-N37BhvBHQ" base_Element="_n-43AFAfEeyq-N37BhvBHQ"/>
  <UMLLabProfile:Reference xmi:id="_n-5eEFAfEeyq-N37BhvBHQ" base_Element="_n-43A1AfEeyq-N37BhvBHQ"/>
  <UMLLabProfile:Reference xmi:id="_n-5eE1AfEeyq-N37BhvBHQ" base_Element="_n-5eEVAfEeyq-N37BhvBHQ"/>
  <UMLLabProfile:Reference xmi:id="_n-6FIlAfEeyq-N37BhvBHQ" base_Element="_n-6FIFAfEeyq-N37BhvBHQ"/>
  <UMLLabProfile:Reference xmi:id="_n-6sMFAfEeyq-N37BhvBHQ" base_Element="_n-6FI1AfEeyq-N37BhvBHQ"/>
  <UMLLabProfile:Reference xmi:id="_n-6sM1AfEeyq-N37BhvBHQ" base_Element="_n-6sMVAfEeyq-N37BhvBHQ"/>
  <UMLLabProfile:Reference xmi:id="_n-7TQFAfEeyq-N37BhvBHQ" base_Element="_n-6sNFAfEeyq-N37BhvBHQ"/>
  <UMLLabProfile:Reference xmi:id="_n-7TQ1AfEeyq-N37BhvBHQ" base_Element="_n-7TQVAfEeyq-N37BhvBHQ"/>
  <UMLLabProfile:Reference xmi:id="_n-76UFAfEeyq-N37BhvBHQ" base_Element="_n-7TRFAfEeyq-N37BhvBHQ"/>
  <UMLLabProfile:Reference xmi:id="_n-76U1AfEeyq-N37BhvBHQ" base_Element="_n-76UVAfEeyq-N37BhvBHQ"/>
  <UMLLabProfile:Reference xmi:id="_n-8hYlAfEeyq-N37BhvBHQ" base_Element="_n-8hYFAfEeyq-N37BhvBHQ"/>
  <UMLLabProfile:Reference xmi:id="_n-9IcFAfEeyq-N37BhvBHQ" base_Element="_n-8hY1AfEeyq-N37BhvBHQ"/>
  <UMLLabProfile:Reference xmi:id="_n-9Ic1AfEeyq-N37BhvBHQ" base_Element="_n-9IcVAfEeyq-N37BhvBHQ"/>
  <UMLLabProfile:Reference xmi:id="_n-9vgFAfEeyq-N37BhvBHQ" base_Element="_n-9IdFAfEeyq-N37BhvBHQ"/>
  <UMLLabProfile:Reference xmi:id="_n-9vg1AfEeyq-N37BhvBHQ" base_Element="_n-9vgVAfEeyq-N37BhvBHQ"/>
  <UMLLabProfile:Reference xmi:id="_n--WkFAfEeyq-N37BhvBHQ" base_Element="_n-9vhFAfEeyq-N37BhvBHQ"/>
  <UMLLabProfile:Reference xmi:id="_n--9oFAfEeyq-N37BhvBHQ" base_Element="_n--WkVAfEeyq-N37BhvBHQ"/>
  <UMLLabProfile:Reference xmi:id="_n--9o1AfEeyq-N37BhvBHQ" base_Element="_n--9oVAfEeyq-N37BhvBHQ"/>
  <UMLLabProfile:Reference xmi:id="_n-_ksFAfEeyq-N37BhvBHQ" base_Element="_n--9pFAfEeyq-N37BhvBHQ"/>
  <UMLLabProfile:Reference xmi:id="_n-_ks1AfEeyq-N37BhvBHQ" base_Element="_n-_ksVAfEeyq-N37BhvBHQ"/>
  <UMLLabProfile:Reference xmi:id="_n_ALwFAfEeyq-N37BhvBHQ" base_Element="_n-_ktFAfEeyq-N37BhvBHQ"/>
  <UMLLabProfile:Reference xmi:id="_n_ALw1AfEeyq-N37BhvBHQ" base_Element="_n_ALwVAfEeyq-N37BhvBHQ"/>
  <UMLLabProfile:Reference xmi:id="_n_Ay0lAfEeyq-N37BhvBHQ" base_Element="_n_Ay0FAfEeyq-N37BhvBHQ"/>
  <UMLLabProfile:Reference xmi:id="_n_BZ4FAfEeyq-N37BhvBHQ" base_Element="_n_Ay01AfEeyq-N37BhvBHQ"/>
  <UMLLabProfile:Reference xmi:id="_n_BZ41AfEeyq-N37BhvBHQ" base_Element="_n_BZ4VAfEeyq-N37BhvBHQ"/>
  <UMLLabProfile:Reference xmi:id="_n_CA8FAfEeyq-N37BhvBHQ" base_Element="_n_BZ5FAfEeyq-N37BhvBHQ"/>
  <UMLLabProfile:Reference xmi:id="_n_CA81AfEeyq-N37BhvBHQ" base_Element="_n_CA8VAfEeyq-N37BhvBHQ"/>
  <UMLLabProfile:Reference xmi:id="_n_CoAlAfEeyq-N37BhvBHQ" base_Element="_n_CoAFAfEeyq-N37BhvBHQ"/>
  <UMLLabProfile:Reference xmi:id="_n_DPEFAfEeyq-N37BhvBHQ" base_Element="_n_CoA1AfEeyq-N37BhvBHQ"/>
  <UMLLabProfile:Reference xmi:id="_n_DPE1AfEeyq-N37BhvBHQ" base_Element="_n_DPEVAfEeyq-N37BhvBHQ"/>
  <UMLLabProfile:Reference xmi:id="_n_D2IFAfEeyq-N37BhvBHQ" base_Element="_n_DPFFAfEeyq-N37BhvBHQ"/>
  <UMLLabProfile:Reference xmi:id="_n_D2I1AfEeyq-N37BhvBHQ" base_Element="_n_D2IVAfEeyq-N37BhvBHQ"/>
  <UMLLabProfile:Reference xmi:id="_n_EdMFAfEeyq-N37BhvBHQ" base_Element="_n_D2JFAfEeyq-N37BhvBHQ"/>
  <UMLLabProfile:Reference xmi:id="_n_EdM1AfEeyq-N37BhvBHQ" base_Element="_n_EdMVAfEeyq-N37BhvBHQ"/>
  <UMLLabProfile:Reference xmi:id="_n_FEQlAfEeyq-N37BhvBHQ" base_Element="_n_FEQFAfEeyq-N37BhvBHQ"/>
  <UMLLabProfile:Reference xmi:id="_n_FrUFAfEeyq-N37BhvBHQ" base_Element="_n_FEQ1AfEeyq-N37BhvBHQ"/>
  <UMLLabProfile:Reference xmi:id="_n_FrU1AfEeyq-N37BhvBHQ" base_Element="_n_FrUVAfEeyq-N37BhvBHQ"/>
  <UMLLabProfile:Reference xmi:id="_n_GSYFAfEeyq-N37BhvBHQ" base_Element="_n_FrVFAfEeyq-N37BhvBHQ"/>
  <UMLLabProfile:Reference xmi:id="_n_G5c1AfEeyq-N37BhvBHQ" base_Element="_n_G5cVAfEeyq-N37BhvBHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZVTiAFAgEeyq-N37BhvBHQ" base_Element="_ZVK_IFAgEeyq-N37BhvBHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_9PUaAFBnEeyBJLasiEs0UA" base_Element="_9PQIkFBnEeyBJLasiEs0UA"/>
  <UMLLabProfile:Array xmi:id="_oh7SAFB0EeypD_LFN0DTcQ" base_Element="_n99p8VAfEeyq-N37BhvBHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oiEb8FB0EeypD_LFN0DTcQ" base_Element="_oiD04FB0EeypD_LFN0DTcQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oiFDAFB0EeypD_LFN0DTcQ" base_Element="_oiEb8VB0EeypD_LFN0DTcQ"/>
</xmi:XMI>
